/*
 * frmRubros.java
 *
 * Created on 1 de noviembre de 2007, 09:10 PM
 */
package bean;

import java.util.Iterator;
import java.util.List;
import javax.swing.table.TableColumn;

import java.math.BigDecimal;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import jcinform.persistencia.Carreras;
import jcinform.persistencia.Empleados;
import jcinform.persistencia.Periodos;
import jcinform.persistencia.Rubros;
import jcinform.persistencia.RubrosMatriculaPeriodo;
import jcinform.procesos.Administrador;
import util.general;

/**
 *
 * @author Francisco
 */
public class frmRubrosMatriculas extends javax.swing.JInternalFrame {

    public boolean grabar = false;
    public boolean modificar = false;
    Administrador adm;
    public Periodos periodoActual;
    public Empleados empleadoActual;

    /**
     * Creates new form frmRubros
     */
    public frmRubrosMatriculas() {
        initComponents();
        ancho();

    }

    public frmRubrosMatriculas(Administrador adm1) {

        adm = adm1;
        this.initComponents();
        listar();

        lblCodigo.setVisible(false);
        codigoRubro.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtNombre = new javax.swing.JFormattedTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableRubros = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        btnNuevo = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        valorNuevos = new javax.swing.JFormattedTextField();
        codigoRubro = new javax.swing.JFormattedTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        lblCodigo = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        valorAntiguos = new javax.swing.JFormattedTextField();
        cmbRubros = new javax.swing.JComboBox();
        jPanel2 = new javax.swing.JPanel();
        cmbCarreras = new javax.swing.JComboBox();

        setBackground(new java.awt.Color(236, 246, 255));
        setTitle("Rubros por matrícula");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/images/rubros.gif"))); // NOI18N
        getContentPane().setLayout(null);

        txtNombre.setEditable(false);
        getContentPane().add(txtNombre);
        txtNombre.setBounds(110, 140, 340, 25);

        tableRubros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Código", "Nombre", "V.Nuevo", "V.Antiguo", ".."
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Double.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableRubros.setSelectionBackground(new java.awt.Color(236, 246, 255));
        tableRubros.setSelectionForeground(new java.awt.Color(0, 0, 0));
        tableRubros.setShowHorizontalLines(false);
        tableRubros.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableRubrosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableRubros);
        tableRubros.getColumnModel().getColumn(0).setResizable(false);
        tableRubros.getColumnModel().getColumn(0).setPreferredWidth(10);
        tableRubros.getColumnModel().getColumn(1).setResizable(false);
        tableRubros.getColumnModel().getColumn(1).setPreferredWidth(200);
        tableRubros.getColumnModel().getColumn(2).setResizable(false);
        tableRubros.getColumnModel().getColumn(3).setResizable(false);
        tableRubros.getColumnModel().getColumn(4).setResizable(false);
        tableRubros.getColumnModel().getColumn(4).setPreferredWidth(0);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(10, 280, 490, 140);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Rubro:");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(20, 110, 80, 20);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel1.setLayout(null);

        btnNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/new.gif"))); // NOI18N
        btnNuevo.setText("Nuevo");
        btnNuevo.setEnabled(false);
        btnNuevo.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });
        jPanel1.add(btnNuevo);
        btnNuevo.setBounds(10, 10, 105, 30);

        btnModificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/modificar.gif"))); // NOI18N
        btnModificar.setText("Modificar");
        btnModificar.setEnabled(false);
        btnModificar.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });
        jPanel1.add(btnModificar);
        btnModificar.setBounds(120, 10, 110, 30);

        btnSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/exit.gif"))); // NOI18N
        btnSalir.setText("Salir");
        btnSalir.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });
        jPanel1.add(btnSalir);
        btnSalir.setBounds(350, 10, 105, 30);

        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/cancel.gif"))); // NOI18N
        btnEliminar.setText("Eliminar");
        btnEliminar.setEnabled(false);
        btnEliminar.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        jPanel1.add(btnEliminar);
        btnEliminar.setBounds(240, 10, 105, 30);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(20, 220, 480, 50);

        valorNuevos.setEditable(false);
        getContentPane().add(valorNuevos);
        valorNuevos.setBounds(110, 170, 110, 25);

        codigoRubro.setEditable(false);
        getContentPane().add(codigoRubro);
        codigoRubro.setBounds(140, 200, 60, 20);

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Valor Nuevos:");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(10, 170, 90, 20);

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Valor Antiguos:");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(220, 170, 100, 30);

        lblCodigo.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCodigo.setText("Código:");
        getContentPane().add(lblCodigo);
        lblCodigo.setBounds(50, 200, 80, 10);

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(102, 102, 102));
        jLabel10.setText("Crear, Actualizar, Modificar Rubros x Matricula .......");
        getContentPane().add(jLabel10);
        jLabel10.setBounds(20, 20, 290, 13);

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 51, 51));
        jLabel8.setText("Rubros que se cobrarán en Matricula ..::..");
        getContentPane().add(jLabel8);
        jLabel8.setBounds(20, 0, 270, 15);

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/fondoInicio.jpg"))); // NOI18N
        getContentPane().add(jLabel7);
        jLabel7.setBounds(0, 0, 520, 40);

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Rubro:");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(10, 140, 90, 20);

        valorAntiguos.setEditable(false);
        getContentPane().add(valorAntiguos);
        valorAntiguos.setBounds(340, 170, 110, 25);

        cmbRubros.setEnabled(false);
        cmbRubros.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbRubrosItemStateChanged(evt);
            }
        });
        getContentPane().add(cmbRubros);
        cmbRubros.setBounds(110, 110, 340, 25);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Seleccione un Carrera"));
        jPanel2.setLayout(null);

        cmbCarreras.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        cmbCarreras.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbCarrerasItemStateChanged(evt);
            }
        });
        jPanel2.add(cmbCarreras);
        cmbCarreras.setBounds(8, 20, 470, 25);

        getContentPane().add(jPanel2);
        jPanel2.setBounds(10, 40, 490, 60);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
// TODO add your handling code here:
        if (grabar == true) {
            grabar = false;
            modificar = false;
            this.valorNuevos.setEditable(false);
            this.btnNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/agregar.png")));
            this.btnNuevo.setLabel("Nuevo");
            this.btnModificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/modificar.gif")));
            this.btnModificar.setLabel("Modificar");
//            this.txtNombre.setEditable(false);
        }
        this.setVisible(false);
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
// TODO add your handling code here:

        if (grabar == false) {
//            this.txtNombre.setEditable(true);
//            this.unidadContable.setEditable(true);
//            this.codigoContable.setEditable(true);

            this.txtNombre.requestFocusInWindow();
            this.txtNombre.setText("");
            this.codigoRubro.setText("");
            this.valorNuevos.setText("");
//            this.cmbCarreras.setEnabled(true);
            this.cmbRubros.setEnabled(true);
            this.valorNuevos.setEditable(true);
            this.valorAntiguos.setText("");
            this.valorAntiguos.setEditable(true);

            this.btnNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/guardar.png")));
            this.btnNuevo.setLabel("Guardar");
            this.btnModificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/cancelar.png")));
            this.btnModificar.setLabel("Cancelar");

            grabar = true;
            modificar = false;
        } else if (grabar == true) {
            if(cmbCarreras.getSelectedIndex()<=0){
                JOptionPane.showMessageDialog(this, "Seleccione una Carrera...!","JC INFORM",JOptionPane.WARNING_MESSAGE);
                return;
            }
            RubrosMatriculaPeriodo rub = new RubrosMatriculaPeriodo();
            rub.setIdRubros(new Rubros(((general) cmbRubros.getSelectedItem()).getCodigo()));
            rub.setIdCarreras(new Carreras(((general) cmbCarreras.getSelectedItem()).getCodigo()));
            rub.setIdPeriodos(periodoActual);
            rub.setValorAntigua(new BigDecimal(valorAntiguos.getText()));
            rub.setValorNueva(new BigDecimal(valorNuevos.getText()));
            if (codigoRubro.getText().isEmpty()) {
                rub.setIdRubrosMatriculaPeriodo(adm.getNuevaClave("RubrosMatriculaPeriodo", "idRubrosMatriculaPeriodo"));
                adm.guardar(rub);
            } else {
                rub.setIdRubrosMatriculaPeriodo(new Integer(codigoRubro.getText()));
                adm.actualizar(rub);
            }


            this.valorNuevos.setEditable(false);
            this.btnNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/new.gif")));
            this.btnNuevo.setLabel("Nuevo");
            this.btnModificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/modificar.gif")));
            this.btnModificar.setLabel("Modificar");
            grabar = false;
            modificar = false;
//            this.txtNombre.setEditable(false);
//            this.cmbCarreras.setEnabled(false);
            this.cmbRubros.setEnabled(false);
               general g = (general) cmbCarreras.getSelectedItem();
            buscarRubros(g.getCodigo());

        }

    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
// TODO add your handling code here:

        RubrosMatriculaPeriodo rub = new RubrosMatriculaPeriodo();
        rub.setIdRubrosMatriculaPeriodo(Integer.parseInt(codigoRubro.getText()));
        adm.eliminarObjeto(RubrosMatriculaPeriodo.class, rub.getIdRubrosMatriculaPeriodo());
        general g = (general) cmbCarreras.getSelectedItem();
        buscarRubros(g.getCodigo());
        tableRubros.repaint();
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
// TODO add your handling code here:
        if (grabar == false) {
            if (codigoRubro.getText().isEmpty()) {
                return;
            }
            this.txtNombre.setEditable(true);
            this.txtNombre.requestFocusInWindow();
            this.valorNuevos.setEditable(true);
            this.valorAntiguos.setEditable(true);
            this.btnNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/guardar.png")));
            this.btnNuevo.setLabel("Guardar");
            this.btnModificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/cancelar.png")));
            this.btnModificar.setLabel("Cancelar");
            modificar = true;
            grabar = true;
        } else {
            grabar = false;
            modificar = false;
            this.valorNuevos.setEditable(false);
            this.btnNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/agregar.png")));
            this.btnNuevo.setLabel("Nuevo");
            this.btnModificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/modificar.gif")));
            this.btnModificar.setLabel("Modificar");
            this.txtNombre.setEditable(false);
        }

    }//GEN-LAST:event_btnModificarActionPerformed

    private void tableRubrosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableRubrosMouseClicked
// TODO add your handling code here:
        int fila = tableRubros.getSelectedRow();
        this.codigoRubro.setText(Integer.parseInt(tableRubros.getValueAt(fila, 0).toString()) + "");
        this.txtNombre.setText((String) this.tableRubros.getValueAt(fila, 1));
        this.valorNuevos.setText(((BigDecimal) tableRubros.getValueAt(fila, 2)) + "");
        //boolean val = new Boolean(tableRubros.getValueAt(fila, 3).toString());
        
        int items = cmbRubros.getItemCount();
        for (int i = 0; i < items; i++) {
            if(((general)cmbRubros.getItemAt(i)).getCodigo().equals(Integer.parseInt(tableRubros.getValueAt(fila, 4).toString()))){
                cmbRubros.setSelectedIndex(i); 
                break;
            }
        }
//        this.chkEscredito.setSelected(Boolean.valueOf(val));
//        this.codigoContable.setText((String) this.tableRubros.getValueAt(fila, 4));
//        this.unidadContable.setText((String) this.tableRubros.getValueAt(fila, 5));

        //boolean val2 = new Boolean(.toString());
//        this.chkEstado.setSelected((Boolean)tableRubros.getValueAt(fila,3));
    }//GEN-LAST:event_tableRubrosMouseClicked

    private void cmbRubrosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbRubrosItemStateChanged
        // TODO add your handling code here:
        if (cmbRubros.getSelectedIndex() > 0) {
            general g = (general) cmbRubros.getSelectedItem();
            g.getCodigo();
            Rubros r = (Rubros) adm.buscarClave(g.getCodigo(), Rubros.class);
            txtNombre.setText(r.getNombre());
            valorNuevos.setText("" + r.getValor());
            valorAntiguos.setText("" + r.getValor());
        }
    }//GEN-LAST:event_cmbRubrosItemStateChanged

    private void cmbCarrerasItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbCarrerasItemStateChanged
        // TODO add your handling code here:
        if (cmbCarreras.getSelectedIndex() > 0) {
            cmbRubros.setSelectedIndex(0);
              txtNombre.setText("");
            valorNuevos.setText("0");
            valorAntiguos.setText("0");
            general g = (general) cmbCarreras.getSelectedItem();
            buscarRubros(g.getCodigo());
            tableRubros.repaint();
            btnEliminar.setEnabled(true);
            btnModificar.setEnabled(true);
            btnNuevo.setEnabled(true);
        }else{
            try {
                if(cmbRubros.getItemCount()>0){
                cmbRubros.setSelectedIndex(0);
                }
            btnEliminar.setEnabled(false);
            btnModificar.setEnabled(false);
            btnNuevo.setEnabled(false);
            } catch (Exception e) {
            }
             
        }
    }//GEN-LAST:event_cmbCarrerasItemStateChanged
    void buscarRubros(Integer idCarrera) {
        List<RubrosMatriculaPeriodo> lista = adm.query("Select o from RubrosMatriculaPeriodo as o "
                + " where o.idCarreras.idCarreras =  '" + idCarrera + "' "
                + " and o.idPeriodos.idPeriodos = '" + periodoActual.getIdPeriodos() + "' ");
        DefaultTableModel dtm = (DefaultTableModel) tableRubros.getModel();
        dtm.getDataVector().removeAllElements();
        for (Iterator<RubrosMatriculaPeriodo> it = lista.iterator(); it.hasNext();) {
            RubrosMatriculaPeriodo rubrosMatriculaPeriodo = it.next();
            Object obj[] = new Object[7];
            obj[0] = rubrosMatriculaPeriodo.getIdRubrosMatriculaPeriodo();
            obj[1] = rubrosMatriculaPeriodo.getIdRubros().getNombre();
            obj[2] = rubrosMatriculaPeriodo.getValorNueva();
            obj[3] = rubrosMatriculaPeriodo.getValorAntigua();
            obj[4] = rubrosMatriculaPeriodo.getIdRubros().getIdRubros();
            dtm.addRow(obj);
        }

        tableRubros.setModel(dtm);
    }

    public void listar() {
        List<Carreras> listaCarreras = adm.query("Select o from Carreras as o ");
        general gen = new general(-1, "- SELECCIONE -");
        cmbCarreras.addItem(gen);
        for (Iterator<Carreras> it = listaCarreras.iterator(); it.hasNext();) {
            Carreras carreras = it.next();
            gen = new general(carreras.getIdCarreras(), carreras.getNombre() + "|" + carreras.getIdJornada().getNombre() + "|" + carreras.getIdEscuela().getNombre() + "|" + carreras.getIdModalidad().getNombre());
            cmbCarreras.addItem(gen);
        }

        listaCarreras = null;

        List<Rubros> listaRubros = adm.query("Select o from Rubros as o where o.eselcredito = false ");
        gen = new general(-1, "- SELECCIONE -");
        cmbRubros.addItem(gen);
        for (Iterator<Rubros> it = listaRubros.iterator(); it.hasNext();) {
            Rubros rubros = it.next();
            gen = new general(rubros.getIdRubros(), rubros.getNombre());
            cmbRubros.addItem(gen);
        }
        listaRubros = null;
        gen = null;

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JButton btnSalir;
    private javax.swing.JComboBox cmbCarreras;
    private javax.swing.JComboBox cmbRubros;
    private javax.swing.JFormattedTextField codigoRubro;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCodigo;
    private javax.swing.JTable tableRubros;
    private javax.swing.JFormattedTextField txtNombre;
    private javax.swing.JFormattedTextField valorAntiguos;
    private javax.swing.JFormattedTextField valorNuevos;
    // End of variables declaration//GEN-END:variables

    public void ancho() {
        TableColumn column;
        for (int i = 0; i < 3; i++) {
            column = this.tableRubros.getColumnModel().getColumn(i);
            if (i == 0) {
                column.setPreferredWidth(50);
            }
            if (i == 1) {
                column.setPreferredWidth(350);
            }
            if (i == 2) {
                column.setPreferredWidth(100);
            }



        }

    }

    public Periodos getPeriodoActual() {
        return periodoActual;
    }

    public void setPeriodoActual(Periodos periodoActual) {
        this.periodoActual = periodoActual;
    }

    public Empleados getEmpleadoActual() {
        return empleadoActual;
    }

    public void setEmpleadoActual(Empleados empleadoActual) {
        this.empleadoActual = empleadoActual;
    }
}
