/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * frmPaciente.java
 *
 * Created on 06/05/2011, 02:46:44 PM
 */
package historias.formas;

import java.awt.Color;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.IOException;
import java.io.OutputStream;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.text.BadLocationException;
import javax.swing.text.DefaultEditorKit.CopyAction;
import javax.swing.text.DefaultEditorKit.PasteAction;
import javax.swing.text.StyledEditorKit;
import javax.swing.text.html.HTMLDocument;
import javax.swing.text.html.HTMLEditorKit;
import javax.swing.text.rtf.RTFEditorKit;
import persistencia.Pacientes;
import procesos.Administrador;

/**
 *
 * @author Familia Jadan Cahueñ
 */
public class frmPaciente extends javax.swing.JInternalFrame {

    Administrador adm = null;
    public boolean grabar = false;
    public boolean modificar = false;
    private frmPrincipal principal;
    private Pacientes usuarioObj;
    private HTMLEditorKit documento;
    private RTFEditorKit kitrtf;
    String separador = File.separatorChar + "";
    static WorkingDirectory w = new WorkingDirectory();
    String ubicacionDirectorio = w.get() + separador;

    /** Creates new form frmPaciente */
    /** Creates new form frmPacientes */
    public frmPaciente(frmPrincipal lo, Administrador adm1) {
//        super(parent, modal);
////        this.desktopContenedor = lo.contenedor;
        adm = adm1;

        initComponents();
        panelencontrados1.setVisible(false);
//                llenarCombo();
        this.setSize(615, 508);
        usuarioObj = new Pacientes();
        principal = lo;
        documento = new HTMLEditorKit();
        kitrtf = new RTFEditorKit();
        panel.setEditorKit(kitrtf);
//       panel.setContentType("text/html");

//        documento = new DefaultStyledDocument(contexto);
        panel.setContentType("text/html");
        panel.setContentType("text/html");
        HTMLDocument doc = (HTMLDocument) documento.createDefaultDocument();
        panel.setDocument(doc);
            txtBusqueda.requestFocusInWindow();
            
            
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel11 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtBusqueda = new javax.swing.JTextField();
        panelencontrados1 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        encontrados1 = new javax.swing.JList();
        txtnombres = new javax.swing.JFormattedTextField();
        txtapellidos = new javax.swing.JFormattedTextField();
        txtdireccion = new javax.swing.JFormattedTextField();
        txttelefono = new javax.swing.JFormattedTextField();
        txtemail = new javax.swing.JFormattedTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jToolBar1 = new javax.swing.JToolBar();
        negrilla = new javax.swing.JButton(new StyledEditorKit.BoldAction());
        kursica = new javax.swing.JButton(new StyledEditorKit.ItalicAction());
        subline = new javax.swing.JButton(new StyledEditorKit.UnderlineAction());
        jButton2 = new javax.swing.JButton(new CopyAction());
        jButton3 = new javax.swing.JButton(new PasteAction());
        jLabel8 = new javax.swing.JLabel();
        fuente = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        tipo = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();
        color = new javax.swing.JComboBox();
        botonesPanel = new javax.swing.JPanel();
        btnAgregar = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        panel = new javax.swing.JTextPane();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        codigo = new javax.swing.JFormattedTextField();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();

        jLabel11.setText("Email: ");

        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Pacientes");

        jPanel1.setLayout(null);

        jLabel1.setText("(*)Apellidos: ");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(46, 90, 63, 14);

        txtBusqueda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBusquedaKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBusquedaKeyReleased(evt);
            }
        });
        jPanel1.add(txtBusqueda);
        txtBusqueda.setBounds(119, 11, 300, 20);

        panelencontrados1.setBackground(javax.swing.UIManager.getDefaults().getColor("ToolTip.background"));
        panelencontrados1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        panelencontrados1.setLayout(null);

        encontrados1.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Listado de Pacientes" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        encontrados1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        encontrados1.setAlignmentX(0.1F);
        encontrados1.setAlignmentY(0.1F);
        encontrados1.setVisibleRowCount(14);
        encontrados1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                encontrados1MouseClicked(evt);
            }
        });
        encontrados1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                encontrados1KeyPressed(evt);
            }
        });
        jScrollPane3.setViewportView(encontrados1);

        panelencontrados1.add(jScrollPane3);
        jScrollPane3.setBounds(5, 5, 290, 140);

        jPanel1.add(panelencontrados1);
        panelencontrados1.setBounds(120, 30, 300, 150);

        txtnombres.setEditable(false);
        jPanel1.add(txtnombres);
        txtnombres.setBounds(110, 70, 214, 20);

        txtapellidos.setEditable(false);
        jPanel1.add(txtapellidos);
        txtapellidos.setBounds(110, 90, 214, 20);

        txtdireccion.setEditable(false);
        jPanel1.add(txtdireccion);
        txtdireccion.setBounds(110, 110, 214, 20);

        txttelefono.setEditable(false);
        txttelefono.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txttelefonoActionPerformed(evt);
            }
        });
        jPanel1.add(txttelefono);
        txttelefono.setBounds(110, 130, 111, 20);

        txtemail.setEditable(false);
        jPanel1.add(txtemail);
        txtemail.setBounds(110, 150, 214, 20);

        jLabel2.setText("Dirección: ");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(60, 110, 50, 14);

        jLabel3.setText("Teléfono: ");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(60, 130, 49, 14);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel4.setText("HISTORIAL DE VISITAS ");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(40, 180, 160, 14);

        jLabel5.setText("Los campos con (*) son obligatorios");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(110, 50, 230, 14);

        jLabel6.setText("Búsquedas: ");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(50, 14, 59, 14);

        jLabel7.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.add(jLabel7);
        jLabel7.setBounds(463, 53, 89, 111);

        jToolBar1.setRollover(true);

        negrilla.setFont(new java.awt.Font("Tahoma", 1, 12));
        negrilla.setText("N");
        negrilla.setMargin(new java.awt.Insets(1, 1, 1, 1));
        negrilla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                negrillaActionPerformed(evt);
            }
        });
        jToolBar1.add(negrilla);

        kursica.setFont(new java.awt.Font("Tahoma", 2, 12));
        kursica.setText("K");
        kursica.setMargin(new java.awt.Insets(1, 1, 1, 1));
        kursica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kursicaActionPerformed(evt);
            }
        });
        jToolBar1.add(kursica);

        subline.setFont(new java.awt.Font("Tahoma", 0, 12));
        subline.setText("S");
        subline.setMargin(new java.awt.Insets(1, 1, 1, 1));
        subline.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sublineActionPerformed(evt);
            }
        });
        jToolBar1.add(subline);

        jButton2.setFont(new java.awt.Font("Tahoma", 0, 9));
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/editcopy.gif"))); // NOI18N
        jButton2.setText("Copy");
        jButton2.setMargin(new java.awt.Insets(1, 1, 1, 1));
        jToolBar1.add(jButton2);

        jButton3.setFont(new java.awt.Font("Tahoma", 0, 9));
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/editpaste.gif"))); // NOI18N
        jButton3.setText("Pegar");
        jButton3.setMargin(new java.awt.Insets(1, 1, 1, 1));
        jToolBar1.add(jButton3);

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 9));
        jLabel8.setText("Tamaño:");
        jToolBar1.add(jLabel8);

        fuente.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "", "6", "8", "10", "12", "13", "14", "15", "16", "17", "18", "19", "20", "22", "24", "26", "28", "30", "36", "40", "50" }));
        fuente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fuenteActionPerformed(evt);
            }
        });
        jToolBar1.add(fuente);

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 9));
        jLabel9.setText("Tipo:");
        jToolBar1.add(jLabel9);

        tipo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "", "Tahoma", "Arial", "Serif", "Verdana" }));
        tipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tipoActionPerformed(evt);
            }
        });
        jToolBar1.add(tipo);

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 9));
        jLabel10.setText("Color:");
        jToolBar1.add(jLabel10);

        color.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "", "rojo", "verde", "amarillo", "azul", "negro", "gris" }));
        color.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                colorActionPerformed(evt);
            }
        });
        jToolBar1.add(color);

        jPanel1.add(jToolBar1);
        jToolBar1.setBounds(40, 200, 520, 20);

        botonesPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        botonesPanel.setLayout(null);

        btnAgregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/agregar.png"))); // NOI18N
        btnAgregar.setMnemonic('N');
        btnAgregar.setText("Nuevo");
        btnAgregar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAgregar.setMargin(new java.awt.Insets(2, 2, 2, 2));
        btnAgregar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });
        btnAgregar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnAgregarKeyPressed(evt);
            }
        });
        botonesPanel.add(btnAgregar);
        btnAgregar.setBounds(260, 10, 60, 50);

        btnModificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/editar.png"))); // NOI18N
        btnModificar.setMnemonic('M');
        btnModificar.setText("Modificar");
        btnModificar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnModificar.setMargin(new java.awt.Insets(1, 1, 1, 1));
        btnModificar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });
        btnModificar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnModificarKeyPressed(evt);
            }
        });
        botonesPanel.add(btnModificar);
        btnModificar.setBounds(320, 10, 60, 50);

        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/eliminar.png"))); // NOI18N
        btnEliminar.setMnemonic('E');
        btnEliminar.setText("Eliminar");
        btnEliminar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnEliminar.setMargin(new java.awt.Insets(2, 2, 2, 2));
        btnEliminar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        btnEliminar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnEliminarKeyPressed(evt);
            }
        });
        botonesPanel.add(btnEliminar);
        btnEliminar.setBounds(380, 10, 60, 50);

        btnSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/salir.png"))); // NOI18N
        btnSalir.setMnemonic('S');
        btnSalir.setText("Salir");
        btnSalir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSalir.setMargin(new java.awt.Insets(2, 2, 2, 2));
        btnSalir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });
        btnSalir.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnSalirKeyPressed(evt);
            }
        });
        botonesPanel.add(btnSalir);
        btnSalir.setBounds(440, 10, 60, 50);

        jPanel1.add(botonesPanel);
        botonesPanel.setBounds(50, 390, 510, 70);

        panel.setEditable(false);
        panel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                panelKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(panel);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(40, 230, 520, 160);

        jLabel12.setText("Email: ");
        jPanel1.add(jLabel12);
        jLabel12.setBounds(80, 150, 31, 14);

        jLabel13.setText("(*)Nombres: ");
        jPanel1.add(jLabel13);
        jLabel13.setBounds(46, 70, 63, 14);

        codigo.setBorder(null);
        codigo.setEditable(false);
        codigo.setFont(new java.awt.Font("Tahoma", 0, 5)); // NOI18N
        jPanel1.add(codigo);
        codigo.setBounds(430, 10, 20, 6);

        jTabbedPane1.addTab("Datos del Paciente", jPanel1);
        jTabbedPane1.addTab("Tratamientos", jPanel2);
        jTabbedPane1.addTab("Observaciones", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 602, Short.MAX_VALUE)
                .addGap(16, 16, 16))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 500, Short.MAX_VALUE)
                .addGap(16, 16, 16))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtBusquedaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBusquedaKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == evt.VK_DOWN) {
            encontrados1.setSelectedIndex(0);
            encontrados1.requestFocusInWindow();
        } else if (evt.getKeyCode() == evt.VK_ESCAPE) {
            panelencontrados1.setVisible(false);
        } else {
        }
}//GEN-LAST:event_txtBusquedaKeyPressed

    private void txtBusquedaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBusquedaKeyReleased
        // TODO add your handling code here:
        if (!txtBusqueda.getText().isEmpty()) {
            List<Pacientes> encon = adm.query("Select o from Pacientes as o "
                    + "where o.apellido like  '%" + txtBusqueda.getText().trim() + "%' order by o.apellido");
            if (encon.size() > 0) {
                DefaultListModel dtm = new DefaultListModel();
                dtm.removeAllElements();
                encontrados1.setModel(dtm);
                int j = 0;
                for (Pacientes est : encon) {
                    dtm.add(j, est);
                    j++;
                }
                encontrados1.setModel(dtm);
                this.panelencontrados1.setVisible(true);
            } else {
                DefaultListModel dtm = new DefaultListModel();
                dtm.removeAllElements();
                encontrados1.setModel(dtm);
                this.panelencontrados1.setVisible(false);
            }

        } else {
            DefaultListModel dtm = new DefaultListModel();
            dtm.removeAllElements();
            encontrados1.setModel(dtm);
            this.panelencontrados1.setVisible(false);
        }
}//GEN-LAST:event_txtBusquedaKeyReleased

    private void encontrados1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_encontrados1MouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2) {
            this.panelencontrados1.setVisible(false);
            Pacientes fac = (Pacientes) this.encontrados1.getSelectedValue();
            llenar(fac);
        }
}//GEN-LAST:event_encontrados1MouseClicked

    private void encontrados1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_encontrados1KeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == evt.VK_ENTER) {
            this.panelencontrados1.setVisible(false);
            Pacientes fac = (Pacientes) this.encontrados1.getSelectedValue();
            llenar(fac);
            //noTicket.setText(fac.getTicket());
            //btnAgregar.requestFocusInWindow();
        } else if (evt.getKeyCode() == evt.VK_UP && encontrados1.getSelectedIndex() == 0) {
            this.txtBusqueda.requestFocusInWindow();
        } else if (evt.getKeyCode() == evt.VK_ESCAPE) {
            this.panelencontrados1.setVisible(false);

        } else {
        }
}//GEN-LAST:event_encontrados1KeyPressed

    private void txttelefonoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txttelefonoActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_txttelefonoActionPerformed

    private void negrillaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_negrillaActionPerformed
        // TODO add your handling code here:
        //    new StyledEditorKit.BoldAction();
        //    JButton b = new JButton(new StyledEditorKit.BoldAction());
        //    b = new JButton(new StyledEditorKit.UnderlineAction());
        //    b = new JButton(new StyledEditorKit.ItalicAction());
        //  b.doClick();
        //  b = null;
}//GEN-LAST:event_negrillaActionPerformed

    private void kursicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kursicaActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_kursicaActionPerformed

    private void sublineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sublineActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_sublineActionPerformed

    private void fuenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fuenteActionPerformed
        // TODO add your handling code here:
        String tamanio = (String) fuente.getSelectedItem();
        JButton b = new JButton(new StyledEditorKit.FontSizeAction("" + tamanio, new Integer(tamanio)));
        b.doClick();
        b = null;
}//GEN-LAST:event_fuenteActionPerformed

    private void tipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tipoActionPerformed
        // TODO add your handling code here:
        String tamanio = (String) tipo.getSelectedItem();
        JButton b = new JButton(new StyledEditorKit.FontFamilyAction("" + tamanio, tamanio));
        b.doClick();
        b = null;
}//GEN-LAST:event_tipoActionPerformed

    private void colorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_colorActionPerformed
        // TODO add your handling code here:
        String tamanio = (String) color.getSelectedItem();
        JButton b = null;
        if (tamanio.equals("rojo")) {
            b = new JButton(new StyledEditorKit.ForegroundAction("Color", Color.red));
        } else if (tamanio.equals("negro")) {
            b = new JButton(new StyledEditorKit.ForegroundAction("Color", Color.black));
        } else if (tamanio.equals("gris")) {
            b = new JButton(new StyledEditorKit.ForegroundAction("Color", Color.gray));
        } else if (tamanio.equals("amarillo")) {
            b = new JButton(new StyledEditorKit.ForegroundAction("Color", Color.yellow));
        } else if (tamanio.equals("verde")) {
            b = new JButton(new StyledEditorKit.ForegroundAction("Color", Color.green));
        } else if (tamanio.equals("azul")) {
            b = new JButton(new StyledEditorKit.ForegroundAction("Color", Color.blue));
        } else {
            b = new JButton(new StyledEditorKit.ForegroundAction("Color", Color.black));
            return;
        }

        b.doClick();
        b = null;
}//GEN-LAST:event_colorActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed

        // TODO add your handling code here:
        if (principal.permisos.getGuardar()) {
            if (grabar == false) {
                usuarioObj = new Pacientes(0);
                this.btnAgregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/guardar.png")));
                this.btnAgregar.setLabel("Guardar");
                this.btnModificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/cancelar.png")));
                this.btnModificar.setLabel("Cancelar");
                grabar = true;
                modificar = false;
                habilitar(true);
                llenar(usuarioObj);
                txtnombres.requestFocusInWindow();
                btnAgregar.setMnemonic('G');
                btnModificar.setMnemonic('C');
             

            } else if (grabar == true) {
                if (txtapellidos.getText().isEmpty() || txtnombres.getText().trim().isEmpty()) {
                    JOptionPane.showMessageDialog(this, "Registre los campos requeridos ...!");
                } else {
                    {
                        OutputStream out = null;
                        try {
                            usuarioObj.setCodigo(Integer.valueOf(codigo.getText()));
                            usuarioObj.setNombre(txtnombres.getText());
                            usuarioObj.setApellido(txtapellidos.getText());
                            usuarioObj.setDireccion(txtdireccion.getText());
                            usuarioObj.setTelefono(txttelefono.getText());
                            usuarioObj.setEmail(txtemail.getText());
                            usuarioObj.setDescripcion(null);


                            if (usuarioObj.getCodigo().equals(0)) {
                                usuarioObj.setCodigo(null);
                            }
                            if (modificar) {
                                try {
                                    adm.actualizar(usuarioObj);

                                } catch (Exception ex) {
                                    JOptionPane.showMessageDialog(this, "Error en actualizar Registro ...! \n" + ex.getMessage(), "", JOptionPane.ERROR_MESSAGE);
                                    Logger.getLogger(frmPaciente.class.getName()).log(Level.SEVERE, null, ex);
                                    return;
                                }
                            } else {
                                try {
                                    adm.guardar(usuarioObj);
                                } catch (Exception ex) {
                                    JOptionPane.showMessageDialog(this, "Error en guardar Registro ...! \n" + ex.getMessage(), "", JOptionPane.ERROR_MESSAGE);
                                    Logger.getLogger(frmPaciente.class.getName()).log(Level.SEVERE, null, ex);
                                    return;
                                }
                            }
                            codigo.setText(usuarioObj.getCodigo() + "");
                            if (ubicacionDirectorio.contains("build")) {
                                ubicacionDirectorio = ubicacionDirectorio.replace(separador + "build", "");
                            }
                            File tosave = new File(ubicacionDirectorio +"historias"+separador+ "HPAC" + usuarioObj.getCodigo() + ".html");
//                            HTMLDocument doc = (HTMLDocument) panel.getDocument();
                            out = new FileOutputStream(tosave);
                            HTMLDocument doc = (HTMLDocument) panel.getDocument();
                            int end = doc.getLength();
                            documento.write(out, doc, 0, end);
                            out.close();

                            this.btnAgregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/agregar.png")));
                            this.btnAgregar.setLabel("Nuevo");
                            this.btnModificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/editar.png")));
                            this.btnModificar.setLabel("Modificar");
                            btnAgregar.setMnemonic('N');
                            btnModificar.setMnemonic('M');
                            grabar = false;
                            modificar = false;
                            habilitar(false);
                       
                        } catch (IOException ex) {
                            Logger.getLogger(frmPaciente.class.getName()).log(Level.SEVERE, null, ex);
                        } catch (BadLocationException ex) {
                            Logger.getLogger(frmPaciente.class.getName()).log(Level.SEVERE, null, ex);
                        } finally {
                            try {
                                out.close();
                            } catch (IOException ex) {
                                Logger.getLogger(frmPaciente.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }
                    }

                }

            }
        } else {
            JOptionPane.showMessageDialog(this, "NO TIENE PERMISOS PARA REALIZAR ESTA ACCIÓN");
        }
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnAgregarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnAgregarKeyPressed
        // TODO add your handling code here:
        //        principal.tecla(evt.getKeyCode());
}//GEN-LAST:event_btnAgregarKeyPressed
    void habilitar(Boolean estado) {
        txtnombres.setEditable(estado);
        txtapellidos.setEditable(estado);
        txtdireccion.setEditable(estado);
        txttelefono.setEditable(estado);
        txtemail.setEditable(estado);
        panel.setEditable(estado);

    }

    void llenar(Pacientes pac) {
        FileReader fr = null;
        try {
            codigo.setText(pac.getCodigo() + "");
            txtnombres.setText(pac.getNombre() + "");
            txtapellidos.setText(pac.getApellido() + "");
            txtdireccion.setText(pac.getDireccion() + "");
            txttelefono.setText(pac.getTelefono() + "");
            txtemail.setText(pac.getEmail() + "");
            panel.setText(pac.getDescripcion());
            if (!pac.getCodigo().equals(0)) {
                if (ubicacionDirectorio.contains("build")) {
                    ubicacionDirectorio = ubicacionDirectorio.replace(separador + "build", "");
                }
                fr = new FileReader(ubicacionDirectorio +separador+"historias"+separador+  "HPAC" + pac.getCodigo() + ".html");
                BufferedReader bf = new BufferedReader(fr);
                String sCadena = "";
                String sumada = "";
                while ((sCadena = bf.readLine()) != null) {
                    sumada = sumada + sCadena;
                }
                panel.setText(sumada);
            }
        } catch (IOException ex) {
            Logger.getLogger(frmPaciente.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
               if (!pac.getCodigo().equals(0)) {     
                   try {
                            fr.close();
                        } catch (IOException ex) {
                        Logger.getLogger(frmPaciente.class.getName()).log(Level.SEVERE, null, ex);
                        }
               }
        }

    }
    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        // TODO add your handling code here:
        //
        if (grabar == false) {
            if (principal.permisos.getActualizar()) {
                if (codigo.getText().trim().isEmpty()) {
                    return;
                }
                this.codigo.requestFocusInWindow();
                this.btnAgregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/guardar.png")));
                this.btnAgregar.setLabel("Guardar");
                this.btnModificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/cancelar.png")));
                this.btnModificar.setLabel("Cancelar");
                btnAgregar.setMnemonic('G');
                btnModificar.setMnemonic('C');
                modificar = true;
                grabar = true;
                habilitar(true);
             

            } else {
                JOptionPane.showMessageDialog(this, "NO TIENE PERMISOS PARA REALIZAR ESTA ACCIÓN");
            }
        } else {

            grabar = false;
            modificar = false;
            this.btnAgregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/agregar.png")));
            this.btnAgregar.setLabel("Nuevo");
            this.btnModificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/editar.png")));
            this.btnModificar.setLabel("Modificar");
            btnAgregar.setMnemonic('N');
            btnModificar.setMnemonic('M');
            habilitar(false);
       

        }
    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnModificarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnModificarKeyPressed
        // TODO add your handling code here:
}//GEN-LAST:event_btnModificarKeyPressed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        if (principal.permisos.getEliminar()) {        // TODO add your handling code here:
            int valor = JOptionPane.showConfirmDialog(this, ("Seguro que desea eliminar el Paciente: " + txtapellidos.getText() + " " + txtnombres.getText()), "JCINFORM", JOptionPane.YES_NO_CANCEL_OPTION);
            if (valor == JOptionPane.OK_OPTION) {
                try {
                    adm.eliminarObjeto(Pacientes.class, new Integer(codigo.getText()));
                    if (ubicacionDirectorio.contains("build")) {
                        ubicacionDirectorio = ubicacionDirectorio.replace(separador + "build", "");
                    }
                    File f = new File(ubicacionDirectorio+"historias"+separador+ "HPAC"+new Integer(codigo.getText())+".html");
                    if(f.exists()){
                        f.delete();
                    }
                    this.llenar(new Pacientes(0));
                } catch (Exception ex) {
                    Logger.getLogger(frmPaciente.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
            }
            /*
            
             */
        } else {
            JOptionPane.showMessageDialog(this, "NO TIENE PERMISOS PARA REALIZAR ESTA ACCIÓN");
        }
}//GEN-LAST:event_btnEliminarActionPerformed

    private void btnEliminarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnEliminarKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnEliminarKeyPressed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        principal = null;
        usuarioObj = null;
        System.gc();
}//GEN-LAST:event_btnSalirActionPerformed

    private void btnSalirKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnSalirKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSalirKeyPressed

    private void panelKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_panelKeyTyped
        // TODO add your handling code here:i
}//GEN-LAST:event_panelKeyTyped
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel botonesPanel;
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnSalir;
    private javax.swing.JFormattedTextField codigo;
    private javax.swing.JComboBox color;
    private javax.swing.JList encontrados1;
    private javax.swing.JComboBox fuente;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JButton kursica;
    private javax.swing.JButton negrilla;
    private static javax.swing.JTextPane panel;
    private javax.swing.JPanel panelencontrados1;
    private javax.swing.JButton subline;
    private javax.swing.JComboBox tipo;
    public javax.swing.JTextField txtBusqueda;
    private javax.swing.JFormattedTextField txtapellidos;
    private javax.swing.JFormattedTextField txtdireccion;
    private javax.swing.JFormattedTextField txtemail;
    private javax.swing.JFormattedTextField txtnombres;
    private javax.swing.JFormattedTextField txttelefono;
    // End of variables declaration//GEN-END:variables
}
