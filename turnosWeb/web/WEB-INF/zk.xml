<?xml version="1.0" encoding="UTF-8"?>

 

<zk>
    <system-config>
        <max-upload-size>-1</max-upload-size>
    </system-config>

    <session-config>
		<!-- Turn on the following if you want a different timeout
			Note: The unit is seconds (while that of web.xml is minute)-->
        <session-timeout>99200</session-timeout>
        <timer-keep-alive>true</timer-keep-alive>
        <timer-as-inactive>true</timer-as-inactive>
        <device-type>ajax</device-type>
        <automatic-timeout/>
  
    </session-config>


    <library-property>
        <name>org.zkoss.zul.progressbox.position</name>
        <value>center,top</value>
    </library-property>

         
    <client-config>
        <processing-prompt-delay>1</processing-prompt-delay>
    </client-config>
    <system-config>
        <max-upload-size>-1</max-upload-size>
    </system-config>
	<!-- Turn on if you prefer to use the native (Servlet) thread
	to process the events, instead of forking the event processing thread
	<system-config>
		<disable-event-thread/>
	</system-config>
	-->
	<!-- Turn on the following if you want to keep session after Web server restarts
	<system-config>
		<ui-factory-class>org.zkoss.zk.ui.http.SerializableUiFactory</ui-factory-class>
	</system-config>
	-->
	<!-- Turn on the following if you want to cache all desktops in a global
	cache, rather than one for each session
	<system-config>
		<cache-provider-class>org.zkoss.zk.ui.sys.GlobalDesktopCacheProvider</cache-provider-class>
	</system-config>
	-->
	<!-- Turn on to test FailoverManager with an useless failover manager
	<system-config>
		<failover-manager-class>org.zkoss.zkdemo.test.DumbFailoverManager</failover-manager-class>
	</system-config>
	-->
	<!-- Turn on to test the status when IdGenerator is called
	<system-config>
		<id-generator-class>org.zkoss.zkdemo.test.ViewIdGenerator</id-generator-class>
	</system-config>
	-->

	<!-- Optional -->
	<!-- You can define any number of richlets as follows.
		Note: To use richlet, you have to map zkLoader to /xx/* in web.xml,
		where xx could be any name. And, the final URL will be /xx/url-pattern.
		This demo application maps all richlet to /zk (see web.xml),
		so the richlet path will be, say, /zk/test/some
	-->
    <richlet>
        <richlet-name>Test</richlet-name>
        <richlet-class>org.zkoss.zkdemo.test.TestRichlet</richlet-class>
		<!-- Any number of initial parameters.
		<init-param>
			<param-name>any</param-name>
			<param-value>any</param-value>
		</init-param>
		-->
    </richlet>
    <richlet-mapping>
        <richlet-name>Test</richlet-name>
        <url-pattern>/test/*</url-pattern>
    </richlet-mapping>

	<!-- Optional -->
    <device-config>
        <device-type>ajax</device-type>
        <timeout-uri>/timeout.zul</timeout-uri>
		<!-- An empty URL can cause the browser to reload the same URL -->
    </device-config>

	<!-- Optional -->
    <listener>
        <description>[Optional] Mointor the statistic</description>
        <listener-class>org.zkoss.zk.ui.util.Statistic</listener-class>
    </listener>
    <!--desktop-config>
        <theme-provider-class>zkthemer.ThemeProvider</theme-provider-class>
    </desktop-config-->
	 

	<!-- Configure the error page
	<error-page>
		<exception-type>java.lang.Throwable</exception-type>
		<location>/WEB-INF/sys/error.zul</location>
	</error-page>
	-->
	<!-- Configure ZUL to use larger fonts for Chinese characters, and
		smaller fonts for the rest Locales
	<desktop-config>
		<disable-default-theme>xul/html</disable-default-theme>
		<theme-uri>~./zul/css/norm**.css.dsp</theme-uri>
	</desktop-config>
	-->
	<!-- Configure additional theme URIs
	<desktop-config>
		<theme-uri>/a.css</theme-uri>
		<theme-uri>/b**.css</theme-uri>
	</desktop-config>
	-->

	<!-- Uncomment the following if you want to redirect to particular
		page when ZK Client receives an error code.
	<client-config>
		<error-reload>
			<error-code>301</error-code>
			<reload-uri>/login.zul</reload-uri>
		</error-reload>
	</client-config>
	-->
	<!-- Any number of preferences.
	<preference>
		<name></name>
		<value></value>
	</preference>
	-->

	<!-- Configure the Hibernate SessionFactory Lifecycle.
	<listener>
		<description>Hibernate SessionFactory Lifecycle</description>
		<listener-class>org.zkoss.zkplus.hibernate.HibernateSessionFactoryListener</listener-class>
	</listener>
	-->

	<!-- Configure the Hibernate "Open Session In View" Session Lifecycle
	<listener>
		<description>Hibernate "Open Session In View" Session Lifecycle</description>
		<listener-class>org.zkoss.zkplus.hibernate.OpenSessionInViewListener</listener-class>
	</listener>
	 -->

	<!-- Hibernate thread session context handler
	<listener>
		<description>Hibernate thread session context handler</description>
		<listener-class>
			org.zkoss.zkplus.hibernate.HibernateSessionContextListener
		</listener-class>
	</listener>
	 -->
</zk>