package historias.formas;


import java.awt.Container;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import persistencia.Accesos;
import persistencia.Global;
import procesos.Administrador;
 
/**
 *
 * @author  geovanny
 */
public class accesos extends javax.swing.JInternalFrame {
 

public static List<Accesos> accesos = new ArrayList();
    private Container desktopContenedor;
    private boolean grabar = false;
    private boolean modificar = false;
public Global global;
 Administrador adm ;
    /** Creates new form frmParametros */
    public accesos() {
        initComponents();
       
             this.setSize(525, 518);
         adm = new Administrador();
         llenarComboPerfil();ancho();
    }

    public accesos(Container desktop) {
        this.desktopContenedor = desktop;
        this.initComponents();
        
     
        this.setSize(525, 518);
         adm = new Administrador();
         llenarComboPerfil();ancho();
    }
 

public void llenarComboPerfil(){
     List<Global> listado = adm.query("Select o from Global as o where o.grupo = 'PER'");
      cmbPerfil.removeAllItems();
      Global glob = new Global();
      glob.setCodigo(-1);
      glob.setDescripcion("Seleccione");
      cmbPerfil.addItem(glob);
            for (Global global : listado) {
               cmbPerfil.addItem(global);
            }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grupo = new javax.swing.ButtonGroup();
        jRadioButton6 = new javax.swing.JRadioButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tListado = new javax.swing.JTable();
        btnNuevo = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        cmbPerfil = new javax.swing.JComboBox();
        jLabel11 = new javax.swing.JLabel();

        jRadioButton6.setText("jRadioButton6");

        setClosable(true);
        setTitle("Accesos");
        getContentPane().setLayout(null);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Listado"));
        jPanel2.setLayout(null);

        tListado.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Código", "Pantalla", "Ingresar", "Agregar", "Modificar", "Eliminar"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tListado.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        tListado.setEnabled(false);
        tListado.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tListadoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tListado);

        jPanel2.add(jScrollPane1);
        jScrollPane1.setBounds(20, 20, 460, 310);

        btnNuevo.setFont(new java.awt.Font("Tahoma", 0, 8));
        btnNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/nuevo.png"))); // NOI18N
        btnNuevo.setToolTipText("Nuevo");
        btnNuevo.setEnabled(false);
        btnNuevo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnNuevo.setInheritsPopupMenu(true);
        btnNuevo.setMargin(new java.awt.Insets(1, 1, 1, 1));
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });
        jPanel2.add(btnNuevo);
        btnNuevo.setBounds(270, 340, 70, 40);

        btnModificar.setFont(new java.awt.Font("Tahoma", 0, 8));
        btnModificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/modificar.png"))); // NOI18N
        btnModificar.setToolTipText("Modificar");
        btnModificar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnModificar.setMargin(new java.awt.Insets(1, 1, 1, 1));
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });
        jPanel2.add(btnModificar);
        btnModificar.setBounds(340, 340, 70, 40);

        btnEliminar.setFont(new java.awt.Font("Tahoma", 0, 8));
        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/eliminar.png"))); // NOI18N
        btnEliminar.setToolTipText("Eliminar");
        btnEliminar.setEnabled(false);
        btnEliminar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnEliminar.setMargin(new java.awt.Insets(1, 1, 1, 1));
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        jPanel2.add(btnEliminar);
        btnEliminar.setBounds(410, 340, 70, 40);

        getContentPane().add(jPanel2);
        jPanel2.setBounds(10, 60, 490, 400);

        cmbPerfil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbPerfilActionPerformed(evt);
            }
        });
        getContentPane().add(cmbPerfil);
        cmbPerfil.setBounds(80, 30, 210, 27);

        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel11.setText("Perfil:");
        getContentPane().add(jLabel11);
        jLabel11.setBounds(20, 30, 50, 17);

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
// TODO add your handling code here:
   
}//GEN-LAST:event_btnEliminarActionPerformed

private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
// TODO add your handling code here:
    if (grabar == false) {

        this.btnNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/guardar.png")));
        this.btnNuevo.setToolTipText("Guardar");
        this.btnModificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/cancelar.png")));
        this.btnModificar.setToolTipText("Cancelar");
        grabar = true;
        modificar = false;
    
        limpiar();
    } else if (grabar == true) {
try{

            guardar();
            this.tListado.setEnabled(false);
       this.cmbPerfil.setEnabled(true);
this.btnNuevo.setEnabled(false);
        this.btnNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/nuevo.png")));
        this.btnNuevo.setToolTipText("Nuevo");
        this.btnModificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/modificar.png")));
        this.btnModificar.setToolTipText("Modificar");
        grabar = false;
        modificar = false;
            JOptionPane.showMessageDialog(this, "Registro Almacenado con éxito...!");
           
}catch(Exception e){
    JOptionPane.showMessageDialog(this, "NO ha Almacenado el registro...!");
}
        
    }


}//GEN-LAST:event_btnNuevoActionPerformed
public void guardar(){
int filas = tListado.getRowCount();
Accesos acceso = new Accesos();

    for (int i = 0; i < filas; i++) {
     Integer cod = (Integer) tListado.getValueAt(i, 0);
     
        acceso.setModulo((String) tListado.getValueAt(i, 1));
        acceso.setIngresar((Boolean) tListado.getValueAt(i,2));
        acceso.setGuardar((Boolean) tListado.getValueAt(i,3));
        acceso.setActualizar((Boolean) tListado.getValueAt(i,4));
        acceso.setEliminar((Boolean) tListado.getValueAt(i,5));
        acceso.setPerfil((Global) cmbPerfil.getSelectedItem());
        if(cod ==0){
            acceso.setCodigoacc(adm.getNuevaClave("Accesos", "codigoacc"));
            adm.guardar(acceso);
        }else{
            acceso.setCodigoacc((Integer) tListado.getValueAt(i,0));
            adm.actualizar(acceso);
        }
      
    }
 llenar();


}
public void limpiar(){

}

private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
// TODO add your handling code here:
    if (grabar == false) {
    if (verificarPermiso("Accesos", "Modificar")) {
        this.btnNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/guardar.png")));
        this.btnNuevo.setToolTipText("Guardar");
        this.btnModificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/cancelar.png")));
        this.btnModificar.setToolTipText("Cancelar");
        modificar = true;
        grabar = true;

tListado.setEnabled(true);
this.cmbPerfil.setEnabled(false);
this.btnNuevo.setEnabled(true);
 } else {
            JOptionPane.showMessageDialog(this, "No tiene permisos para realizar esta acción", "", JOptionPane.ERROR_MESSAGE);
        }
    } else {


        grabar = false;
        modificar = false;
        this.btnNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/nuevo.png")));
        this.btnNuevo.setToolTipText("Nuevo");
        this.btnModificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/modificar.png")));
        this.btnModificar.setToolTipText("Modificar");
        limpiar();
    tListado.setEnabled(false);
this.cmbPerfil.setEnabled(true);
this.btnNuevo.setEnabled(false);
    }


}//GEN-LAST:event_btnModificarActionPerformed

private void tListadoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tListadoMouseClicked
// TODO add your handling code here:
  
    
}//GEN-LAST:event_tListadoMouseClicked

private void cmbPerfilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbPerfilActionPerformed
// TODO add your handling code here:
   llenar();
}//GEN-LAST:event_cmbPerfilActionPerformed
public void llenar(){
     Global perfil = (Global) cmbPerfil.getSelectedItem();
    List<Accesos> listado = adm.query("Select o from Accesos as o where o.perfil.codigo = '"+perfil.getCodigo()+"'");
    DefaultTableModel dtm = (DefaultTableModel)tListado.getModel();
    dtm.getDataVector().removeAllElements();
    Boolean bandera= false;
   if(listado.size()<=0 && cmbPerfil.getSelectedIndex()>0){
        listado = adm.query("Select o from Accesos as o where o.perfil is null");
        bandera = true;
    }
    for (Accesos accesos : listado) {
            Object obj[] = new Object[6];
            if(bandera)
                obj[0] = 0;
            else
                obj[0] = accesos.getCodigoacc();
            obj[1] = accesos.getModulo();
            obj[2] = accesos.getIngresar();
             obj[3] = accesos.getGuardar();
            obj[4] = accesos.getActualizar();
            obj[5] = accesos.getEliminar();
          dtm.addRow(obj);
        }
    tListado.setModel(dtm);
}
public void listar(String tipo){
   
    List<Global> listado = adm.query("Select o from Global as o where o.grupo = '"+tipo+"'");
//    return listado;
    DefaultTableModel dtm = (DefaultTableModel)this.tListado.getModel();
    dtm.getDataVector().removeAllElements();
    for (Global global : listado) {
        Object obj[] = new Object[2];
        obj[0]= global.getCodigo();
        obj[1] = global.getDescripcion();
        dtm.addRow(obj);
    }
    tListado.setModel(dtm);
    

}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JComboBox cmbPerfil;
    private javax.swing.ButtonGroup grupo;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JRadioButton jRadioButton6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tListado;
    // End of variables declaration//GEN-END:variables

    public void ancho() {
        TableColumn column;
        for (int i = 0; i < 5; i++) {
            column = tListado.getColumnModel().getColumn(i);
            if (i == 0) {
                column.setPreferredWidth(50);
            }
            if (i == 1) {
                column.setPreferredWidth(150);
            }
             if (i == 2) {
                column.setPreferredWidth(50);
            }
             if (i == 3) {
                column.setPreferredWidth(60);
            }
             if (i == 4) {
                column.setPreferredWidth(50);
            }
             if (i == 5) {
                column.setPreferredWidth(50);
            }
        }

    }
    
      public boolean verificarPermiso(String modulo,String accion){
        for (Iterator<Accesos> it = accesos.iterator(); it.hasNext();) {
            Accesos accesos = it.next();
                         if(accesos.getModulo().equals(modulo)){
                             if(accion.equals("Ingresar")){
                                 return accesos.getIngresar();
                             }else if(accion.equals("Agregar")){
                                 return accesos.getGuardar();
                             }else if(accion.equals("Modificar")){
                                   return accesos.getActualizar();
                             }else if(accion.equals("Eliminar")){
                                   return accesos.getEliminar();
                             }
                         }
        }
        return false;

    }
    
    
}
