<?xml version="1.0" encoding="utf-8"?>
<?page title="Administrador Educativo"?>
<zk xmlns="http://www.zkoss.org/2005/zul">
    <window id="principales" >
        <zscript>
<![CDATA[
  import jcinform.persistencia.Global;
  import bean.EventDAO; 
  import java.util.ArrayList; 
  import jcinform.persistencia.*;
  import jcinform.procesos.Administrador;
  import bean.Permisos;
  import java.io.FileNotFoundException;
  import java.io.FileOutputStream;
  import java.io.IOException;
  import java.util.logging.Level;
  import java.util.logging.Logger;
import java.util.Vector;
import bean.matriculasBean;
import sources.CustomDataSource;
import net.sf.jasperreports.engine.JRDataSource;
import sources.*;
import bean.notas;
import java.math.BigDecimal;
import bean.notas;
import jcinform.persistencia.*;
import jcinform.procesos.Administrador;
 
import java.util.Date;
import org.joda.time.DateMidnight;
import org.zkoss.zul.Listbox;


    Administrador adm = new Administrador();
    List allEvents = adm.query("Select o from Estudiantes as o where o.cedula = 0");
    static Estudiantes estudent = new Estudiantes();
    static Representante representante0 = new Representante();
    static Matriculas matricula = new Matriculas();
 Session ses = Sessions.getCurrent();
 Periodo periodo = (Periodo) ses.getAttribute("periodo");
 Permisos permiso = new Permisos();
    List cursos = adm.query("Select o from Cursos as o "
    + " where o.periodo.codigoper = '"+ periodo.getCodigoper() +"'  ");

    Object media = null;
 

        //FUNCIONES
        void cargarFoto(byte[] imageData){
          foto0.setContent(new org.zkoss.image.AImage("fotito", imageData));
        }
        void cargarVacio(){
          foto0.setContent(new org.zkoss.image.AImage("t", desktop.webApp.getResourceAsStream("/fotos/vacio.gif")));
        }
       Integer nuevaMatricula() {
       Administrador adm = new Administrador();

        List NoActualMatricula = adm.query("Select o from ParametrosGlobales as o " +
                "where o.variable = 'MATRICULA' and o.periodo.codigoper = '" + periodo.getCodigoper() + "'");
        ParametrosGlobales parametros = new ParametrosGlobales();
        if(NoActualMatricula.size()<=0){
            alert("Falta copiar los parámetros a este Año Lectivo");
        }
        parametros = (ParametrosGlobales) NoActualMatricula.get(0);
        int noMatri = 0;
        Double decs = parametros.getNvalor();
        Long val = java.lang.Math.round(decs);
        noMatri = Integer.valueOf(val.toString());
        noMatri += 1;
        List  numeroYa = adm.query("Select o from Matriculas as o " +
                "where o.curso.periodo.codigoper = '" + periodo.getCodigoper() + "' " +
                "and o.numero = '" + noMatri + "'");
        if (numeroYa.size() > 0) {
            Integer nClave = adm.geUltimaMatricula("Select max(o.numero) from Matriculas as o " +
                    "where o.curso.periodo.codigoper= '" + periodo.getCodigoper() + "'"  );
            parametros.setNvalor(new Double(nClave + 1));
            adm.actualizar(parametros);
            return nClave + 1;
        } else {
            parametros.setNvalor(new Double(noMatri));
            adm.actualizar(parametros);
            return noMatri;
        }
    }

    void generarClave(Boolean boton){
    try{
    String uss = usuario.value;
    if(boton==false){
        if(uss.trim() != ""){
                return;
        }
    }
        String user ="";
        String caracter="1234567890";
        caracter+="JCQWERTYUIOPASDFGHJKLZXCVBNM";
        int numero_caracteres=10;
        int total=caracter.length();
        String  clave2="";
        for(int a=0;a<numero_caracteres;a++){
            clave2+=caracter.charAt(((Double)(total*Math.random())).intValue());
        }

            clave.value = clave2;
             caracter=""+apellidos.value.trim().replace(" ","");
            caracter+="JC"+nombres.value.trim().replace(" ","");
            numero_caracteres=6;
            total=caracter.length();
            user ="";
            for(int a=0;a<numero_caracteres;a++){
                user+=caracter.charAt(((Double)(total*Math.random())).intValue());
            }
            usuario.value = user;
            }catch(Exception e){
            System.out.println("ERROR EN GENERAR CLAVE"+e);
            }
    }

void llenar(Estudiantes estudent){
    codigo.value = estudent.getCodigoest();
    cedula.value = estudent.getCedula();
    nombres.value = estudent.getNombre();
    apellidos.value = estudent.getApellido();
    direccion.value = estudent.getDireccion();
    telefono.value = estudent.getTelefono();
    genero.value = estudent.getGenero();
    nacido.value = estudent.getFechanacimiento();
    mail.value = estudent.getMail();
    usuario.value = estudent.getUsuario();
    nobus.value = estudent.getNobus();
    
    
    clave.value = permiso.decriptar(estudent.getClave());
          if(estudent.getEstado()!=null){
                estadoe.checked= estudent.getEstado();
            }
            if(estudent.getAdventista()!=null){
                 
                adventista.checked = estudent.getAdventista();
            }
            if(estudent.getTransporte()!=null){
                transporte.checked = estudent.getTransporte();
            }
           



        if(estudent.getRepresentante()==null){
            Representante re = new Representante(0);
            re.setTipoidentificacion("C");
            estudent.setRepresentante(re);
        }
        llenarRepresentante(estudent.getRepresentante());

List matricula = adm.query("Select o from Matriculas as o where o.estudiante.codigoest = '"+estudent.getCodigoest()+"' "
+ " and o.curso.periodo.codigoper = '"+periodo.getCodigoper()+"'  ");
    if(matricula.size()>0)
    {
        llenarMatricula(matricula.get(0));
    }else{
        llenarMatricula(new Matriculas(0));
        numero.value = 0;
        //Messagebox.show("No se encuentra Inscrito ni Matriculado...!", "Administrador Educativo", Messagebox.OK, Messagebox.EXCLAMATION);
    }
}
void llenarMatricula(Matriculas matri){
         codigomat.value =matri.getCodigomat();
         accion.value = matri.getEstado();
         fechamatricula.value =matri.getFechamat();
         numero.value = matri.getNumero();
         folio.value = matri.getFolio();
         institucion.value = matri.getInstitucion();
            if(matri.getNuevo()!=null){
                nuevo.checked = matri.getNuevo();
            }
            if(matri.getRepite()!=null){
                repite.checked = matri.getRepite();
            }
         try{
            beca.value = new BigDecimal(matri.getBeca());
            otros.value = new BigDecimal(matri.getOtros());
         }catch(Exception e){}
         observacion.value = matri.getObservacion();
            if(matri.getCurso() != null){
                    Listitem item = new Listitem();
                    item.setValue(matri.getCurso());
                    item.appendChild(new Listcell(matri.getCurso()+""));
                    curso.appendChild(item);
                    curso.setSelectedItem(item);
                    bd1.value = matri.getCurso().getDescripcion()+" "+ matri.getCurso().getEspecialidad()+" "+ matri.getCurso().getParalelo();
            }
            if(matri.getFoto() != null){
                    cargarFoto(matri.getFoto());
            }else{
                    cargarVacio();
            }
}

void copiarpr(){
     cedulare.value = cedulapa.value;
     nombresre.value = nombrespa.value ;
     apellidosre.value = apellidospa.value;
     telefonore.value = telefonopa.value;
     direccionre.value = direccionpa.value;
}

void copiarmr(){
     cedulare.value = cedulama.value;
     nombresre.value = nombresma.value ;
     apellidosre.value = apellidosma.value;
     telefonore.value = telefonoma.value;
     direccionre.value = direccionma.value;
}


void copiarp(){
     cedulafac.value = cedulapa.value;
     nombresfac.value = apellidospa.value + " "+ nombrespa.value ;
     telefonofac.value = telefonopa.value;
     direccionfac.value = direccionpa.value;
}

void copiarm(){
     cedulafac.value = cedulama.value;
     nombresfac.value = apellidosma.value + " "+ nombresma.value ;
     telefonofac.value = telefonoma.value;
     direccionfac.value = direccionma.value;
}

void copiarr(){
     cedulafac.value = cedulare.value;
     nombresfac.value = apellidosre.value + " "+ nombresre.value ;
     telefonofac.value = telefonore.value;
     direccionfac.value = direccionre.value;
}

void llenarRepresentante(Representante repren){
    codigore.value = repren.getCodigorep();
    cedulare.value = repren.getIdentificacionrepre();
    nombresre.value = repren.getNombres();
    apellidosre.value = repren.getApellidos();
    direccionre.value = repren.getDireccion();
    telefonore.value = repren.getTelefono();
    emailre.value = repren.getEmail();

     Listitem item = new Listitem();
     String tip = repren.getTipoidentificacion();
     item.setValue(tip);
     item.appendChild(new Listcell( (tip.equals("C")?"CEDULA":"RUC") +""));
     tipofac.appendChild(item);
     tipofac.setSelectedItem(item);
     llenarConsumidor();
     cedulafac.value = repren.getIdentificacionfactura();
     nombresfac.value = repren.getNombrefactura();
     telefonofac.value = repren.getTelfactura();
     direccionfac.value = repren.getDirfactura();
     
    
     

    cedulapa.value = repren.getIdentificacionpadre();
    nombrespa.value = repren.getNompadre();
    apellidospa.value = repren.getApepadre();
    direccionpa.value = repren.getDirpadre();
    telefonopa.value = repren.getTelpadre();
    emailpa.value = repren.getMailpadre();
    parentesco.value = repren.getParentesco();
    ocupacionpa.value = repren.getOcupacionpadre();
    profesionpa.value = repren.getProfesionpadre();

    cedulama.value = repren.getIdentificacionmadre();
    nombresma.value = repren.getNommadre();
    apellidosma.value = repren.getApemadre();
    direccionma.value = repren.getDirmadre();
    telefonoma.value = repren.getTelmadre();
    emailma.value = repren.getMailmadre();
    ocupacionma.value = repren.getOcupacionmadre();
    profesionma.value = repren.getProfesionmadre();

     
}
void estado(Boolean estado,Boolean modificar){
        if(modificar){
            estudent = (Estudiantes)datos.selectedItem.value;
        }
   padrec.disabled = estado;
   madrec.disabled = estado;
   padrecr.disabled = estado;
   madrecr.disabled = estado;
   subirb.disabled = estado;
   limpiar.disabled = estado;
   representantec.disabled = estado;
   codigo.readonly = estado;
    cedula.readonly = estado;
    nombres.readonly = estado;
    apellidos.readonly = estado;
    direccion.readonly = estado;
    telefono.readonly = estado;
    genero.readonly = estado;
    mail.readonly = estado;
    nacido.readonly = estado;
    tratamiento.readonly = estado;
    usuario.readonly = estado;
    clave.readonly = estado;
    beca.readonly = estado;
    otros.readonly = estado;
    tipo.readonly= estado;
    estadoe.disabled= estado;
    perf.readonly = estado;
    bd.readonly = estado;

    codigomat.readonly = estado;
    //numero.readonly = estado;
    folio.readonly = estado;
    curso.disabled = estado;
    accion.readonly = estado;
    fechamatricula.readonly = estado;
    observacion.readonly= estado;
    adventista.disabled= estado;
    nuevo.disabled = estado;
    transporte.disabled = estado;
    repite.disabled = estado;
    nobus.readonly = estado;
    cedulare.readonly = estado;
    nombresre.readonly = estado;
    apellidosre.readonly = estado;
    direccionre.readonly = estado;
    telefonore.readonly = estado;
    emailre.readonly = estado;
    institucion.readonly = estado;

    tipofac.disabled = estado;
    cedulafac.readonly = estado;
    nombresfac.readonly = estado;
    direccionfac.readonly = estado;
    telefonofac.readonly = estado;



   cedulapa.readonly = estado;
    nombrespa.readonly = estado;
    apellidospa.readonly = estado;
    direccionpa.readonly = estado;
    telefonopa.readonly = estado;
    emailpa.readonly = estado;
    parentesco.readonly = estado;
    ocupacionpa.readonly = estado;
    profesionpa.readonly = estado;

   cedulama.readonly = estado;
    nombresma.readonly = estado;
    apellidosma.readonly = estado;
    direccionma.readonly = estado;
    telefonoma.readonly = estado;
    emailma.readonly = estado;
    ocupacionma.readonly = estado;
    profesionma.readonly = estado;
    

}


 void guardar(){
 try{
             if(nombres.value=="" || apellidos.value =="" || direccion.value=="" || nacido.value=="" ){
                    Messagebox.show("Ingrese los datos del estudiante que están con (*)...!", "Administrador Educativo", Messagebox.OK, Messagebox.EXCLAMATION);
                    return;
            }
            if(nombresre.value=="" || apellidosre.value =="" || direccionre.value=="" ){
                    Messagebox.show("Ingrese los datos del representante que estan con (*)...!", "Administrador Educativo", Messagebox.OK, Messagebox.EXCLAMATION);
                    return;
            }
       
        representante0.setCodigorep(codigore.value);
        representante0.setIdentificacionrepre(cedulare.value);
        representante0.setNombres(nombresre.value);
        representante0.setApellidos(apellidosre.value);
        representante0.setDireccion(direccionre.value);
        representante0.setTelefono(telefonore.value);
        representante0.setEmail(emailre.value);

        representante0.setTipoidentificacion(tipofac.selectedItem.value);
        representante0.setIdentificacionfactura(cedulafac.value);
        representante0.setNombrefactura(nombresfac.value);
        representante0.setDirfactura(direccionfac.value);
        representante0.setTelfactura(telefonofac.value);

        representante0.setIdentificacionpadre(cedulapa.value);
        representante0.setApepadre(apellidospa.value);
        representante0.setNompadre(nombrespa.value);
        representante0.setTelpadre(telefonopa.value);
        representante0.setDirpadre(direccionpa.value);
        representante0.setMailpadre(emailpa.value);
        representante0.setParentesco(parentesco.value);
        representante0.setProfesionpadre(profesionpa.value);
        representante0.setOcupacionpadre(ocupacionpa.value);

        representante0.setIdentificacionmadre(cedulama.value);
        representante0.setApemadre(apellidosma.value);
        representante0.setNommadre(nombresma.value);
        representante0.setTelmadre(telefonoma.value);
        representante0.setDirmadre(direccionma.value);
        representante0.setMailmadre(emailma.value);
        representante0.setProfesionmadre(profesionma.value);
        representante0.setOcupacionmadre(ocupacionma.value);
        

         Boolean repreNuevo = false;
         Boolean estuNuevo = false;
 
         if((!representante0.getCodigorep().equals(0))){
             adm.actualizar(representante0);
         }else{
            representante0.setCodigorep(adm.getNuevaClave("Representante","codigorep"));
            adm.guardar(representante0);
            repreNuevo = true;
         }
        

 //GUARDO EL ESTUDIANTE
        estudent.setRepresentante(representante0);
        estudent.setCodigoest(codigo.value);
        estudent.setCedula(""+cedula.value);
        estudent.setNombre(nombres.value);
        estudent.setApellido(apellidos.value);
        estudent.setDireccion(direccion.value);
        estudent.setTelefono(telefono.value);
        estudent.setMail(mail.value);
        estudent.setFechanacimiento(nacido.value);
        estudent.setEstado(estadoe.checked);
        estudent.setAdventista(adventista.checked);
        estudent.setTransporte(transporte.checked);
        estudent.setNobus(nobus.value);
        estudent.setUsuario(usuario.value);
        estudent.setClave(permiso.encriptar(clave.value));
        estudent.setGenero(genero.selectedItem.value);
        estudent.setPendientes(false);
         
        if((!estudent.getCodigoest().equals(0))){
             adm.actualizar(estudent);
             try{
                List children = datos.selectedItem.children;
                  ((Listcell)children.get(0)).label = cedula.value;
                  ((Listcell)children.get(1)).label = apellidos.value + " " + nombres.value;
                  ((Listcell)children.get(2)).label = direccion.value;
                  }catch(Exception e){}
         }else{
            estudent.setCodigoest(adm.getNuevaClave("Estudiantes","codigoest"));
            adm.guardar(estudent);
            estuNuevo = true;
         }

        
//GUARDAR MATRICULA
        matricula.setCodigomat(codigomat.value);
        matricula.setEstudiante(estudent);
        matricula.setObservacion(observacion.value);
        matricula.setFechamat(fechamatricula.value);
        matricula.setCurso(curso.selectedItem.value);
        matricula.setNumero(numero.value);
        matricula.setEstado(accion.value);
        matricula.setNuevo(nuevo.checked);
        matricula.setRepite(repite.checked);
        matricula.setInstitucion(institucion.value);
        
        try{
            matricula.setBeca((beca.value).doubleValue());
            matricula.setOtros((otros.value).doubleValue());
        }catch(Exception ea){}

         if(matricula.getEstado().equals("Inscrito")){
            matricula.setNumero(0);
         }

            org.zkoss.image.Image nueva = foto0.getContent();

            matricula.setFoto(nueva.getByteData());
            matricula.setFolio(folio.value);



        if((!matricula.getCodigomat().equals(0)) ){
            
                if(matricula.getNumero().equals(0)){
                    matricula.setNumero(nuevaMatricula());
                }
                adm.actualizar(matricula);
                
         }else{

                if(matricula.getEstado().equals("Matriculado")){
                    if(matricula.getNumero().equals(0)){
                        matricula.setNumero(nuevaMatricula());
                        numero.value = matricula.getNumero();
                    }
                    if(folio.value == "" || folio.value == null ){
                        matricula.setFolio(matricula.getNumero());
                        folio.value = matricula.getNumero();
                    }
                    
                }else{
                    matricula.setNumero(0);
                }
                 Integer matri = adm.getNuevaClave("Matriculas","codigomat");
             matricula.setCodigomat(matri);
             adm.guardar(matricula);
             codigomat.value = matri;
         }
      

        Messagebox.show("Registro Almacenado con Éxito...!", "Administrador Educativo", Messagebox.OK, Messagebox.INFORMATION);
        guardar.disabled=true;
        agregar.disabled=false;
        estado(true,false);
        //representante0.setTipoidentificacion("CF");
        acta.disabled = false;
        certificado.disabled = false;
        claveprint.disabled = false;
        //llenar(new Estudiantes(0));
            combo.value="";
            permiso.auditar("Matriculas","Guardar",""+matricula.getCodigomat()+" "+matricula.getEstudiante().getApellido());
        //aqui trabajo la parte de pensiones

//******************************** PARA CONTABLE ****************************************************************

List parametros =  adm.query("Select o from ParametrosGlobales as o where o.variable = 'TRABAJARUBROS' and o.periodo.codigoper = '"+periodo.getCodigoper()+"' ");
ParametrosGlobales para = new ParametrosGlobales();
        if(parametros.size()>0){
            para = parametros.get(0);
        }else{
            para.setBvalor(false);
        }
        if(para.getBvalor()){

          matriculasBean mati = new matriculasBean();
          mati.generar(repreNuevo,estuNuevo,matricula,periodo);
         }
//*****************************************************************************

        }catch(Exception e){
                alert("Error:"+e); System.out.println(""+e.getCause()); System.out.println(""+e.getLocalizedMessage());                System.out.println(""+e.getMessage());
                System.out.println(""+e.getStackTrace()); System.out.println(""+e.getCause());
        }

    }

   Boolean verificar(String accion){
        return permiso.verificarPermiso("Matricular",accion);

    }
 void nuevo(){
    if(verificar("Agregar")){
       try{
        guardar.disabled=false;
        llenar(new Estudiantes(0));
        estado(false,false);
        llenarConsumidor();
        }catch(Exception e){
        alert(""+e);
        }

    }else{
            Messagebox.show("No tiene permisos para realizar esta acción...!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
    }
}
 void move(){
        llenar((Estudiantes)datos.selectedItem.value);
        modificar.disabled = false;
        acta.disabled = false;
        certificado.disabled = false;
        claveprint.disabled = false;
        combo.value="";
          registro.setSelected(true);
  }
void modificar(){
  if(verificar("Modificar")){
       guardar.disabled=false;
        estado(false,false);
    }else{
            Messagebox.show("No tiene permisos para realizar esta acción...!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
    }
}
void eliminar(){
  if(verificar("Eliminar")){
        try{
             estudent = (Estudiantes)datos.selectedItem.value;
             adm.eliminarObjeto(Estudiantes.class, estudent.getCodigoest());
            datos.removeItemAt(datos.getSelectedIndex());
            llenar(new Estudiantes(0));
            combo.value="";
                Messagebox.show("Registro Eliminado con Éxito...!", "Administrador Educativo", Messagebox.OK, Messagebox.INFORMATION);
        }catch(Exception e){
            Messagebox.show("No se pudo eliminar el Registro...!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
        }
}else{
            Messagebox.show("No tiene permisos para realizar esta acción...!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
    }
}
void buscarEstudiante(String valor){

int ini = valor.indexOf("[");
int fin = valor.indexOf("]");
valor = valor.substring(ini+1, fin);
            List empleados = adm.query("Select o from Estudiantes as o where o.codigoest = '"+valor+"' ");
            if(empleados.size()>0){
                for(Iterator it = empleados.iterator(); it.hasNext();) {
                      Estudiantes object = (Estudiantes)it.next();
                      estudent = object;
                 }
            llenar(estudent);
            modificar.disabled=false;
            acta.disabled = false;
           certificado.disabled = false;
           claveprint.disabled = false;
            }else{
                estudent = new Estudiantes(0);
            }

    }
void buscarRepresentante(String valor){

int ini = valor.indexOf("[");
int fin = valor.indexOf("]");
valor = valor.substring(ini+1, fin);
            List empleados = adm.query("Select o from Representante as o where o.codigorep = '"+valor+"' ");
            if(empleados.size()>0){
                Representante object = null;
                for(Iterator it = empleados.iterator(); it.hasNext();) {
                 object = (Representante)it.next();
                      //estudent = object;
                 }
            llenarRepresentante(object);
            modificar.disabled=false;
            }else{
                estudent = new Representante(0);
            }

    }
    void limpiarRepresentante(){
            Representante object = new Representante();
            object.setTipoidentificacion("C");
            llenarRepresentante(object);
    }
  void verificarCedula(String valor){
      if(valor.length()>9){
            List empleados = adm.query("Select o from Estudiantes as o where o.cedula = '"+valor+"' ");
            if(empleados.size()>0){
                Messagebox.show("Número de Identificación ya registrado...!", "Administrador Educativo", Messagebox.OK, Messagebox.EXCLAMATION);

                for(Iterator it = empleados.iterator(); it.hasNext();) {
                      Estudiantes object = (Estudiantes)it.next();
                        estudent = object;
                 }
            llenar(estudent);
               
            }else{
                estudent = new Estudiantes(0);
            }
            
        }
    }


  void buscar(String p){
        List empleadosEncontrados = adm.query("Select o.estudiante from Matriculas as o " +
        " where o.estudiante.apellido like '%"+p+"%' and o.curso.periodo.codigoper = '"+periodo.getCodigoper()+"'   order by o.estudiante.apellido");
        datos = new Listbox();
        int a=0;
            for (Iterator it = datos.getItems().iterator(); it.hasNext();) {
                    datos.getItems().remove(a);
                }
               for (Iterator it = empleadosEncontrados.iterator(); it.hasNext();) {
                      Estudiantes acceIt = (Estudiantes) it.next();
                      Listitem li = new Listitem();
                      li.setValue(acceIt);
                      li.appendChild(new Listcell(acceIt.getCedula()+""));
                      li.appendChild(new Listcell(acceIt.getApellido()+" "+acceIt.getNombre()));
                      li.appendChild(new Listcell(acceIt.getDireccion()+""));
                      datos.appendChild(li);
             }

    }
void cargar(Global g){
    estudent.setPerfil(g);
}

void llenarConsumidor(){


    cedulafac.value = "";
    nombresfac.value = "";
    direccionfac.value = "";
    telefonofac.value = "";



}



//PARA REPORTES
public JRDataSource certificados(Matriculas matricula,String tipo){
      Administrador adm = new Administrador();
      Session ses = Sessions.getCurrent();
        Periodo periodo = (Periodo) ses.getAttribute("periodo");
        ArrayList detalle = new ArrayList();
        String query = "SELECT mat FROM Matriculas AS mat " +
                "WHERE  mat.estado like '%Matriculado%' " +
                "and mat.codigomat = '" + matricula.getCodigomat() + "' ";
        List hoy = adm.query(query);
        for (Iterator it = hoy.iterator(); it.hasNext();) {
            Matriculas elem = (Matriculas) it.next();
            detalle.add(elem);
        }
        JRDataSource ds = null;
        if(tipo.equals("CM")){
             ds = new ReporteCertificadoDataSource(detalle);
        }else{
              ds = new ReporteActaDataSource(detalle);
        }
        return ds;

}
		void showReport(String tipo) {
			//Preparing parameters

            Institucion insts = periodo.getInstitucion();
            
			Map parametros = new HashMap();
            parametros.put("denominacion", insts.getDenominacion());
            parametros.put("nombre", insts.getNombre());
            parametros.put("periodo", periodo.getDescripcion());
            parametros.put("slogan", insts.getSlogan());
            JRDataSource datasource = null;
            if(tipo.equals("CM")){
                    datasource = certificados(new Matriculas(codigomat.value),tipo);
                    report.setSrc("WEB-INF/reportes/certificadoMatricula.jasper");
                    parametros.put("titulo", "Certificado de Matricula");
            } else if(tipo.equals("AM")){
                    datasource = certificados(new Matriculas(codigomat.value),tipo);
                    parametros.put("titulo", "Acta de Matricula");
                    report.setSrc("WEB-INF/reportes/actaMatricula.jasper");

            } else if(tipo.equals("CL")){
                    datasource = certificados(new Matriculas(codigomat.value),tipo);
                    parametros.put("titulo", "Acta de Matricula");
                    report.setSrc("WEB-INF/reportes/clavePersonal.jasper");

            }
            if(!tipo.equals("-1")){
                report.setParameters(parametros);
                report.setDatasource(datasource);
                report.setType("pdf");
                 reportes.setSelected(true);
            }
		}



  ]]>
        </zscript>
        <tabbox width="100%">
            <tabs>
                <tab id="registro" label="Datos del Estudiante" />
                <tab id="representante" label="Datos del Representante" />
 
                <tab id="busqueda" label="Busquedas" />
                <tab id="reportes" label="Impresión" />
            </tabs>
            <tabpanels>
                <tabpanel>
                    <panel id="panel" framable="true" width="100%" height="100%" border="normal" >
                        <panelchildren>
                            <columnlayout>
                                <columnchildren width="100%">
                                    <panel height="390px">
                                        <panelchildren>
                                            <borderlayout>
                                                <center flex="true">
                                                    <div id="viewer" style="overflow:auto;">
                                                        <grid width="99%">
                                                            <rows>

                                                                <row>
                                                                    <span style="float:right"> Busqueda:</span>
                                                                    <span>
                                                                    <combobox  cols="35" id="combo" onSelect="buscarEstudiante(self.selectedItem.label)" autodrop="true" buttonVisible="false"  use="bean.AutoComplete"/>
                                                                    _Ingrese un apellido para buscar
                                                                    </span>
                                                                </row>
                                                                <row>
                                                                   
                                                                    <span style="float:right"> Codigo :</span>
                                                                    <span>
                                                                        <intbox  maxlength="14" cols="5"  disabled="true"  readonly="true" id="codigo"  />
                                                                    Identificación:
                                                                        <textbox maxlength="10" cols="13" onChange="verificarCedula(self.value)" readonly="true" id="cedula"  />
                                                                    </span>
                                                                </row>
                                                                <row>
                                                                   

                                                                </row>
                                                                <row>
                                                                   
                                                                    <span style="float:right"> Nombres(*):</span>
                                                                    <textbox id="nombres"  maxlength="60" cols="40" readonly="true"   />
                                                                </row>

                                                                <row>
                                                                  
                                                                    <span style="float:right"> Apellidos(*):</span>
                                                                    <textbox id="apellidos" onBlur="generarClave(false);"  maxlength="60" cols="40" readonly="true"  />
                                                                </row>
                                                                <row>

                                                                    <span style="float:right"> Dirección(*):</span>
                                                                    <textbox id="direccion" maxlength="100" cols="40"  readonly="true"    />
                                                                </row>

                                                                <row>
                                                                    <span style="float:right"> Email:</span>
                                                                    <span><textbox id="mail" maxlength="100" cols="30"  readonly="true"    />
                                                                     Teléfono:
                                                                    <textbox id="telefono" maxlength="50" cols="13"  readonly="true"  />
                                                                    </span>
                                                                </row>

                                                                <row>
                                                                    
                                                                    


                                                                </row>

                                  
                                                            </rows>
                                                        </grid>
                                                    </div>
                                                </center>
                                                <east splittable="true" size="26%"  flex="true">
                                                    <grid>
                                                        <rows>
                                                            <row>
                                                                <span  style="border:1px">
                                                                    <button id="subirb" disabled="true" label="Subir Imagen">
                                                                        <attribute name="onClick">{
                                                        Object media = Fileupload.get();

                                                        if (media instanceof org.zkoss.image.Image) {
                                                             foto0.setContent(media);

                                                        } else if (media != null)
                                                            Messagebox.show("Seleccione una Imagen: "+media, "Error", Messagebox.OK, Messagebox.ERROR);
                                                            media = null;
                                                    }
                                                                        </attribute>
                                                                    </button>

                                                                </span>
                                                            </row>
                                                            <row>
                                                                <span style="border:1px">

                                                                    <image border="1" height="125px" id="foto0"/>


                                                                    <vbox width="50px" height="125px" style="border:1px" id="miimagen"/>
                                                                </span>



                                                            </row>
                                                        </rows>
                                                    </grid>
								
                                                </east>
                                                <south splittable="true" size="55%"  flex="true">
                                                    <grid width="100%" height="220">
                                                        <rows>
                                                            <row>
                                                                <span style="float:right"> Codigo:</span>
                                                                <span>
                                                                    <intbox maxlength="14" cols="5"    disabled="true"    readonly="true" id="codigomat"  />
                                                                    No.Mat.(*):
                                                                    <intbox maxlength="10"   cols="5"  id="numero"  />
                                                                    No.Folio (*):
                                                                    <intbox maxlength="10" readonly="true" cols="5"  id="folio"  />
                                                                </span>

                                                                <span style="float:right"> Género (*):</span>
                                                                <combobox id="genero" readonly="true">
                                                                    <comboitem value="Masculino" label="Masculino"/>
                                                                    <comboitem value="Femenino" label="Femenino"/>
                                                                </combobox>
                                                            </row>
                                                            <row>
                                                                <span style="float:right"> Curso(*):</span>
                                                                
                                                                <!--listbox mold="select" disabled="true" id="curso" width="320px">
                                                                    <listitem selected="true" forEach="${cursos}" value="${each}">
                                                                        <listcell label="${each.descripcion} ${each.especialidad}  ${each.paralelo}" />

                                                                    </listitem>
                                                                </listbox-->
                                                                 
                                                                <bandbox  width="320px" readonly="true"  id="bd1">
                                                                    <bandpopup>
                                                                        <vbox>
                                                                            <listbox id="curso" width="460px"
                                                                        onSelect="bd1.value=self.selectedItem.label;bd1.closeDropdown();">
                                                                                <listitem selected="true" forEach="${cursos}" value="${each}">
                                                                                    <listcell label="${each.descripcion} ${each.especialidad}  ${each.paralelo}" />
                                                                                </listitem>
                                                                            </listbox>
                                                                        </vbox>
                                                                    </bandpopup>
                                                                </bandbox>


                                                                <span style="float:right"> Fecha Nacimiento:</span>
                                                                <datebox id="nacido"  readonly="true"  />
                                                            </row>

                                                            <row>
                                                                <span style="float:right"> Estado (*):</span>
                                                                 <span>
                                                                <combobox readonly="true"   id="accion"  >
                                                                    <comboitem  value="Matriculado" label="Matriculado"/>
                                                                    <comboitem value="Inscrito" label="Inscrito"/>
                                                                    <comboitem value="Retirado" label="Retirado"/>
                                                                    <comboitem value="Emitir Pase" label="Emitir Pase"/>
                                                                    <comboitem value="Recibir Pase" label="Recibir Pase"/>
                                                                </combobox>
                                                                Inst. Anterior: <textbox id="institucion" readonly="true"  maxlength="30" cols="20"/>
                                                                </span>
                                                                <span style="float:right"> Usuario:</span>
                                                                <span>
                                                                    <textbox id="usuario" maxlength="30" cols="12" readonly="true"  />

                                                                    <button label="Generar" onClick="generarClave(true);"/>
                                                                </span>
                                                            </row>
                                                            <row>
                                                                <span style="float:right"> Fec.Matricula(*):</span>
                                                                <span>
                                                                    <datebox id="fechamatricula"  readonly="true"  />
                                                                     Repite:
                                                                    <checkbox id="repite" disabled="true"/>
                                                                </span>
                                                                <span style="float:right"> Clave:</span>
                                                                <textbox id="clave"   maxlength="30" cols="15" readonly="true"  />
                                                            </row>
                                                            <row>
                                                                <span style="float:right"> Transporte:</span>
                                                                <span>
                                                                    <checkbox id="transporte" disabled="true"/>
                                                                    <textbox id="nobus" maxlength="100" cols="40" readonly="true"  />
                                                                </span>
                                                                <span style="float:right"> Activo:</span>
                                                                <checkbox id="estadoe" disabled="true"  />
                                                            </row>
                                                            <row>
                                                                <span style="float:right"> %Beca:</span>
                                                                <span>
                                                                    <decimalbox id="beca" format="###.##"   maxlength="5" cols="10" readonly="true"  />

                                                                Otros Dsctos:
                                                                    <decimalbox id="otros" format="###.##"   maxlength="5" cols="10" readonly="true"  /> USD
                                                                </span>
                                                                <span style="float:right"> Interno:</span>
                                                                <span><checkbox id="adventista" disabled="true" /> Nuevo:
                                                                <checkbox id="nuevo" disabled="true" /></span>
                                                            </row>
                                                            <row>
                                                                <span style="float:right"> Observación:</span>
                                                                <textbox rows="2" id="observacion"  readonly="true"  />
                                                                
                                                            </row>
                                                        </rows>
                                                    </grid>
                                                </south>
                        
                                            </borderlayout>
                                        </panelchildren>
                                    </panel>
                                </columnchildren>
				 
                            </columnlayout>
                        </panelchildren>
                    </panel>
                            
                </tabpanel>
                                
                <tabpanel>
                    <grid>
                        <rows>
                            <row>
                                <span style="color:blue" >Representante</span>
                                <span>
                                    <button id="padrecr" label="Padre" disabled="true" onClick="copiarpr();"/>
                                    <button id="madrecr" label="Madre" disabled="true"  onClick="copiarmr();"/>
                                    <button id="limpiar" label="Nuevo"  disabled="true"  onClick="limpiarRepresentante();"/>
                                </span>

                                     
                                <span style="color:blue" >Datos del Padre</span>
                                <span></span>


                            </row>
                            <row>
                                <span style="float:right"> Busqueda(*):</span>

                                <combobox id="combo2" onSelect="buscarRepresentante(self.selectedItem.label)" autodrop="true" buttonVisible="false"  use="bean.AutoCompleteRepre"/>
                                <span style="float:right"> Identificación:</span>
                                <textbox maxlength="10" cols="13"  readonly="true" id="cedulapa"  />
                            </row>

                            <row>
                                <span style="float:right"> Codigo :</span>
                                <intbox maxlength="14" cols="5"  readonly = "true"    id="codigore"  />
                                <span style="float:right"> Nombres:</span>
                                <textbox id="nombrespa"  maxlength="60" cols="40" readonly="true"   />


                            </row>

                            <row>
                                <span style="float:right"> Identif.(*):</span>
                                <textbox maxlength="13" cols="10"   readonly="true" id="cedulare"  />
                                <span style="float:right"> Apellidos:</span>
                                <textbox id="apellidospa"  maxlength="60" cols="40" readonly="true"  />


                            </row>
                            <row>
                                <span style="float:right"> Nombres(*):</span>
                                <textbox id="nombresre"  maxlength="60" cols="40" readonly="true"   />
                                <span style="float:right"> Ocupación:</span>
                                <textbox id="ocupacionpa" maxlength="100" cols="40"  readonly="true"    />


                            </row>
                            <row>
                                <span style="float:right"> Apellidos(*):</span>
                                <textbox id="apellidosre"  maxlength="60" cols="40" readonly="true"  />
                                <span style="float:right"> Profesión:</span>
                                <textbox id="profesionpa" maxlength="100" cols="40"  readonly="true"    />


                            </row>
                            <row>
                                <span style="float:right"> Dirección(*):</span>
                                <textbox id="direccionre" maxlength="100" cols="40"  readonly="true"    />
                                <span style="float:right"> Dirección:</span>
                                <textbox id="direccionpa" maxlength="100" cols="40"  readonly="true"    />


                            </row>
                            <row>
                                <span style="float:right"> Teléfono:</span>
                                <textbox id="telefonore" maxlength="100" cols="13"  readonly="true"  />
                                <span style="float:right"> Teléfono:</span>
                                <textbox id="telefonopa" maxlength="100" cols="13"  readonly="true"  />

                                      
                            </row>
                            <row>
                                <span style="float:right"> Email:</span>
                                <textbox id="emailre" maxlength="100" cols="40"  readonly="true"    />
                                <span style="float:right"> Email:</span>
                                <textbox id="emailpa" maxlength="100" cols="40"  readonly="true"    />
                            </row>
                            <row>
                                <span  style="float:right">Parentesco</span>
                                <span>
                                    <textbox id="parentesco" maxlength="100" cols="40"  readonly="true"    />
                                </span>
                             
                                <span style="color:blue">  </span>
                                <span> </span>
                            </row>
                            <row>
                                <span style="color:blue" >Facturar a </span>
                                <span>
                                    <button id="padrec" label="Padre"  disabled="true" onClick="copiarp();"/>
                                    <button id="madrec" label="Madre"  disabled="true"  onClick="copiarm();"/>
                                    <button id="representantec" label="Representante" disabled="true"  onClick="copiarr();"/>
                                </span>
                             
                                <span style="color:blue">Datos Madre </span>
                                <span> </span>
                            </row>
                            <row>
                                <span style="float:right"> Tipo:</span>
                                <listbox mold="select" onSelect="llenarConsumidor();" disabled="true" id="tipofac" width="150px">
                                    <listitem label="CEDULA" value="C">
                                    </listitem>
                                    <listitem label="RUC" value="R">
                                    </listitem>
                                    <listitem label="PASAPORTE" value="P">
                                    </listitem>
                                </listbox>

                                <span style="float:right"> Identificación:</span>
                                <textbox maxlength="10" cols="13"  readonly="true" id="cedulama"  />
                            </row>
                            
                            <row>
                                <span style="float:right"> Identificación:</span>
                                <textbox maxlength="13" cols="13"  readonly="true" id="cedulafac"  />
                                

                                <span style="float:right"> Nombres:</span>
                                <textbox id="nombresma"  maxlength="60" cols="40" readonly="true"   />
                            </row>
                           
                            <row>
                                <span style="float:right"> Nombre Factura:</span>
                                <textbox id="nombresfac"  maxlength="100" cols="40" readonly="true"   />
                                

                                <span style="float:right"> Apellidos:</span>
                                <textbox id="apellidosma"  maxlength="60" cols="40" readonly="true"  />
                            </row>
                           
                            <row>
                                <span style="float:right"> Dirección:</span>
                                <textbox id="direccionfac" maxlength="100" cols="40"  readonly="true"    />
                                 
                                
                                <span style="float:right"> Ocupación:</span>
                                <textbox id="ocupacionma" maxlength="100" cols="40"  readonly="true"    />
                            </row>
                            <row>
                                <span style="float:right"> Teléfono:</span>
                                <textbox id="telefonofac" maxlength="30" cols="13"  readonly="true"  />

                                <span style="float:right"> Profesión:</span>
                                <textbox id="profesionma" maxlength="100" cols="40"  readonly="true"    />

                            </row>
                            <row>
                                <span></span>
                                <span></span>
                                <span style="float:right"> Dirección:</span>
                                <textbox id="direccionma" maxlength="100" cols="40"  readonly="true"    />
                            </row>
                            <row>
                                <span></span>
                                <span></span>
                                <span style="float:right"> Teléfono:</span>
                                <textbox id="telefonoma" maxlength="50" cols="13"  readonly="true"  />
                            </row>
                            <row>
                                <span></span>
                                <span></span>
                                <span style="float:right"> Email:</span>
                                <textbox id="emailma" maxlength="100" cols="40"  readonly="true"    />
                            </row>
                                   
                        </rows>
                    </grid>
                           


                </tabpanel>

                <tabpanel>

                    <panel height="370px" style="margin-bottom:10px"
				title="Búsquedas" border="normal">
                        <panelchildren>
                            <vbox width="100%">
                                <hbox >  Estudiantes:
                                    <textbox id="buscarText"  maxlength="60" cols="40" />
                                    <button id="buscar"  label="Buscar" onClick="buscar(buscarText.getValue());"/>
                                </hbox>
                                <hbox width="100%">
                                    <listbox mold="paging"  pageSize="17" onSelect="move();estado(true,false);eliminar.disabled=false;guardar.disabled=true" id="datos" width="100%">
                                        <listhead>
                                            <listheader label="Cod."/>
                                            <listheader label="Nombres"  sort="auto"/>
                                            <listheader label="Dirección"/>
                                        </listhead>
                                        <listitem forEach="${allEvents}" value="${each}">
                                            <listcell label="${each.cedula}" />
                                            <listcell label="${each.apellido} ${each.nombre}" />
                                            <listcell label="${each.direccion}" />
                                        </listitem>
                                    </listbox>


                                </hbox>
                            </vbox>
                        </panelchildren>
                    </panel>

                </tabpanel>
                <tabpanel>

                    <panel height="370px" style="margin-bottom:10px"
				title="Reporte" border="normal">
                        <panelchildren>
                            <jasperreport id="report" />
                        </panelchildren>
                    </panel>

                </tabpanel>

            </tabpanels>
        </tabbox>

        <vbox>
            <hbox>
                <button image="/images/guardar.gif" id="guardar" label="Guardar"  disabled="true"  onClick="guardar();"/>
                <button  image="/images/nuevo.gif" id="agregar" label="Agregar" onClick="nuevo();" />
                <button  image="/images/editar.gif" id="modificar"  label="Modificar" disabled="true" onClick="modificar()"/>
                <button  image="/images/imprimir.gif" id="acta"  label="Acta" disabled="true"  onClick='showReport("AM")'/>
                <button  image="/images/imprimir.gif" id="certificado"  label="Certificado" disabled="true"  onClick='showReport("CM")' />
                <button  image="/images/imprimir.gif" id="claveprint"  label="Clave" disabled="true"  onClick='showReport("CL")' />
                <button  image="/images/eliminar.gif" id="eliminar"  label="Eliminar" disabled="true"  onClick="eliminar();"/>
            </hbox>
        </vbox>
    </window>
 

</zk>