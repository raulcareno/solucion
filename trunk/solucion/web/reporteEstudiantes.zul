<?xml version="1.0" encoding="UTF-8"?>
<window    onCreate="cargando();"    height="100%" border="normal">
    <zk xmlns="http://www.zkoss.org/2005/zul" >

        <zscript>
            <![CDATA[
import sources.CustomDataSource;
import net.sf.jasperreports.engine.JRDataSource;
import sources.*;
import bean.notas;
import java.math.BigDecimal;
import bean.notas;
import jcinform.persistencia.*;
import jcinform.procesos.Administrador;

import java.util.Date;
import org.joda.time.DateMidnight;
import org.zkoss.zul.Listbox;
import bean.Permisos;

Permisos per = new Permisos();
Administrador adm = new Administrador();
Session ses = Sessions.getCurrent();
Periodo periodo = (Periodo) ses.getAttribute("periodo");

Empleados user = (Empleados)ses.getAttribute("user");
    List cursos = null;

    if(user.getTipo().equals("Interna")){
        cursos = adm.query("Select o from Cursos as o where o.periodo.codigoper = '"+periodo.getCodigoper()+"' ");
    }else{
        cursos = adm.query("Select distinct o.curso from MateriaProfesor as o where o.empleado.codigoemp = '"+user.getCodigoemp()+"'  and o.curso.periodo.codigoper = '"+periodo.getCodigoper()+"' ");
    }

Cursos selec = new Cursos(-1);
 
//if(user.getTipo().equals("Interna"))
    //cursos.add(todos);


List materias = adm.query("Select o from Global as o where o.grupo = 'MAT' ");
void buscar2(Cursos cur){

    }
 public JRDataSource inscritos(ArrayList listadodeCursos, String tipo){
  String curso =  "";
    for(Iterator it = listadodeCursos.iterator(); it.hasNext();) {
            Cursos elem = (Cursos) it.next();
            curso +=""+elem.getCodigocur()+",";
      }
      if(curso.length()>0){
         curso = curso.substring(0,curso.length()-1);
      }


      Administrador adm = new Administrador();
      Session ses = Sessions.getCurrent();
      ArrayList detalle = new ArrayList();
        String query = "SELECT mat FROM Matriculas AS mat " +
                "WHERE  mat.estado =  '"+tipo+"' " +
                "and mat.curso.periodo.codigoper = '" + periodo.getCodigoper() + "' and mat.curso.codigocur in ("+curso+") " +
                " order by mat.curso.secuencia, mat.curso.codigocur, mat.estudiante.apellido, mat.estudiante.nombre";
      List hoy = adm.query(query);
      for(Iterator it = hoy.iterator(); it.hasNext();) {
            Matriculas elem = (Matriculas) it.next();
            detalle.add(elem);
      }
      ReporteInscritosDataSource ds = new ReporteInscritosDataSource(detalle);
      return ds;
}
public JRDataSource certificados(ArrayList listadodeCursos,String tipo){
    String curso =  "";
    for(Iterator it = listadodeCursos.iterator(); it.hasNext();) {
            Cursos elem = (Cursos) it.next();
            curso +=""+elem.getCodigocur()+",";
      }
      if(curso.length()>0){
         curso = curso.substring(0,curso.length()-1);
      }

      Administrador adm = new Administrador();
      Session ses = Sessions.getCurrent();
                    ArrayList detalle = new ArrayList();
                    String query =   "Select o from Matriculas as o " +
                                "where o.curso.periodo.codigoper = '" + periodo.getCodigoper() + "' " +
                                "and o.curso.codigocur in (" + curso + ") " +
                                " and o.estado in ('Matriculado','Recibir Pase','Retirado','Emitir Pase') order by o.curso.secuencia, o.curso.descripcion, o.curso.paralelo.descripcion , o.estudiante.apellido,o.estudiante.nombre";
                    List hoy = adm.query(query);
                    for (Iterator it = hoy.iterator(); it.hasNext();) {
                        Matriculas elem = (Matriculas) it.next();
                        detalle.add(elem);
                    }
                JRDataSource ds = null;
                if(tipo.equals("CM")){
                     ds = new ReporteCertificadoDataSource(detalle);
                }else if(tipo.equals("LMAT2")){
                     notas noti = new notas();
                     ds = noti.conteoMatriculas();

                }else{
                      ds = new ReporteActaDataSource(detalle);
                }

            return ds;

}

public JRDataSource pases(ArrayList listadodeCursos,String tipo){

  String curso =  "";
    for(Iterator it = listadodeCursos.iterator(); it.hasNext();) {
            Cursos elem = (Cursos) it.next();
            curso +=""+elem.getCodigocur()+",";
            //detalle.add(elem);
      }
      if(curso.length()>0){
         curso = curso.substring(0,curso.length()-1);
      }
      
      Administrador adm = new Administrador();
      Session ses = Sessions.getCurrent();
                    ArrayList detalle = new ArrayList();
                    String query = "";
                
                        query = "Select o from Matriculas as o " +
                                "where o.curso.periodo.codigoper = '" + periodo.getCodigoper() + "' " +
                                "and o.curso.codigocur in (" + curso + ") " +
                                " and o.estado in ('Recibir Pase') order by o.curso.secuencia, (o.curso.descripcion, o.curso.paralelo.descripcion), (o.estudiante.apellido,o.estudiante.nombre) ";


                    List hoy = adm.query(query);
                    for (Iterator it = hoy.iterator(); it.hasNext();) {
                        Matriculas elem = (Matriculas) it.next();
                        detalle.add(elem);
                    }
                JRDataSource ds = new ReporteActaDataSource(detalle);
                

            return ds;

}

public JRDataSource transporte(ArrayList listadodeCursos,String tipo){
        String curso =  "";
    for(Iterator it = listadodeCursos.iterator(); it.hasNext();) {
            Cursos elem = (Cursos) it.next();
            curso +=""+elem.getCodigocur()+",";
      }
      if(curso.length()>0){
         curso = curso.substring(0,curso.length()-1);
      }

      Administrador adm = new Administrador();
      Session ses = Sessions.getCurrent();
                    ArrayList detalle = new ArrayList();
                    if(tipo.equals("LTRAN")){
                        String query =   "Select o from Matriculas as o " +
                                    "where o.curso.periodo.codigoper = '" + periodo.getCodigoper() + "' " +
                                    "and o.curso.codigocur in (" + curso + ") and  " +
                                    "o.estudiante.transporte = true  " +
                                    "order by o.curso.secuencia, (o.curso.descripcion, o.curso.paralelo.descripcion), (o.estudiante.apellido,o.estudiante.nombre) ";
                    

                        List hoy = adm.query(query);
                        for (Iterator it = hoy.iterator(); it.hasNext();) {
                            Matriculas elem = (Matriculas) it.next();
                            detalle.add(elem);
                        }
                    }else if(tipo.equals("LCART")){
                        String   query = "Select o from Matriculas as o " +
                                        "where o.curso.periodo.codigoper = '" + periodo.getCodigoper() + "' " +
                                        "and o.curso.codigocur in (" + curso + ")  " +
                                        " order by o.curso.secuencia, o.curso.descripcion, o.curso.paralelo.descripcion, o.estudiante.apellido,o.estudiante.nombre ";
                         

                            List hoy = adm.query(query);
                            for (Iterator it = hoy.iterator(); it.hasNext();) {
                                Matriculas elem = (Matriculas) it.next();
                                detalle.add(elem);
                            }

                    }
                JRDataSource ds = new ReporteActaDataSource(detalle);


            return ds;

}
public JRDataSource nuevos(ArrayList listadodeCursos, String tipo){
       String curso =  "";
    for(Iterator it = listadodeCursos.iterator(); it.hasNext();) {
            Cursos elem = (Cursos) it.next();
            curso +=""+elem.getCodigocur()+",";
      }
      if(curso.length()>0){
         curso = curso.substring(0,curso.length()-1);
      }


     Administrador adm = new Administrador();
      Session ses = Sessions.getCurrent();
                    ArrayList detalle = new ArrayList();
                    String query = "SELECT mat FROM Matriculas AS mat " +
                            "WHERE  mat.estado  in ('Matriculado','Recibir Pase','Retirado','Emitir Pase') " +
                            "and mat.curso.periodo.codigoper = '" + periodo.getCodigoper() + "' " +
                            " and mat.curso.codigocur in ("+curso+") and  mat.nuevo = true  " +
                            " order by mat.curso.secuencia, mat.curso.codigocur, mat.estudiante.apellido, mat.estudiante.nombre";
                    List hoy = adm.query(query);
                    for (Iterator it = hoy.iterator(); it.hasNext();) {
                        Matriculas elem = (Matriculas) it.next();
                        detalle.add(elem);
                    }
                JRDataSource ds = new ReporteActaDataSource(detalle);


            return ds;

}

public JRDataSource internos(ArrayList listadodeCursos,String tipo){
       String curso =  "";
    for(Iterator it = listadodeCursos.iterator(); it.hasNext();) {
            Cursos elem = (Cursos) it.next();
            curso +=""+elem.getCodigocur()+",";
      }
      if(curso.length()>0){
         curso = curso.substring(0,curso.length()-1);
      }

      Administrador adm = new Administrador();
      Session ses = Sessions.getCurrent();
                    ArrayList detalle = new ArrayList();
                    String query = "SELECT mat FROM Matriculas AS mat " +
                            "WHERE  mat.estado  in ('Matriculado','Recibir Pase','Retirado','Emitir Pase') " +
                            "and mat.curso.periodo.codigoper = '" + periodo.getCodigoper() + "' and mat.curso.codigocur in ("+ curso +") and  mat.estudiante.adventista = true  " +
                            " order by mat.curso.secuencia, mat.curso.codigocur, mat.estudiante.apellido, mat.estudiante.nombre";
                  
                    List hoy = adm.query(query);
                    for (Iterator it = hoy.iterator(); it.hasNext();) {
                        Matriculas elem = (Matriculas) it.next();
                        detalle.add(elem);
                    }
                JRDataSource ds = new ReporteActaDataSource(detalle);


            return ds;

}


 void showReport() {

     ArrayList listadoCursos = new ArrayList();
                	Set items = curs.getSelectedItems();
						if (items.isEmpty()) {
							alert("SELECCIONE POR LO MENOS UN CURSO...!");
                            return;
						} else {
							List al = new ArrayList(items);
							for (Iterator it = al.iterator(); it.hasNext();) {
								Listitem li = (Listitem)it.next();
								Cursos curso = li.value;
                                listadoCursos.add(curso);
							}
						}
        //Preparing parameters
             ver.visible = false;
            reportese.visible = true;
             //LCAS,LCA,LASI.LGEN,LGENT,LFEC,LMIN
            //conanioscumplidos
            String tipo = reporte.getSelectedItem().getValue();
            cerrar.setVisible(true);
            //rep.setOpen(true);parametros.setOpen(false);
            Institucion insts = periodo.getInstitucion();
            Map parametros = new HashMap();
            parametros.put("denominacion", insts.getDenominacion());
            parametros.put("nombre", insts.getNombre());
            parametros.put("periodo", periodo.getDescripcion());
            parametros.put("slogan", insts.getSlogan());
            parametros.put("secretaria", insts.getSecretaria());
            parametros.put("rectora", insts.getRector());
            parametros.put("jornada", periodo.getSeccion().getDescripcion() );
            parametros.put("regimen", periodo.getRegimen());
             parametros.put("direccion", insts.getDireccion());
            parametros.put("telefono",insts.getTelefono());

            JRDataSource datasource = null;
            String directorioReportes = insts.getReportes();
            //report.setSrc("web-inf/reportes/"certificadoMatricula.jasper");
            if(tipo.equals("CM")){
                    datasource = certificados(listadoCursos,"CM");
                    report.setSrc(directorioReportes+"certificadoMatricula.jasper");
                    parametros.put("titulo", "Certificado de Matricula");
            }else if(tipo.equals("CM2")){
                    datasource = certificados(listadoCursos,"LREP");
                    parametros.put("titulo", titulo.getValue());
                    report.setSrc(directorioReportes+"certificadoMatricula2.jasper");
            }else if(tipo.equals("LFEC")){
                    datasource = certificados(listadoCursos,"LREP");
                    parametros.put("titulo", titulo.getValue());
                    report.setSrc(directorioReportes+"conanioscumplidos.jasper");
            }else if(tipo.equals("LCAS")){
                    datasource = certificados(listadoCursos,"LREP");
                    parametros.put("titulo", titulo.getValue());
                    report.setSrc(directorioReportes+"concasilleros.jasper");
            }else if(tipo.equals("LMIN")){
                    datasource = certificados(listadoCursos,"LREP");
                    parametros.put("titulo", titulo.getValue());
                    report.setSrc(directorioReportes+"conmatricula.jasper");
            }else if(tipo.equals("LCED")){
                    datasource = certificados(listadoCursos,"LREP");
                    parametros.put("titulo", titulo.getValue());
                    report.setSrc(directorioReportes+"concedula.jasper");
            }else if(tipo.equals("LREP2")){
                    datasource = certificados(listadoCursos,"LREP2");
                    parametros.put("titulo", titulo.getValue());
                    report.setSrc(directorioReportes+"libromatriculas.jasper");
            }else if(tipo.equals("LINT2")){
                    datasource = certificados(listadoCursos,"LINT2");
                    parametros.put("titulo", titulo.getValue());
                    report.setSrc(directorioReportes+"fechadiscapacidad.jasper");
            }else if(tipo.equals("LREL")){
                    datasource = certificados(listadoCursos,"LREL");
                    parametros.put("titulo", titulo.getValue());
                    report.setSrc(directorioReportes+"conreligion.jasper");
            }else if(tipo.equals("LPAS")){
                    datasource = pases(listadoCursos,"LPAS");
                    parametros.put("titulo", titulo.getValue());
                    report.setSrc(directorioReportes+"conpase.jasper");
            }else if(tipo.equals("LTRAN")){
                    datasource = transporte(listadoCursos,"LTRAN");
                    parametros.put("titulo", titulo.getValue());
                    report.setSrc(directorioReportes+"transporte.jasper");
            }else if(tipo.equals("LCART")){
                    datasource = transporte(listadoCursos,"LCART");
                    parametros.put("titulo", titulo.getValue());
                    report.setSrc(directorioReportes+"paracarnet.jasper");
            }
            else if(tipo.equals("LNUEV")){
                    datasource = nuevos(listadoCursos,"LNUEV");
                    parametros.put("titulo", titulo.getValue());
                    report.setSrc(directorioReportes+"nuevos.jasper");
            }else if(tipo.equals("LINT")){
                    datasource = internos(listadoCursos,"LINT");
                    parametros.put("titulo", titulo.getValue());
                    report.setSrc(directorioReportes+"internos.jasper");
            }else if(tipo.equals("LCA")){
                    datasource = certificados(listadoCursos,"LREP");
                    parametros.put("titulo",titulo.getValue());
                    report.setSrc(directorioReportes+"con1casilleros.jasper");
            }else if(tipo.equals("LASI")){
                    datasource = certificados(listadoCursos,"LREP");
                    parametros.put("titulo",titulo.getValue());
                    report.setSrc(directorioReportes+"conasistencia.jasper");
            }else if(tipo.equals("LGEN")){
                    datasource = certificados(listadoCursos,"LREP");
                    parametros.put("titulo", titulo.getValue());
                    report.setSrc(directorioReportes+"congenero.jasper");
            }else if(tipo.equals("AM")){
                    datasource = certificados(listadoCursos,"AM");
                    parametros.put("titulo", "Acta de Matricula");
                    report.setSrc(directorioReportes+"actaMatricula.jasper");

            }else if(tipo.equals("INS")){
                    datasource = inscritos(listadoCursos,"Inscrito");
                    parametros.put("titulo", titulo.getValue());
                    report.setSrc(directorioReportes+"estudiantes.jasper");
            }else if(tipo.equals("MAT")){
                    datasource = inscritos(listadoCursos,"Matriculado");
                    parametros.put("titulo", titulo.getValue());
                    report.setSrc(directorioReportes+"estudiantes.jasper");
            }else if(tipo.equals("RET")){
                    datasource = inscritos(listadoCursos,"Retirado");
                    parametros.put("titulo", titulo.getValue());
                    report.setSrc(directorioReportes+"estudiantes.jasper");
            }else if(tipo.equals("LMAT")){
                    datasource = certificados(listadoCursos,"LMAT");
                    parametros.put("titulo", titulo.getValue());
                    report.setSrc(directorioReportes+"estudiantes.jasper");
            }else if(tipo.equals("LMAT2")){
                    datasource = certificados(listadoCursos,"LMAT2");
                    parametros.put("titulo", titulo.getValue());
                    report.setSrc(directorioReportes+"totalizados.jasper");
            }else if(tipo.equals("LCLA")){
                    datasource = certificados(listadoCursos,"LCLA");
                    parametros.put("titulo",titulo.getValue());
                    report.setSrc(directorioReportes+"claves.jasper");
            }else if(tipo.equals("LCLA2")){
                    datasource = certificados(listadoCursos,"LCLA2");
                    parametros.put("titulo",titulo.getValue());
                    report.setSrc(directorioReportes+"clavePersonalCompleto.jasper");
            }else if(tipo.equals("LCLA3")){
                    datasource = certificados(listadoCursos,"LCLA2");
                    parametros.put("titulo",titulo.getValue());
                    report.setSrc(directorioReportes+"clavesRepre.jasper");
            }else if(tipo.equals("LCLA4")){
                    datasource = certificados(listadoCursos,"LCLA2");
                    parametros.put("titulo",titulo.getValue());
                    report.setSrc(directorioReportes+"clavePersonalCompletoRepre.jasper");
            }else if(tipo.equals("LCOR")){
                    datasource = certificados(listadoCursos,"LCOR");
                    parametros.put("titulo",titulo.getValue());
                    report.setSrc(directorioReportes+"concorreos.jasper");
            }else if(tipo.equals("LREP")){
                    datasource = certificados(listadoCursos,"LREP");
                    parametros.put("titulo",titulo.getValue());
                    report.setSrc(directorioReportes+"representantes.jasper");
            }else if(tipo.equals("LCAR")){
                    datasource = certificados(listadoCursos,"LCAR");
                    parametros.put("titulo", "Carné Estudiantil");
                    report.setSrc(directorioReportes+"carnet.jasper");
            }else if(tipo.equals("LCAR1")){
                    datasource = certificados(listadoCursos,"LCAR");
                    parametros.put("titulo", "Carné Estudiantil");
                    report.setSrc(directorioReportes+"carnetMinisterio.jasper");
            }else if(tipo.equals("-1")){
                alert("No ha seleccionado ningún reporte...!");
                    return;
            }
            if(!tipo.equals("-1")){
                report.setParameters(parametros);
                report.setDatasource(datasource);
                report.setType((String) format.getSelectedItem().getValue());
            }
 }

void campos(String valor){
    //curs.setSelectedIndex(0);
    mates.disabled = true;
    curs.disabled = false;
     filacurso.visible=true;
     filatitulo.visible=true;
        if(valor.equals("INS") || valor.equals("MAT") || valor.equals("RET") || valor.equals("LMAT2") ){
            curs.disabled = true;
            mates.disabled = true;
            titulo.value = "Listado de Estudiantes";
         // filacurso.visible = false;
        }
        if(valor.equals("CM") ||  valor.equals("CM2") )
            titulo.value = "Certificado de Matricula";
        if(valor.equals("AM"))
            titulo.value = "Actas de Matricula";
        if(valor.equals("INS"))
            titulo.value = "Estudiantes Inscritos";
        if(valor.equals("MAT"))
            titulo.value = "Listado de Matriculados";
        if(valor.equals("RET"))
            titulo.value = "Listado de Retirados";
        if(valor.equals("LMAT") || valor.equals("LMAT2"))
            titulo.value = "Listado de Matriculados por Curso";
    

        if(valor.equals("LCAR"))
            titulo.value = "Carné Estudiantil";
        if(valor.equals("LCLA"))
            titulo.value = "Claves de Estudiantes";
       if(valor.equals("LCLA2"))
            titulo.value = "Claves de Estudiantes";
      if(valor.equals("LCOR"))
            titulo.value = "Correos";
        if(valor.equals("LREP"))
            titulo.value = "Lista de Representantes";
        if(valor.equals("LCAS"))
            titulo.value = "Listado de Estudiantes";
       if(valor.equals("LCA"))
            titulo.value = "Listado de Estudiantes";
       if(valor.equals("LASI"))
            titulo.value = "Listado de Estudiantes";
       if(valor.equals("LGEN"))
            titulo.value = "Listado de Estudiantes";
       if(valor.equals("LFEC"))
            titulo.value = "Listado de Estudiantes";
       if(valor.equals("LMIN"))
            titulo.value = "Listado de Estudiantes";
       if(valor.equals("LCED"))
            titulo.value = "Listado de Estudiantes";

       if(valor.equals("LPAS"))
            titulo.value = "NOMINA DE ESTUDIANTES CON PASES DE OTROS COLEGIOS";
      if(valor.equals("LINT"))
            titulo.value = "Listado de Estudiantes";
      if(valor.equals("LINT2"))
            titulo.value = "Listado de Estudiantes";



        


}


]]>
        </zscript>
        <panel width="100%" id="parametros"  height="100%" border="normal" collapsible="true" >
            <panelchildren>
                <grid id="ver"  width="100%"   height="100%" >
                    <rows>
                        <row  style="background:transparent;border:0px" >
                            <span style="float:right"> Reporte:</span>
                            <listbox id="reporte" onSelect="campos(self.selectedItem.value)"  width="400px"  mold="select" >
                                <listitem  label="[Seleccione]" value="-1" selected="true" />
                                <listitem  id="AM" label="Actas de Matricula" value="AM" />
                                <listitem id="CM"  label="Certificado de Matricula" value="CM" />
                                <listitem  id="CM2" label="Certificado de Matricula(2)" value="CM2" />
                                <listitem  id="LMIN" label="Folio y No. Matricula" value="LMIN"/>
                                <listitem  id="INS" label="Inscritos" value="INS" />
                                <!--listitem  id="MAT" label="Matriculados General" value="MAT" /-->
                                <listitem  id="LMAT" label="Matriculados" value="LMAT" />
                                <listitem id="RET"  label="Retirados" value="RET" />
                                <listitem  id="LREP2" label="Libro de Matriculas" value="LREP2"/>
                                <listitem  id="LPAS" label="Pases Recibidos" value="LPAS"/>
                                <listitem  id="LMAT2" label="Totalizado de Matriculados" value="LMAT2" />
                                
                             
                                <listitem disabled="true" label="- - - - - - - - - - - - - - - - - - - - - - - " > </listitem>
                                <listitem  id="LCAR" label="Carné del Estudiante(1) "  value="LCAR"/>
                                <listitem  id="LCAR1" label="Carné Estudiantil Ministerio(2)"  value="LCAR1"/>
                                <listitem  id="LCART" label="Estudiante para Carnét (No.Mat-Fecha-Curso)" value="LCART" />
                                <listitem  id="LCLA" label="Estudiantes con Claves (Todos)" value="LCLA"/>
                                <listitem  id="LCLA2" label="Estudiantes con Claves (Individual-Recortar)" value="LCLA2"/>
                                <listitem  id="LCLA3" label="Representantes con Claves (Todos)" value="LCLA3"/>
                                <listitem  id="LCLA4" label="Representante con Claves (Individual-Recortar)" value="LCLA4"/>
                                <listitem  id="LCOR" label="Estudiantes con Correos electrónicos" value="LCOR"/>
                                <listitem  id="LREP" label="Estudiantes con Representantes" value="LREP"/>
                                <listitem  id="LCAS" label="Estudiantes con Casilleros vacios" value="LCAS"/>
                                <listitem  id="LCA" label="Estudiantes 1 Casillero" value="LCA"/>
                                <listitem  id="LASI" label="Listado para Asistencia" value="LASI"/>
                                
                                <listitem  id="LGEN" label="Estudiantes por Genero (Masculino:Femenino)" value="LGEN"/>
                                <listitem  id="LFEC" label="Estudiantes por Fecha y Edad (Años Cumplidos)" value="LFEC"/>
                                <listitem  id="LCED" label="Estudiantes con Cédula de Identidad" value="LCED"/>
                                
                                <listitem  disabled="true" label="- - - - - - - - - - - - - - - - - - - - - - - " > </listitem>
                                <listitem  id="LNUEV" label="Estudiantes Nuevos" value="LNUEV"/>
                                <listitem  id="LTRAN" label="Estudiantes que Toman transporte" value="LTRAN"/>
                                <listitem  id="LINT"  label="Estudiantes Internos" value="LINT"/>
                                <listitem  id="LREL"  label="Estudiantes por Religión" value="LREL"/>
                                <listitem  id="LINT2" label="Estudiantes con Fecha y Discapacidad(SI:NO)" value="LINT2"/>
                                <listitem  disabled="true" label="- - - - - - - - - - - - - - - - - - - - - - - " > </listitem>
                            </listbox>
                        </row>

                        <row  id="filacurso" visible="false" style="background:transparent;border:0px" >
                            <span style="float:right"> Curso:</span>
                            <!-- onSelect="buscar2(((Cursos)self.selectedItem.value));" -->
                            <listbox id="curs" width="400px" height="200px"  multiple="true" checkmark="true"
                                     >
                                <listhead>
                                    <listheader label="Seleccionar Todos"/> </listhead>
                                <listitem forEach="${cursos}" value="${each}" label="${each.descripcion} ${each.especialidad}  ${each.paralelo}"/>
                            </listbox>
                        </row>
                        <row   visible="false" style="background:transparent;border:0px" >
                            <span style="float:right"> Estudiantes: </span>

                            <listbox id="mates" width="300px"  mold="select" >
                                <listitem forEach="${estudiantes}" value="${each}">
                                    <listcell label="${each.apellidos}" />
                                </listitem>
                            </listbox>


                        </row>
                        <row  id="filatitulo" style="background:transparent;border:0px" >
                            <span style="float:right"> Titulo: </span>
                            <div>
                                <textbox id="titulo" width="280px" />
                                <span>
                                    <bandbox readonly="true"  width="70px" value="PDF" id="bd" >
                                        <bandpopup>
                                            <vbox>
                                                <listbox width="90px" id="format"  onSelect="bd.value=self.selectedItem.label; ejecutar.image = self.selectedItem.image;  bd.close();showReport();">
                                                    <listitem  value="pdf" selected="true"><listcell  image="/images/pdf.png" label="PDF" />
                                                    </listitem>
                                                    <listitem value="rtf"><listcell  image="/images/word.gif" label="Word" />
                                                    </listitem>
                                                    <listitem value="xls"><listcell  image="/images/excel.gif"  label="Excel" />
                                                    </listitem>
                                                    <listitem value="jxl"><listcell  image="/images/excel.gif" label="JXL" />
                                                    </listitem>
                                                    <listitem value="csv"><listcell  image="/images/csv.gif" label="CSV" />
                                                    </listitem>
                                                    <listitem value="odt"><listcell  image="/images/open.png" label="OpenOfic" />
                                                    </listitem>
                                                    <listitem value="xml"><listcell  image="/images/xml.gif" label="XML" />
                                                    </listitem>
                                                    <listitem value="html"><listcell  image="/images/html.gif" label="HTML" />
                                                    </listitem>
                                                </listbox>
                                            </vbox>
                                        </bandpopup>
                                    </bandbox>
                                    <button label="MOSTRAR REPORTE"  image="/images/pdf.png" id="ejecutar" onClick='showReport();'/>
                                </span>
                            </div>
                        </row>
                       
                    </rows>
                </grid>
                <zscript>
                    public void aumentar(){
                    String tamanio = report.height.replace("px","").replace("%","");
                       Integer t = new Integer(tamanio);
                       report.height = (t+100)+"px";
                    }
                    public void reducir(){
                    String tamanio = report.height.replace("px","").replace("%","");
                       Integer t = new Integer(tamanio);
                       report.height = (t-100)+"px";
                    }

                </zscript>
                
                <grid id="reportese" visible="false" width="100%" height="100%">
                    <rows>
                        <row   spans="2">
                            <span>
                                <button  image="/images/eliminar.gif" id="cerrar" label="Cerrar y Seleccionar otro reporte" onClick='ver.setVisible(true);cerrar.setVisible(false);'/>

                                <button  id="reducir" label="Disminuir(-)" onClick="reducir()"/>
                                <button  id="aumentar" label="Aumentar (+)" onClick="aumentar()"/>
                            </span>
                        </row>

                        <row   spans="2">
                            
                            <jasperreport width="100%" height="500px" id="report" />
                            

                        </row>

                    </rows>
                </grid>

            </panelchildren>

        </panel>
        



        <zscript>
            import bean.Permisos;
            Permisos per = new Permisos();
            void cargando(){

            CM.visible = per.verificarPermisoReporte("CM", "Ingresar");
            CM2.visible = per.verificarPermisoReporte("CM2", "Ingresar");
            AM.visible = per.verificarPermisoReporte("AM", "Ingresar");
            INS.visible = per.verificarPermisoReporte("INS", "Ingresar");
            MAT.visible = per.verificarPermisoReporte("MAT", "Ingresar");
            RET.visible = per.verificarPermisoReporte("RET", "Ingresar");
            LMAT.visible = per.verificarPermisoReporte("LMAT", "Ingresar");
            LMAT2.visible = per.verificarPermisoReporte("LMAT", "Ingresar");
            LCAR.visible = per.verificarPermisoReporte("LCAR", "Ingresar");
            LCAR1.visible = per.verificarPermisoReporte("LCAR1", "Ingresar");
            LCART.visible = per.verificarPermisoReporte("LCART", "Ingresar");
            LCLA.visible = per.verificarPermisoReporte("LCLA", "Ingresar");
            LCLA2.visible = per.verificarPermisoReporte("LCLA2", "Ingresar");
            LCLA3.visible = per.verificarPermisoReporte("LCLA", "Ingresar");
            LCLA4.visible = per.verificarPermisoReporte("LCLA", "Ingresar");
            LCOR.visible = per.verificarPermisoReporte("LCOR", "Ingresar");

            LREP.visible = per.verificarPermisoReporte("LREP", "Ingresar");
            LREP2.visible = per.verificarPermisoReporte("LREP", "Ingresar");
            LCAS.visible = per.verificarPermisoReporte("LCAS", "Ingresar");
            LCA.visible = per.verificarPermisoReporte("LCA", "Ingresar");
            LASI.visible = per.verificarPermisoReporte("LASI", "Ingresar");
            LGEN.visible = per.verificarPermisoReporte("LGEN", "Ingresar");
            LFEC.visible = per.verificarPermisoReporte("LFEC", "Ingresar");
            LMIN.visible = per.verificarPermisoReporte("LMIN", "Ingresar");
            LCED.visible = per.verificarPermisoReporte("LMIN", "Ingresar");
            LPAS.visible = per.verificarPermisoReporte("LPAS", "Ingresar");
            LNUEV.visible = per.verificarPermisoReporte("LNUEV", "Ingresar");
            LTRAN.visible = per.verificarPermisoReporte("LTRAN", "Ingresar");
            LINT.visible = per.verificarPermisoReporte("LINT", "Ingresar");
            LINT2.visible = per.verificarPermisoReporte("LINT", "Ingresar");
            LREL.visible = per.verificarPermisoReporte("LINT", "Ingresar");

            }
        </zscript>




    </zk>


</window>






