<?xml version="1.0" encoding="UTF-8"?>

<zk xmlns="http://www.zkoss.org/2005/zul">
    <window>
    <zscript>
        <![CDATA[
        
import bean.reportesClase;
import java.math.BigDecimal;
import bean.notasPlanificacionEvaluadores;
import jcinform.persistencia.*;
import jcinform.procesos.Administrador;
import java.util.Date;
import org.joda.time.DateMidnight;
import org.zkoss.zul.Listbox;
import sources.*;
import bean.Permisos;
import net.sf.jasperreports.engine.JRDataSource;
import bean.exportarExcel;

import org.zkoss.zul.Auxhead;
import org.zkoss.zul.Auxheader;
import org.zkoss.zul.Grid;
import org.zkoss.zul.Column;
import org.zkoss.zul.Columns;

Administrador adm = new Administrador();
exportarExcel exp = new exportarExcel();

 Session ses = Sessions.getCurrent();
 Periodo periodo = (Periodo) ses.getAttribute("periodo");
 Empleados user =  (Empleados)ses.getAttribute("user");
Permisos permiso = new Permisos();    

List evaluaciones = adm.query("Select o from PlanificacionEvaluadores as o " + 
             " where  o.periodo.codigoper = '"+periodo.getCodigoper()+"' order by o.codigo  ");
            String[][] values = new String[evaluaciones.size()][2];
                      for (int i=0;i< evaluaciones.size();i++) {
                         values[i][0]= ((PlanificacionEvaluadores)evaluaciones.get(i)).getNombre();
                      }
List cursos0 = null;
    if(user.getTipo().equals("Interna")){
        cursos0 = adm.query("Select distinct o.curso from MateriaProfesor as o " +
          " where o.curso.periodo.codigoper =  '"+periodo.getCodigoper()+"' " + 
           " group by o.curso order by o.curso.secuencia, o.curso.paralelo.descripcion ");
    }else{
        cursos0 = adm.query("Select distinct o.curso from MateriaProfesor as o " +
          " where o.empleado.codigoemp = '"+ user.getCodigoemp() +"'  " + 
          " and o.curso.periodo.codigoper =  '"+periodo.getCodigoper()+"' order by o.curso.secuencia, o.curso.paralelo.descripcion ");
    }
    List cursos = new ArrayList();
    List secuencias = new ArrayList();
    int i =0;
    for (Iterator it = cursos0.iterator(); it.hasNext();) {
                      Cursos estudent = (Cursos) it.next();
                      if(i==0){
                      cursos.add(estudent);
                      secuencias.add(estudent.getSecuencia());
                      }else{
                        if(!secuencias.contains(estudent.getSecuencia())){
                            cursos.add(estudent); 
                            secuencias.add(estudent.getSecuencia());
                        }
                      
                      }
                      i++;
 
    }
     Boolean verificar(String accion){
        return permiso.verificarPermiso("Planificacion",accion);

    }
    void nuevo(){
        if(verificar("Agregar")){
                guardar.disabled=false;
                    llenar(new Planificacion(0));
                    estado(false,false);
 
       }else{
                    Messagebox.show("No tiene permisos para realizar esta acción...!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
        }
}

void llenar(Planificacion empa){
   
}
void estado(Boolean estado,Boolean modificar){
          curs.disabled = estado; 
        materia.disabled = estado;
        ejeexplorador.readonly = estado;
        ejeaprendizaje.readonly = estado;
        bloque.readonly = estado;
        duracion.readonly = estado;
        fechainicio.readonly = estado;
        fechafin.readonly = estado;
        objetivos.readonly = estado;
        ejetransversal .readonly = estado;
         
}


    
void buscarMaterias(Cursos curso){
        List materias;
            if(user.getTipo().equals("Interna")){
                materias = adm.query("Select distinct  o.materia from MateriaProfesor as o " +
                " where o.curso.periodo.codigoper =  '"+periodo.getCodigoper()+"' and o.curso.secuencia = '"+curso.getSecuencia()+"'  " + 
                " order by o.materia.descripcion ");
            }else{
                materias= adm.query("Select distinct o.materia from MateriaProfesor as o " +
                " where o.empleado.codigoemp = '"+ user.getCodigoemp() +"'  and o.curso.secuencia = '"+curso.getSecuencia()+"'    " + 
                " and o.curso.periodo.codigoper =  '"+periodo.getCodigoper()+"' order by o.materia.descripcion ");
            }
        materia.getChildren().clear();
        try{ 
        
             datos.getRows().getChildren().clear(); }catch(Exception ab){System.out.println(""+ab);}
             bd2.value = "";
               for (Iterator it = materias.iterator(); it.hasNext();) {
                      Global estudent = (Global) it.next();
                        Listitem item = new Listitem();
                        item.setValue(estudent);
                        item.appendChild(new Listcell(estudent.getDescripcion()+""));
                        materia.appendChild(item);
             }
    }

    void generar(){
            
         filas.addRow(curs.selectedItem.value.getSecuencia()+"",materia.selectedItem.value);  
 

}
//
]]>
    </zscript>
    
        <vbox>
            <vbox>
                <hbox>
                    <button image="/images/guardar.gif" id="guardar" label="Guardar"  disabled="true"  onClick="guardar();"/>
                    <button  image="/images/nuevo.gif" id="agregar" label="Agregar" onClick="nuevo();" />
                    <button  image="/images/editar.gif" id="modificar"  label="Modificar" disabled="true"  onClick="modificar()"/>
                    <button  image="/images/eliminar.gif" id="eliminar"  label="Eliminar" disabled="true"  onClick="eliminar();"/>
                    <button   label="Genera"    onClick="generar();"/>
                </hbox>
            </vbox>

        </vbox>

        <groupbox mold="3d" >
            <caption label="Agregar" />

            <grid width="100%">
                <rows>
              
                    <row>
                        
                        <span style="float:right"> AÑO:</span>
                        <span>
                         
                         <listbox id="curs"   mold ="select" 
                                             onSelect="buscarMaterias(self.selectedItem.value)">
                                        <listitem label="SELECCIONE" value="-1"/>
                                        <listitem forEach="${cursos}" value="${each}">
                                            <listcell label="${each.descripcion}" />

                                        </listitem>
                                    </listbox>
                        <span> AREA(*):</span>
                          
                                    <listbox id="materia" mold="select" >
                                        <listitem label="SELECCIONE" value="0"/> 
                                        <listitem forEach="${materias}" value="${each}">
                                            <listcell label="${each.descripcion}" />

                                        </listitem>
                                    </listbox>
                                    </span>
                        
                    </row>
                    <row>
                        <span style="float:right"> EJE INTEGRADOR:</span>
                        <textbox id="ejeexplorador" rows="2"  cols="125" readonly="true"   />   
                    </row>
                    <row>
                        <span style="float:right"> EJE APRENDIZAJE:</span>
                        <textbox id="ejeaprendizaje" rows="2"  cols="125" readonly="true"   />   
                    </row>
                    
                    <row>
                        <span style="float:right"> BLOQUES:</span>
                        <textbox id="bloque" cols="125" readonly="true"   />   
                    </row>
                    <row>
                        <span style="float:right"> DURACIÓN:</span>
                        <span>
                            <textbox id="duracion" cols="40" readonly="true" />   
                     
                            <span> FECHA DE INICIO:</span>
                            <datebox id="fechainicio" />
                     
                            <span> FECHA DE EVALUACIÓN:</span>
                            <datebox id="fechafin" />
                        </span>
                    </row>
                    
                    <row>
                        <span style="float:right"> OBJETIVOS:</span>
                        <textbox id="objetivos" cols="125" rows="2"  readonly="true"   />   
                    </row>
                    <row>
                        <span style="float:right"> EJE TRANSVERSAL:</span>
                        <textbox id="ejetransversal" rows="2" cols="125" readonly="true"   />   
                    </row>
                    
                </rows>
            </grid>
         
      
          <grid height="400px"  width="100%" id="datos" >
                <columns>
                        <column forEach="${values}" height="70px" style="text-align:justify"  width="155px"  align="justify" >
                            <textbox style="text-align:justify;background:transparent;border:0px"  width="155px" value="${each[0]}" rows="3"/>
                        </column>
                </columns>
                <rows id="filas" use="bean.Planificacion">
                </rows>
            </grid>
       
        </groupbox>

    </window>

</zk>
