<?xml version="1.0" encoding="utf-8"?>
<?page title="Administrador Educativo"?>
<?link rel="shortcut icon" type="image/icono" href="images/icono.png"?>
<borderlayout id="todo" height="100%" onCreate="cargando();" >
    <zscript>
        <![CDATA[
        
    import jcinform.persistencia.*;
    import jcinform.procesos.Administrador;
    import bean.Permisos;
    import java.io.FileNotFoundException;
    import java.io.FileOutputStream;
    import java.io.DataOutputStream;
    import java.io.FileInputStream;
    import java.io.InputStream;
    import java.io.IOException;
    import java.util.logging.Level;
    import java.util.logging.Logger;
    import org.joda.time.DateMidnight;

Session a = Sessions.getCurrent();
    Representante emp = a.getAttribute("userRepresentante");
     if(emp==null){
        Executions.sendRedirect("login.zul");
     }
     Estudiantes emp2 =  (Estudiantes) a.getAttribute("userEstudiante");
     boolean tienePendientes = false;
     String mesesPendientes = "";
           Administrador adm = new Administrador();
 void salir(){
        Executions.sendRedirect("loginEstudiantes.zul");
        Session a = Sessions.getCurrent();
        a.removeAttribute("userRepresentante");
        //a.invalidate();
 }

void cambiarEstado(Estudiantes user){
    Date fechaActual = adm.Date();
    tienePendientes = false;
    mesesPendientes = "";
    String fec = (fechaActual.getYear()+1900) + "-" + (fechaActual.getMonth()+1) + "-"+(fechaActual.getDate())+"";
        List pendientesEncontrados = adm.query("Select o from Asignados  as o " + 
            " where o.matricula.estudiante.codigoest =  '"+user.getCodigoest()+"'  " + 
            " and o.fechai <= '"+fec+"' and o.estado = true order by o.fechai");
        datos = new Listbox();
    int rubrosMorosos = 0;        
        for(int i = 0; i< pendientesEncontrados.size();i++){
            Asignados asi = pendientesEncontrados.get(i);
             DateMidnight inicial = new DateMidnight(asi.getFechai());
             inicial = inicial.plusDays(10);
             DateMidnight finale = new DateMidnight(fechaActual);
              if (inicial.compareTo(finale) > 0) {
                    
              }else{
                rubrosMorosos++;
             
                String mes = "";
                switch(asi.getFechai().getMonth()){
                case 0: mes = "Enero"; break;
                case 1: mes = "Febrero"; break;
                case 2: mes = "Marzo"; break;
                case 3: mes = "Abril"; break;
                case 4: mes = "Mayo"; break;
                case 5: mes = "Junio"; break;
                case 6: mes = "Julio"; break;
                case 7: mes = "Agosto"; break;
                case 8: mes = "Septiembre"; break;
                case 9: mes = "Octubre"; break;
                case 10: mes = "Noviembre"; break;
                case 11: mes = "Diciembre"; break;
                    }
               mesesPendientes += "* "+mes+" "+(asi.getFechai().getYear()+1900) +"\n";
                
              }
        }
        System.out.println("DEBE ALREDEDOR DE: "+rubrosMorosos+" RUBROS");
        if(rubrosMorosos>0){
                tienePendientes = true;
                mesesPendientes ="\nSaldos Pendientes en: \n"+ mesesPendientes;
                System.out.println("contiene deudas pendientes"+pendientesEncontrados.size());
                user.setPendientes(true);
                adm.actualizar(user);
                emp = user.getRepresentante();
                emp.setEstado(true);
                adm.actualizar(emp);
        }else{
                user.setPendientes(false);
                adm.actualizar(user);
                emp = user.getRepresentante();
                emp.setEstado(false);
                adm.actualizar(emp);
        
        }
         a.removeAttribute("userEstudiante");
         a.setAttribute("userEstudiante",user);
}
 
  void ingresarSin(String valor){
        Include inc = (Include) xcontents;
        inc.setSrc(valor);
 }
 

 void ingresar(String valor){
      cambiarEstado(emp2);
      System.out.println("ESTUDIANTE:"+emp2);
     if(emp.getEstado() == null)
         emp.setEstado(false);
     if(emp.getEstado() || emp2.getBloquear()){
            Messagebox.show("Proceso bloqueado por la administración, acerquese a las oficinas..! \n "+mesesPendientes, "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
        return;
     }
        Include inc = (Include) xcontents;
        inc.setSrc(valor);
 }
    cargando(){
   
          Session a = Sessions.getCurrent();
            Representante peri =  (Representante) a.getAttribute("userRepresentante");
            Estudiantes periEst =  (Estudiantes) a.getAttribute("userEstudiante");
           try{
           List matricula = adm.query("Select o from Matriculas as o " +
           " where o.estudiante.codigoest =  '"+periEst.getCodigoest()+"' order by o.fechamat desc");
            
            if(((Matriculas)matricula.get(0)).getExtension()!= null){
            try {

                java.io.File f = new java.io.File(((Matriculas)matricula.get(0)).getCurso().getPeriodo().getInstitucion().getFotos()+((Matriculas)matricula.get(0)).getCodigomat()+"."+((Matriculas)matricula.get(0)).getExtension());
                fin = new FileInputStream(f);
                byte[] buffer = new byte[(int) f.length()];
                fin.read(buffer);
                fin.close();
                foto0.setContent(new org.zkoss.image.AImage("fotito", buffer));

            } catch (FileNotFoundException ex) {
                foto0.setContent(new org.zkoss.image.AImage("vacio", desktop.webApp.getResourceAsStream("/fotos/vacio.gif")));
                Logger.getLogger("ERROR EN MATRICULAS: ").log(Level.SEVERE, null, ex);
            }
           }else{
                foto0.setContent(new org.zkoss.image.AImage("vacio", desktop.webApp.getResourceAsStream("/fotos/vacio.gif")));
           }

            }catch(Exception e){}


        }
        
         void ingresarMatriculas(){
                    
                  
                            if(emp2.getPendientes()){
                                Messagebox.show("Proceso bloqueado por la Administración, acerquese a las oficinas para solucionar los procesos pendientes que tiene con la Institución..!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
                                return;
                            }
                             try{
                               List matricula = adm.query("Select o from Matriculas as o " +
                                  " where o.estudiante.codigoest =  '"+ emp2.getCodigoest()+"' order by o.fechamat desc");
                                   a.setAttribute("matriculaActual",((Matriculas)matricula.get(0)));
                               } catch (Exception ex) {
                               
                               }
                          
                             /* if(emp2.getMatriculado()){
                                Messagebox.show("Usted ya se ha encuentra MATRICULADO...!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
                                return;
                            }*/
                        Executions.sendRedirect("/matriculacionEstudiantes1de2.zul");
 
 
  } 
]]>
    </zscript>
    <north style="background-image: url(./images/cabefondo1.png)"  size="85px" >
        <div>
            <hbox>
                <image  border="15px"  style="padding:0 10px; margin:5px; padding:0" height="75px" id="foto0" />
                <toolbar  style="background:transparent;border:0px"  id="tb" sclass="vista" height="20px" >
                    <vbox>
                        <label style="font-size:14px;color:white;font-weight:bold;" value="${sessionScope.userEstudiante.nombre}  ${sessionScope.userEstudiante.apellido} " />
                        <label style="font-size:12px;color:white;font-weight:bold;" value="${sessionScope.userEstudiante.direccion}" />
                        <label style="  font-size:12px;color:white;font-weight:bold;"  value="${sessionScope.userEstudiante.mail}" />
                        <label style="font-weight:bold;font-size:12px;color:white;" value="USUARIO: ${sessionScope.userRepresentante.nombres} ${sessionScope.userRepresentante.apellidos} " />
                    </vbox>
                </toolbar>

                        

                <fisheyebar orient="horizontal" id="fsb"
			attachEdge="top" itemWidth="85" itemHeight="85" itemMaxHeight="98" itemMaxWidth="118">
                    <fisheye image="/images/estudiantes.png" onClick='ingresar("/estudiantesRepresentante_1.zul")' />
                    <fisheye image="/images/miscursos.png" onClick='ingresar("/cursosEstudiantes.zul")' />
                    <fisheye image="/images/calendarioacademico.png"  onClick='ingresar("/calendar_1.zul")' />
                    <fisheye image="/images/cambioclave.png" onClick='ingresar("/cambioClaveRepresentante.zul")' />
                    <fisheye image="/images/correo.png" onClick='ingresar("/correosr/comunicadoEstudianteIndex.zul")' />
                    <fisheye image="/images/pendientes.png" onClick='ingresarSin("/pendientesEstudiantes.zul")' />
                    <fisheye image="/images/comentario1.png"  onClick='ingresar("/comentariosEstudiantes.zul")'  />
                    <fisheye image="/images/mistareas.png" onClick='ingresar("/tareasEstudiante.zul")' />
                    <fisheye image="/images/matriculacion.png" onClick='ingresarMatriculas()' />
                   
                    

                    <fisheye image="/images/actualizarDatos.png" onClick='ingresar("/actualizarDatos.zul")' />
                    <fisheye image="/images/salida.png" onClick="salir()" />
                </fisheyebar>
            </hbox>
        </div>
                    


    </north>
 
    <center flex="true">
 
        <include style="padding:3px;  " width="99%" id="xcontents" src="${requestScope.contentSrc}"/>


    </center>
    <zscript>

       
        Session a = Sessions.getCurrent();
        Estudiantes periEst =  (Estudiantes) a.getAttribute("userEstudiante");
        try{
            if(!periEst.getAplico()){
                        Window win34 = (Window) Executions.createComponents("/evaluacionEstudiante.zul", null, null);
                        win34.setVisible(true);
                        win34.setStyle("position:absolute; top:1%; left:0%");

                    //win34.setMode("overlapped");
                    todo.visible = false;

            }
        }catch(Exception ax1){
            System.out.println("ERROR EN APLICO...");
        }   
       Include inc = (Include) xcontents;
       inc.setSrc("/ayudafuera.zul");
      
    </zscript>

</borderlayout>
 