<?page id="estudianes"?>
<window
title="Notas del Estudiante::...." onCreate="notasd()"     mode="overlapped"   sizable="true"
closable="true" border="normal" width="100%" id="principalNotasEstudiantes">
<zscript>
<![CDATA[
import bean.notasConsultas;
import java.math.BigDecimal;

import jcinform.persistencia.*;
import jcinform.procesos.Administrador;
 
import java.util.Date;
import org.joda.time.DateMidnight;
import org.zkoss.zul.Listbox;
import sources.CustomDataSource;
import net.sf.jasperreports.engine.JRDataSource;
import sources.*;
import bean.notas;



Administrador adm = new Administrador();
Session ses = Sessions.getCurrent();

notas noti = new notas();
Matriculas mat = (Matriculas)ses.getAttribute("matricula");
ses.setAttribute("periodo",mat.getCurso().getPeriodo());
System.out.println("MATRICULA:  "+mat);

List sistemas = adm.query("Select o from Sistemacalificacion as o "+ 
" where o.periodo.codigoper = '"+mat.curso.getPeriodo().getCodigoper()+"' order by o.orden ");
String[][] values = new String[sistemas.size()][2];

List trimestres = adm.query("Select o from Trimestres as o "+
    "where  o.periodo = '"+mat.curso.getPeriodo().getCodigoper()+"' order by o.codigotrim  ");
String[][] cabes = new String[trimestres.size()][2];
int k=0;
 for (Iterator it = trimestres.iterator(); it.hasNext();) {
              Trimestres trime = (Trimestres) it.next();
              List sistemas0 = adm.query("Select o from Sistemacalificacion as o " +
              " where o.trimestre.codigotrim = '"+ trime.getCodigotrim() +"' and  o.periodo.codigoper = '"+mat.curso.getPeriodo().getCodigoper()+"' order by o.orden");
              if(sistemas0.size() >0 ){
                  cabes[k][0]= trime.getDescripcion();
                   cabes[k][1]= sistemas0.size()+"";
                   sistemas0 = null;
              }else{
                   cabes[k][1]= 1+"";
              }

k++;
 }


                  for (int i=0;i<sistemas.size();i++) {
                     values[i][0]= ((Sistemacalificacion)sistemas.get(i)).getAbreviatura();
                     values[i][1]= "readonly";

                  }


]]>
    </zscript>
  <tabbox width="100%">
        <tabs>
            <tab id="notasingreso" label="Notas" />
            <tab id="reportes" label="ImpresiÃ³n" />
        </tabs>
        <tabpanels>
            <tabpanel>

    <grid width="100%"  id="datos">
                <auxhead >
                    <auxheader label=".." />
                        <auxheader forEach="${cabes}"  label="${each[0]}" colspan="${each[1]}"/>
                    </auxhead>
        <columns>
            <column width="240px" label ="Materia"/>
            <column forEach="${values}" label="${each[0]}"  width="30px" align="center" />
        </columns>
        <rows id="filas"  use="bean.notasConsultas">
        </rows>
    </grid>
    <button label="Salir" onClick="principalNotasEstudiantes.detach()"/>
 </tabpanel>
            <tabpanel>
                <grid width="100%">
                    <rows>
                     
                        <row>
                             <span style="float:right"> Aporte que desea imprimir: </span>

                                <listbox id="sistemasCombo" width="300px"  mold="select" >
                                    <listitem selected="true"  forEach="${sistemas}" value="${each}">
                                        <listcell label="${each.nombre}" />
                                    </listitem>
                                </listbox>
                                 <button label="Ver Reporte"  image="/images/imprimir.gif" onClick='showReport("AM")'/>
                        </row>

                    </rows>
                </grid>


                <jasperreport  height="360px" id="report" />
            </tabpanel>
        </tabpanels>
    </tabbox>
<zscript><![CDATA[

void notasd(){
        Matriculas matee = principalNotasEstudiantes.getAttribute("matricula");
        filas.addRow(matee);
}

	void showReport(String tipo) {
			//Preparing parameters
            reportes.setSelected(true);

            Institucion insts = mat.getCurso().getPeriodo().getInstitucion();
			Map parametros = new HashMap();
            parametros.put("denominacion", insts.getDenominacion());
            parametros.put("nombre", insts.getNombre());
            parametros.put("periodo", mat.getCurso().getPeriodo().getDescripcion());
            parametros.put("slogan", insts.getSlogan());
            parametros.put("titulo", "Libreta de Calificaciones");
            JRDataSource datasource = null;

           datasource = noti.libretas(mat.getCurso(),mat,sistemasCombo.getSelectedItem().getValue());
            report.setSrc("WEB-INF/reportes/libretasin.jasper");
            parametros.put("pathSubRel", "reportes/libreta_sub.jasper");
            parametros.put("pathSubRel2", "reportes/libreta_subFaltas.jasper");




                report.setParameters(parametros);
                report.setDatasource(datasource);
                report.setType("pdf");


		}

]]>
</zscript>
</window>

	