
<window  width="500px" >

    <zscript>
        <![CDATA[
        import jcinform.persistencia.Global;
        import bean.EventDAO;
        import java.util.ArrayList;
        import jcinform.persistencia.*;
        import jcinform.persistencia.Periodo;
        import jcinform.procesos.Administrador;
        import bean.Permisos;
        import java.math.BigDecimal;
        Session ses = Sessions.getCurrent();
        Administrador adm = new Administrador();
        Periodo periodo = (Periodo) ses.getAttribute("periodo");
        
        static Candidatos empa = new Candidatos();
        Permisos permiso = new Permisos();
 
        Object media = null;
        List listas = adm.query("Select o from Listas as o where o.eleccion.estado = true ");
        List tipos = adm.query("Select o from TipoCandidato as o ");
        //FUNCIONES
        void llenar(Candidatos empa){
         nombres.value = empa.getNombre();
         
        
        if(empa.getLista() != null){
                    for (int i = 0; i <= listasL.getItems().size(); i++) {
                            Listas tr0 = ((Listas)((Listitem)listasL.getItems().get(i)).getValue());
                            int primero = tr0.getCodigo();
                            int segundo = empa.getLista().getCodigo();
                            if(primero == segundo){
                                listasL.setSelectedItem((Listitem)listasL.getItems().get(i));
                                break;
                            }
                }

        }
        if(empa.getTipocandidato() != null){
                    for (int i = 0; i <= listasL.getItems().size(); i++) {
                            Listas tr0 = ((Listas)((Listitem)listasL.getItems().get(i)).getValue());
                            int primero = tr0.getCodigo();
                            int segundo = empa.getTipocandidato().getCodigo();
                            if(primero == segundo){
                                listasL.setSelectedItem((Listitem)listasL.getItems().get(i));
                                break;
                            }
                }

        }
        
         if(empa.getTipocandidato() != null){
                    for (int i = 0; i <= tiposL.getItems().size(); i++) {
                            TipoCandidato tr0 = ((TipoCandidato)((Listitem)tiposL.getItems().get(i)).getValue());
                            int primero = tr0.getCodigo();
                            int segundo = empa.getTipocandidato().getCodigo();
                            if(primero == segundo){
                                tiposL.setSelectedItem((Listitem)tiposL.getItems().get(i));
                                break;
                            }
                }

        }
        
}
        void estado(Boolean estado,Boolean modificar){
        if(modificar){
            empa = (Candidatos)datos.selectedItem.value;
        }else{empa.setCodigo(0);}
         nombres.readonly = estado;
         tiposL.disabled = estado;
         listasL.disabled = estado;
        }


        void guardar(){
                if(nombres.value==""){
                    Messagebox.show("Ingrese los campos con (*) para continuar...!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
                    return;
                }

             
                empa.setNombre(nombres.value);
                empa.setLista(listasL.selectedItem.value);
                empa.setTipocandidato(tiposL.selectedItem.value);
                if((!empa.getCodigo().equals(0)) ){
                    adm.actualizar(empa);
                     
                }else{
                    empa.setCodigo(adm.getNuevaClave("Candidatos","codigo"));
                    adm.guardar(empa);
                }
                buscar("");
                permiso.auditar("Candidatos","Guardar",""+nombres.value);
                Messagebox.show("Registro Almacenado con Éxito...!", "Administrador Educativo", Messagebox.OK, Messagebox.INFORMATION);
                guardar.disabled=true;
                agregar.disabled=false;
                estado(true,false);
                llenar(new Candidatos(0));


        }

        Boolean verificar(String accion){
        return   permiso.verificarPermiso("Candidatos",accion);

        }
        void nuevo(){
            if(verificar("Agregar")){
                guardar.disabled=false;
                llenar(new Candidatos(0));
                estado(false,false);
                //alert(empa.getCodigo());
            }else{
                Messagebox.show("No tiene permisos para realizar esta acción...!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
            }
        }
        void move(){
            llenar((Candidatos)datos.selectedItem.value);
             modificar.disabled = false;
        }
        void modificar(){
                if(verificar("Modificar")){
                     guardar.disabled=false; estado(false,true);
                }else{
                     Messagebox.show("No tiene permisos para realizar esta acción...!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
                }
        }
        void eliminar(){
                if(verificar("Eliminar")){
                    try{
                            empa = (Candidatos)datos.selectedItem.value;
                            adm.eliminarObjeto(Candidatos.class, empa.getCodigo());
                            datos.removeItemAt(datos.getSelectedIndex());
                            permiso.auditar("Candidatos","Eliminar",""+nombres.value);
                            llenar(new Candidatos(0));
                            Messagebox.show("Registro Eliminado con Éxito...!", "Administrador Educativo", Messagebox.OK, Messagebox.INFORMATION);
                    }catch(Exception e){
                    Messagebox.show("No se pudo eliminar el Registro...!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
                    }
                }else{
                 Messagebox.show("No tiene permisos para realizar esta acción...!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
                }
        }
      
        void buscar(String p){
                List empleadosEncontrados = adm.query("Select o from Candidatos as o where o.nombre like '%"+p+"%' and o.lista.eleccion.estado = true  order by o.lista.nombre, o.tipocandidato.codigo ");
                datos = new Listbox();
                int a=0;
                for (Iterator it = datos.getItems().iterator(); it.hasNext();) {
                datos.getItems().remove(a);
                }


                for (Iterator it = empleadosEncontrados.iterator(); it.hasNext();) {
                Candidatos acceIt = (Candidatos) it.next();
                Listitem li = new Listitem();
                li.setValue(acceIt);
 
                li.appendChild(new Listcell(acceIt.getLista().getNombre()+" "));
                li.appendChild(new Listcell(acceIt.getTipocandidato().getNombre()+" "));
                li.appendChild(new Listcell(acceIt.getNombre()+" "));
                
                datos.appendChild(li);
                }

        }
   
           ]]>
    </zscript>
    <groupbox mold="3d" >
        <caption label="Agregar" />

        <grid width="100%">
            <rows>
                <row>
                    <span style="float:right"> Lista:</span>
                    <span>
                        <listbox disabled="true" id="listasL" width="300px" mold="select">
                            <listhead>
                                <listheader label="Listas"/>
                            </listhead>
                            <listitem selected="true"  forEach="${listas}" value="${each}">
                                <listcell label="${each.nombre}" />

                            </listitem>
                        </listbox>
                        
                    </span>
                </row>
                <row>
                    <span style="float:right"> Cargo:</span>
                    <span>
                        <listbox disabled="true" id="tiposL" width="300px" mold="select" >
                            <listhead>
                                <listheader label="Tipo"/>
                            </listhead>
                            <listitem selected="true"  forEach="${tipos}" value="${each}">
                                <listcell label="${each.nombre}" />

                            </listitem>
                        </listbox>
                        
                    </span>
                </row>
                <row>
                    <span style="float:right"> Nombres(*):</span>
                    <textbox id="nombres"  maxlength="60" cols="40" readonly="true"   />   
                </row>
  



            </rows>
        </grid>
        <vbox>
            <vbox>
                <hbox>
                    <button image="/images/guardar.gif" id="guardar" label="Guardar"  disabled="true"  onClick="guardar();"/>
                    <button  image="/images/nuevo.gif" id="agregar" label="Agregar" onClick="nuevo();" />
                    <button  image="/images/editar.gif" id="modificar"  label="Modificar" disabled="true"  onClick="modificar()"/>
                    <button  image="/images/eliminar.gif" id="eliminar"  label="Eliminar" disabled="true"  onClick="eliminar();"/>
                </hbox>
            </vbox>

        </vbox>

    </groupbox>
    <groupbox mold="3d" >
        <caption label="Busquedas" />
        <vbox>
            <hbox> Listas:  
                <textbox id="buscarText"  maxlength="60" cols="40" />  
                <button id="buscar"  label="Buscar" onClick="buscar(buscarText.getValue());"/> 
            </hbox>
            <hbox>
                <listbox mold="paging" rows="5" pageSize="10" onSelect="move();estado(true,false);eliminar.disabled=false;guardar.disabled=true" id="datos" width="450px">
                    <listhead>
                      
                        <listheader label="Lista"/>
                        <listheader label="Cargo"/>
                        <listheader label="Nombres"/>

                    </listhead>
                   
                </listbox>


            </hbox>
        </vbox>
    </groupbox>

</window>
