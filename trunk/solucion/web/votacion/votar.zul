<?xml version="1.0" encoding="utf-8"?>
<?page title="Administrador Educativo"?>
<zk xmlns="http://www.zkoss.org/2005/zul">

    <window width="800px"   style="background-color:transparent;position:absolute; top:1%; left:5%;"   border="normal" >
        <zscript>
<![CDATA[

  import bean.EventDAO;
    import bean.secuencial;
  import java.util.ArrayList;
 import jcinform.persistencia.*;
  import jcinform.procesos.Administrador;
  import bean.Permisos;
  import java.math.BigDecimal;
  Administrador adm = new Administrador();
  Boolean guardando = false;
  Session a = Sessions.getCurrent();
  Representante peri =  (Representante) a.getAttribute("userRepresentante");
           
Estudiantes estudianteActual = new Estudiantes();
    Date fec = adm.Date();
    String stFecha = (fec.getYear()+1900)+"-"+(fec.getMonth()+1)+"-"+fec.getDate()+" "+fec.getHours()+":"+fec.getMinutes()+":00";
Elecciones eleccionActual = new Elecciones();
    List eleccionesL = adm.query("Select o from Elecciones as o where o.estado = true  "+ 
          " and '"+stFecha+"' between o.desde and o.hasta");

       if(eleccionesL.size()>0){
             eleccioneActual = eleccionesL.get(0);
       }else{
        Executions.sendRedirect("/");
            return;
       }
cargar(){
      
       if(eleccionesL.size()>0){
            listadoListass.title = eleccioneActual.getNombre();
       }
       Boolean yaAnadi = false;
           List listas = adm.query("Select o from Listas as o where o.eleccion.estado = true order by o.codigo " );
  
                   
       int mm=0;
       int cc=0;
   List cargos = adm.query("Select o from TipoCandidato as o  order by o.codigo " );
            for (Iterator itCan = cargos.iterator(); itCan.hasNext();) {
                      TipoCandidato tCandidato = (TipoCandidato) itCan.next();
                      Grid migrid = new Grid();
                       migrid.setWidth("800px");
                      Rows filas = new Rows();
                      
                      //AGREGO EL TIPO DE CANDIDATO
                     
                      
                      Label tlab= new Label(""+tCandidato.getNombre());
                        Row rw = new Row();
                        tlab.setStyle("color:black;font-size:18px;background:transparent");
                        rw.setId("CANDIDATO"+cc);
                        rw.setStyle("background:#99CCCC");
                        rw.setSpans(""+listas.size()); 
                        rw.appendChild(tlab);
                        cc++;
                          filas.appendChild(rw);
                          //filaEncuesta.appendChild(rw);
                         rw = new Row();  
                         rw.setId("LISTA"+mm);
                         mm++;
                         
                                
                                for (Iterator it = listas.iterator(); it.hasNext();) {
                                        Listas lista = (Listas) it.next();
                                        //System.out.println(""+lista.getTipopregunta());
                                            Textbox lab= new Textbox(""+lista.getNombre());
                                            lab.setStyle("color:black;font-size;13px;font-weight:bold;border:0px;background:transparent");
                                            lab.setWidth("150px");
                                            lab.setReadonly(true);
                                            //rw.setSpans("2");
                                            rw.setWidth("160px");
                                            rw.setStyle("background:#FFFFCC");
                                            rw.appendChild(lab);
                                            
                                            //System.out.println(".."+lista.getNombre());
                                    }
                            filas.appendChild(rw);
                            yaAnadi = true;
            
                    
                       Radiogroup radio= new Radiogroup(); 
                       radio.setId("TC"+tCandidato.getCodigo());
                       
                       rw = new Row();  
                          for (Iterator it = listas.iterator(); it.hasNext();) {
                            Listas lista = (Listas) it.next();
                                List detalles = adm.query("Select o from Candidatos as o "  + 
                                        " where o.lista.codigo = '"+lista.getCodigo()+"'  " + 
                                        " and o.tipocandidato.codigo = '"+tCandidato.getCodigo()+"'  order by o.tipocandidato.codigo ");

                                    for (Iterator itp = detalles.iterator(); itp.hasNext();) {
                                        Candidatos dcand = (Candidatos) itp.next();
                                        Radio r = new Radio(""+dcand.getNombre());
                                        r.setValue(""+dcand.getCodigo());
                                        r.setId(""+dcand.getCodigo());
                                        rw.setWidth("160px");
                                        rw.setStyle("background:#FFFFCC");
                                        rw.appendChild(r);
                                    
                                    }
                              
                        
                        }

                        filas.appendChild(rw);
                          filas.setParent(migrid);
                       //AÑADO UN GRID A LA FILA
                        migrid.setParent(radio);
                        Row rw0 = new Row();
                        rw0.appendChild(radio);
                        
                       filaEncuesta.appendChild(rw0);
            }

 

}

Boolean validar(){
        String mensaje ="ERROR: No ha completado todas la listas, revise nuevamente y vuelva a intentarlo...!";
        error2.value = mensaje;
        error2.visible = false;
        error2i.visible = false;

      List col =  lista.getRows().getChildren();
      String tipoDato = "";
             for (int i = 0; i < col.size(); i++) {
                    Row object = (Row) col.get(i);
                    
                         
                            List labels = object.getChildren();
                            if(((Radiogroup) labels.get(0)).getSelectedItem() != null){
                                String valor = ((Radiogroup) labels.get(0)).getSelectedItem().getValue();
                             }else{
                                //Messagebox.show("SELECCIONE UNA RESPUESTA EN TODAS LA PREGUNTAS...!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
                                error2.visible = true;
                                error2i.visible = true;
                                return false;
                                break;
                            
                                }
                         
                     
             }
             return true;

}
 
  void guardar(){

   if(guardando)
    return;

    guardando = true;

      if(!validar()){
            guardar.disabled  = false;
            guardando = false;
            return;
       }
 
           guardar.disabled  = true;
           guardar.visible = false;
           
           secuencial sec = new secuencial();
List col =  lista.getRows().getChildren();
String tipoDato = "";
Date fec = adm.Date();
             for (int i = 0; i < col.size(); i++) {
                    Row object = (Row) col.get(i);
                    
                    List labels = object.getChildren();
                                if(((Radiogroup) labels.get(0)).getSelectedItem() != null){
                                
                                   Radio rad = ((Radiogroup) labels.get(0)).getSelectedItem();
 
                                    Resultados respuestap = new Resultados(sec.generarClave());
                                    Candidatos det = new Candidatos(new Integer(rad.getId()));
                                    respuestap.setCandidato(det);
                                    respuestap.setEstudiante(estudianteActual);
                                    respuestap.setFecha(fec);
                                    try{
                                        adm.guardar(respuestap);
                                    }catch(Exception repe){
                                        System.out.println(repe);
                                    }
                             }else{//Messagebox.show("SELECCIONE UNA RESPUESTA EN TODAS LA PREGUNTAS...!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
                                error2.visible = true;
                                error2i.visible = true;
                                break;
                             }
                   
             }
            guardando = false;
            Messagebox.show("VOTACIÓN REALIZADA CON ÉXITO...!", "JC INFORM Administrador Educativo", Messagebox.OK, Messagebox.INFORMATION);
            buscarCedulaPanel.visible=true;
            vericarEstudiante.visible = false;
            listadoListass.visible = false;
            filaEncuesta.getChildren().clear();
            cedula.value = "0000000000";
            validacion.getChildren().clear();
            

}

public void verificar(){
    validacion.getChildren().clear();
    List estudiantesEncontrados = adm.query("Select o from Estudiantes as o where o.cedula = '"+cedula.getValue().trim().replace(" ","").replace("-","")+"' ");
    if(estudiantesEncontrados.size()>0){
    estudianteActual = estudiantesEncontrados.get(0);
    List resultadosL = adm.query("Select o.codigo from Resultados as o " 
            + " where o.estudiante.codigoest = '"+estudianteActual.getCodigoest()+"' " 
            + " and o.candidato.lista.eleccion.codigo = '"+eleccioneActual.getCodigo()+"' ");
    if(resultadosL.size()>0){
            resultadosL = null;
            Messagebox.show("Usted, YA ha realizado la votación...!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
            cedula.value = "000000000";
            estudiantesEncontrados = null;
            resultadosL = null;
            return;
    }
                        
                          
                        estudiantesEncontrados = adm.query("Select o from Estudiantes as o where o.apellido like '%A%' and o.codigoest not in ("+estudianteActual.getCodigoest()+") ",0,6);
                        estudiantesEncontrados.add(estudianteActual);
                          for (int i = estudiantesEncontrados.size() - 1; i > 0; i--) {
                            int rand = (int) (Math.random() * (i + 1));
                            Estudiantes temp = (Estudiantes) estudiantesEncontrados.get(i);
                            estudiantesEncontrados.set(i, estudiantesEncontrados.get(rand));
                            estudiantesEncontrados.set(rand, temp);
                        }
                        
                        Radiogroup radio= new Radiogroup(); 
                        radio.setOrient("vertical");
                    for (Iterator itCan = estudiantesEncontrados.iterator(); itCan.hasNext();) {
                        Estudiantes tCandidato = (Estudiantes) itCan.next();
                        Row rw = new Row();
                        System.out.println("EST"+tCandidato.getCodigoest());
                        Radio r = new Radio(""+tCandidato.getApellido()+" "+tCandidato.getNombre());
                            r.setValue("EST"+tCandidato.getCodigoest());
                            r.setId("EST"+tCandidato.getCodigoest());
                            radio.appendChild(r);
                            rw.appendChild(radio);
                        validacion.appendChild(rw);
                    }
             
             vericarEstudiante.visible = true; 
             buscarCedulaPanel.visible = false; 
            
    }else{
        Messagebox.show("El número de cédula ingresado no existe...!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
    }
    estudiantesEncontrados = null;
}
public void validarEstudiante(){

  List col = validacion.getChildren();
             for (int i = 0; i < col.size(); i++) {
                    Row object = (Row) col.get(i);
                      List labels = object.getChildren();
                      if(labels.size()>0){
                     if(((Radiogroup) labels.get(0)).getSelectedItem() != null){
                                Radio rad = ((Radiogroup) labels.get(0)).getSelectedItem();
                                 if(("EST"+estudianteActual.getCodigoest()).equals(""+rad.getId())){
                                    vericarEstudiante.visible=false;
                                    listadoListass.visible=true;
                                    cargar();
                                    return;
                                }else{
                                    Messagebox.show("NO HA SUPERADO LA VALIDACIÓN...!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
                                    
                                    validacion.getChildren().clear();
                                    
                                    buscarCedulaPanel.visible=true;
                                    vericarEstudiante.visible = false;
                                    cedula.value = "0000000000";
                                    return;
                                }
                     
                     }else{
                     Messagebox.show("SELECCIONE UN NOMBRE...!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
                      return;          
                     }
                      
                     }
                    
                   
                       
            }
       
}

  ]]>
        </zscript>

        <panel id="buscarCedulaPanel" title="SISTEMA DE VOTACIÓN" framable="true"  width="100%" height="100%"
               border="normal">
            <panelchildren>
                <grid id="verificaciondeCedula" >
                    <rows>
                        <row>
                            Ingrese su No. de Cédula: 
                            <textbox id="cedula" maxlength="13" constraint="no empty:Número de Cédula es Obligatorio"  />
                        
                            <button label="Verificar"  height="30px" width="150px"  image="/images/key.png"  id="verificar" onClick="cedula.getValue(); verificar(); "/>
                        </row>
                    </rows>
                </grid>
             
            </panelchildren>
           
        </panel>
        
        <panel id="vericarEstudiante" title="VALIDACIÓN DE SEGURIDAD" visible="false" framable="true"  width="100%" height="100%"
               border="normal">
            <panelchildren>
                <separator/>
                <label value="POR FAVOR SELECCIONE SUS APELLIDOS Y NOMBRES DE LA SIGUIENTE LISTA" />
                <separator/>
                <grid height="200px" >
                    <rows id="validacion">
                       
                    </rows>
                </grid>
                <button label="SIGUIENTE"  height="30px" width="150px"  image="/images/key.png"  id="validar" onClick="validarEstudiante(); "/>
            </panelchildren>
           
        </panel>
        <panel id="listadoListass" visible="false" framable="true" border="normal">
            <panelchildren>
                <vbox>
                    <!--label   style="font-size:18px; font-weight:bold;background:transparent;" id="justificacion1" /-->
                    <label  value="REALICE SU ELECCIÓN: " style="font-size:18px; font-weight:bold;background:transparent;"  />
                </vbox>
                

                <grid    id="lista">
                    <rows id="filaEncuesta">
                    </rows>
                </grid>
              
            </panelchildren>
            <toolbar>
                <button image="/images/guardar.gif" id="guardar" height="40px" width="240px" label="GUARDAR Y CONTINUAR"    onClick="guardar();"/>
                <image src="/images/bloquear.gif" id="error2i" visible="false"/>
                
                <label id="error2" visible ="false" style="color:black;font-size:16px;background:#FFFFBB;border-color:blue" />
                    

                
            </toolbar>
        </panel>
        <grid>
    <rows>
           <row  style="background:white;border:0px" align="center" spans="2">
                 <span>
                <label style="font-size:10px" value ="Todos los derechos reservados a JCINFORM, derecho de copia @2009-2012"/>
                
                <html>
                     &lt;a href=&quot;http://www.jcinform.com&quot; target=&quot;_blank&quot;&gt;http://www.jcinform.com&lt;/a&gt;

					</html>
                    <label style="font-size:10px;color:blue" value ="ver.1.1 act.03/05/2010"/>
                </span>
             </row>
              
    </rows>


</grid>

    </window>
</zk>