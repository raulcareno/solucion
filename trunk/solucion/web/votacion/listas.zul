
<window  width="500px" >

    <zscript> <![CDATA[
        import jcinform.persistencia.*;
        import bean.EventDAO;
        import java.util.ArrayList;
        import jcinform.persistencia.Listas;
        import jcinform.procesos.Administrador;
        import bean.Permisos;
        import java.math.BigDecimal;
        Session ses = Sessions.getCurrent();
        Administrador adm = new Administrador();
                List allEvents = adm.query("Select o from Listas as o where  o.eleccion.estado = true  order by o.codigo ");
        List elecciones = adm.query("Select o from Elecciones as o where o.estado = true  ");
    
        static Listas empa = new Listas();
        Permisos permiso = new Permisos();
 
        Object media = null;

        //FUNCIONES
        void llenar(Listas empa){
                nombres.value = empa.getNombre();
                   if(empa.getEleccion()!=null){

                    for (int i = 0; i <= eleccionesL.getItems().size(); i++) {
                            Elecciones tr0 = ((Elecciones)((Listitem)eleccionesL.getItems().get(i)).getValue());
                            int primero = tr0.getCodigo();
                            int segundo = empa.getEleccion().getCodigo();
                            if(primero == segundo){
                                eleccionesL.setSelectedItem((Listitem)eleccionesL.getItems().get(i));
                                break;
                            }
                }

            }
                
                
        }
        void estado(Boolean estado,Boolean modificar){
        if(modificar){
        empa = (Listas)datos.selectedItem.value;
        }else{empa.setCodigo(0);}
            nombres.readonly = estado;
            eleccionesL.disabled = estado;
        }


        void guardar(){
        if(nombres.value==""){
            Messagebox.show("Ingrese los campos con (*) para continuar...!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
            return;
        }

        empa.setNombre(nombres.value);
        empa.setEleccion(eleccionesL.selectedItem.value);
        if((!empa.getCodigo().equals(0)) ){
        adm.actualizar(empa);
        List children = datos.selectedItem.children;
        ((Listcell)children.get(0)).label = empa.getCodigo()+"";
        ((Listcell)children.get(1)).label = empa.getNombre()+" ";
        }else{
        empa.setCodigo(adm.getNuevaClave("Listas","codigo"));
        adm.guardar(empa);
        }
        permiso.auditar("Listas","Guardar",""+nombres.value);
        Messagebox.show("Registro Almacenado con Éxito...!", "Administrador Educativo", Messagebox.OK, Messagebox.INFORMATION);
        guardar.disabled=true;
        agregar.disabled=false;
        estado(true,false);
        llenar(new Listas(0));


        }

        Boolean verificar(String accion){
        return permiso.verificarPermiso("Listas",accion);

        }
        void nuevo(){
        if(verificar("Agregar")){
        guardar.disabled=false;
        llenar(new Listas(0));
        estado(false,false);
 
        }else{
        Messagebox.show("No tiene permisos para realizar esta acción...!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
        }
        }
        void move(){
                llenar((Listas)datos.selectedItem.value);
                modificar.disabled = false;
        }
        void modificar(){
        if(verificar("Modificar")){
        guardar.disabled=false; estado(false,true);
        }else{
        Messagebox.show("No tiene permisos para realizar esta acción...!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
        }
        }
        void eliminar(){
        if(verificar("Eliminar")){
        try{
        empa = (Listas)datos.selectedItem.value;
        adm.eliminarObjeto(Listas.class, empa.getCodigo());
        datos.removeItemAt(datos.getSelectedIndex());
        permiso.auditar("Listas","Eliminar",""+nombres.value);
        llenar(new Listas(0));
        Messagebox.show("Registro Eliminado con Éxito...!", "Administrador Educativo", Messagebox.OK, Messagebox.INFORMATION);
        }catch(Exception e){
        Messagebox.show("No se pudo eliminar el Registro...!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
        }
        }else{
        Messagebox.show("No tiene permisos para realizar esta acción...!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
        }
        }
        void verificarCedula(String valor){
        if(valor.length()>9){
        List empleados = adm.query("Select o from Listas as o where o.identificacion = '"+valor+"' ");
        if(empleados.size()>0){
        Messagebox.show("Número de Identificación ya registrado...!", "Administrador Educativo", Messagebox.OK, Messagebox.EXCLAMATION);

        for(Iterator it = empleados.iterator(); it.hasNext();) {
        Listas object = (Listas)it.next();
        empa = object;
        }
        llenar(empa);

        }else{
        empa = new Listas(0);
        }

        }
        }
        void buscar(String p){
                List empleadosEncontrados = adm.query("Select o from Listas as o where o.nombre like '%"+p+"%' and  o.eleccion.estado = true  order by o.codigo ");
                datos = new Listbox();
                int a=0;
                for (Iterator it = datos.getItems().iterator(); it.hasNext();) {
                datos.getItems().remove(a);
                }


                for (Iterator it = empleadosEncontrados.iterator(); it.hasNext();) {
                    Listas acceIt = (Listas) it.next();
                    Listitem li = new Listitem();
                    li.setValue(acceIt);
                    li.appendChild(new Listcell(acceIt.getCodigo()+" "));
                    li.appendChild(new Listcell(acceIt.getNombre()+" "));
                    li.appendChild(new Listcell(acceIt.getEleccion().getNombre()+" "));
                    datos.appendChild(li);
                }

        }
        void cargarEspe(Global g){
        empa.setEspecialidad(g);
        }
        void cargarSec(Global g){
        empa.setSeccion(g);
        }
        void cargarPar(Global g){
        empa.setParalelo(g);
        }
        
           ]]>    
    </zscript>
    <groupbox mold="3d" >
        <caption label="Agregar" />

        <grid width="100%">
            <rows>
                <row>
                    <span style="float:right"> Elecciones:</span>
                    <listbox disabled="true" id="eleccionesL" width="300px" mold="select" >
                        <listhead>
                            <listheader label="Elección Activa"/>
                        </listhead>
                        <listitem selected="true"  forEach="${elecciones}" value="${each}">
                            <listcell label="${each.nombre}" />

                        </listitem>
                    </listbox>
                </row>
                <row>
                    <span style="float:right"> Nombres(*):</span>
                    <textbox id="nombres"  maxlength="60" cols="40" readonly="true"   />   
                </row>
            </rows>
        </grid>
        <vbox>
            <vbox>
                <hbox>
                    <button image="/images/guardar.gif" id="guardar" label="Guardar"  disabled="true"  onClick="guardar();"/>
                    <button  image="/images/nuevo.gif" id="agregar" label="Agregar" onClick="nuevo();" />
                    <button  image="/images/editar.gif" id="modificar"  label="Modificar" disabled="true"  onClick="modificar()"/>
                    <button  image="/images/eliminar.gif" id="eliminar"  label="Eliminar" disabled="true"  onClick="eliminar();"/>
                </hbox>
            </vbox>

        </vbox>

    </groupbox>
    <groupbox mold="3d" >
        <caption label="Busquedas" />
        <vbox>
            <hbox> Listas:  
                <textbox id="buscarText"  maxlength="60" cols="40" />  
                <button id="buscar"  label="Buscar" onClick="buscar(buscarText.getValue());"/> 
            </hbox>
            <hbox>
                <listbox mold="paging" rows="5" pageSize="10" onSelect="move();estado(true,false);eliminar.disabled=false;guardar.disabled=true" id="datos" width="450px">
                    <listhead>
                        <listheader label="Cod."/>
                        <listheader label="Nombres"/>
                        <listheader label="Elección"/>

                    </listhead>
                    <listitem  forEach="${allEvents}" value="${each}">
                        <listcell label="${each.codigo}" />
                        <listcell label="${each.nombre}" />
                        <listcell label="${each.eleccion.nombre}" />
                    </listitem>
                </listbox>


            </hbox>
        </vbox>
    </groupbox>

</window>
