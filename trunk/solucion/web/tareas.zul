
<window     width="650px" >
    <zscript>
        <![CDATA[

  import bean.EventDAO;
  import java.util.ArrayList;
    import jcinform.persistencia.*;
  import java.util.Iterator;
  import java.util.UUID;
  import jcinform.procesos.Administrador;
    import bean.Permisos;
    import bean.pendientes;
import java.text.SimpleDateFormat;
  import org.zkoss.util.media.Media;
  import org.zkoss.util.media.AMedia;
  import java.io.FileOutputStream;
//globales
Global global = new Global();
EventDAO evtdao = new EventDAO();
List perfiles = evtdao.perfiles();
Permisos permiso = new Permisos();
Administrador adm = new Administrador();

Session ses = Sessions.getCurrent();
Periodo periodo = (Periodo) ses.getAttribute("periodo");
List accesos = new ArrayList();
int w = 0;
 ListModel model = new SimpleListModel(accesos.toArray());
//globales
List cursos = null;
byte[] data = null;

    Empleados user = (Empleados)ses.getAttribute("user");
    if(user.getTipo().equals("Interna")){
            cursos = adm.query("Select o from Cursos as o where o.periodo.codigoper = '"+periodo.getCodigoper()+"' ");
    }else{
            cursos = adm.query("Select o from Cursos as o where o.periodo.codigoper = '"+periodo.getCodigoper()+"'  " +
            " and o.codigocur in (Select a.curso.codigocur from MateriaProfesor as a where a.empleado.codigoemp = '"+user.getCodigoemp()+"') ");
    }

Cursos selecCurso = new Cursos(-1);
selecCurso.setDescripcion("[S E L E C C I O N E]");
cursos.add(0,selecCurso);

void guardarc(){

            Set items = busquedaListaEstudiantes.getSelectedItems();
						if (items.isEmpty()) {
							alert("Seleccion un al menos un estudiantes...!");
                            return;
						} else {
							List al = new ArrayList(items);
							for (Iterator it = al.iterator(); it.hasNext();) {
								Listitem li = (Listitem)it.next();
                                    TareaEstudiante tareaestudiante = li.getValue();
                                        if(tareaestudiante.getEntregada()){
                                            tareaestudiante.setEntregada(false);    
                                        }else{
                                            tareaestudiante.setEntregada(true);    
                                        }
                                    
                                    adm.actualizar(tareaestudiante);
							}
						}
                        buscar(busquedaList.selectedItem.value);
}

    void guardar(){
bean.secuencial sec = new bean.secuencial();
         Tareas come = new Tareas();
         come.setMateria(((MateriaProfesor)materias.selectedItem.value).getMateria());
         come.setEmpleado(user);
         come.setCodigo(adm.getNuevaClave("Tareas","codigo"));
         come.setCurso(curs.selectedItem.value);
         come.setFechadesde(desde.value);
         come.setFechahasta(hasta.value);
         come.setNombre(tarea.value);
         come.setDescripcion(comentario.value);
         come.setTipo(tipo.selectedItem.value);
        come.setAdjunto(data);
        come.setArchivo(nombrearchivo.value);
          
        
         
          adm.guardar(come);
         for(Iterator it = datos.getItems().iterator(); it.hasNext();) {
                                Listitem li  = (Listitem)it.next();
                                Matriculas empe = (Matriculas)li.getValue();
                                TareaEstudiante tarea = new TareaEstudiante();
                                tarea.setCodigo(sec.generarClave());
                                tarea.setMatricula(empe);
                                tarea.setEstado("");
                                tarea.setTarea(come);
                                tarea.setVistopadre(false);
                                tarea.setVistohijo(false);
                                tarea.setVistootro(false); 
                                tarea.setEntregada(false);
                                adm.guardar(tarea);   
                         
         }
        
            Messagebox.show("Registro Almacenado con Ã©xito...!", "Administrador Educativo", Messagebox.OK, Messagebox.INFORMATION);
  
  }


  Boolean verificar(String accion){
        return permiso.verificarPermiso("Pendientes",accion);

    }
  void buscar(Tareas tarea){
  
  panel.title = ""+tarea.getMateria();
    List empleadosEncontrados = adm.query("Select o from TareaEstudiante as o " + 
    " where o.tarea.codigo = '"+tarea.getCodigo()+"' order by o.tarea.fechadesde desc, o.matricula.estudiante.apellido");
        datos = new Listbox();
        int a=0;
            for (Iterator it = busquedaListaEstudiantes.getItems().iterator(); it.hasNext();) {
                    busquedaListaEstudiantes.getItems().remove(a);
                }

               for (Iterator it = empleadosEncontrados.iterator(); it.hasNext();) {
                      TareaEstudiante acceIt = (TareaEstudiante) it.next();
                      Listitem li = new Listitem();
                      li.setValue(acceIt);
                      li.appendChild(new Listcell(acceIt.getMatricula()+""));
                       SimpleDateFormat d1 = new SimpleDateFormat("dd-MMM-yyyy HH:mm:s");
                   
                       //GUARDAR CON FALSE VISTOS O PONER FALSE EN LA CLASE CONTROLADORA
                      if(acceIt.getVistopadre()){
                          Listcell c = new Listcell("");
                          c.setImage("/images/ok.gif");
                          li.appendChild(c);
                      }else{
                          Listcell c = new Listcell("");
                          c.setImage("/images/ok2.gif");
                          li.appendChild(c);
                      }
                       if(acceIt.getVistohijo()){
                          Listcell c = new Listcell("");
                          c.setImage("/images/ok.gif");
                          li.appendChild(c);
                      }else{
                          Listcell c = new Listcell("");
                          c.setImage("/images/ok2.gif");
                          li.appendChild(c);
                      }
                      
                       if(acceIt.getEntregada()){
                          Listcell c = new Listcell("");
                          c.setImage("/images/ok.gif");
                          li.appendChild(c);
                      }else{
                          Listcell c = new Listcell("");
                          c.setImage("/images/bloquear.gif");
                          li.appendChild(c);
                      }
             




                      busquedaListaEstudiantes.appendChild(li);
             }

    }
  void buscarTodos(String texto){
    List empleadosEncontrados = adm.query("Select o from Tareas as o  order by o.fechadesde desc ");
        datos = new Listbox();
        int a=0;
                for (Iterator it = busquedaList.getItems().iterator(); it.hasNext();) {
                    busquedaList.getItems().remove(a);
                }

               for (Iterator it = empleadosEncontrados.iterator(); it.hasNext();) {
                      Tareas acceIt = (Tareas) it.next();
                      Listitem li = new Listitem();
                      li.setValue(acceIt);
                      li.appendChild(new Listcell(acceIt.getMateria()+""));
                      SimpleDateFormat d1 = new SimpleDateFormat("dd-MMM-yyyy HH:mm:s");
                      Date d = acceIt.getFechadesde();
                      Date h = acceIt.getFechahasta();
                       li.appendChild(new Listcell(" "+d1.format(d)));
                       li.appendChild(new Listcell(" "+d1.format(h)));

                      
                       Listcell c = new Listcell("Ver");
                      c.setImage("/images/auditoria.gif");
                      li.appendChild(c);
                   //   li.appendChild(new Listcell(acceIt.getComentario()+""));




                      busquedaList.appendChild(li);
             }

    }

 void buscar2(Cursos cur){
     List empleadosEncontrados = adm.query("Select o from Matriculas as o where o.curso.codigocur = '"+cur.codigocur+"' order by o.estudiante.apellido");
        datos = new Listbox();
        int a=0;
            for (Iterator it = estudiantesTodos.getItems().iterator(); it.hasNext();) {
                    estudiantesTodos.getItems().remove(a);
                }
                 
               for (Iterator it = empleadosEncontrados.iterator(); it.hasNext();) {
                      Matriculas acceIt = (Matriculas) it.next();
                      Listitem li = new Listitem();
                      li.setValue(acceIt);
                      li.appendChild(new Listcell(acceIt+""));
                      estudiantesTodos.appendChild(li);
             }

    }
   void buscarMaterias(Cursos cur){
        List empleadosEncontrados = null;

           if(user.getTipo().equals("Interna")){
                    empleadosEncontrados = adm.query("Select o from MateriaProfesor as o where o.curso.codigocur = '"+cur.codigocur+"' order by o.orden");
            }else{
                    empleadosEncontrados = adm.query("Select o from MateriaProfesor as o where o.curso.codigocur = '"+cur.codigocur+"' and o.empleado.codigoemp = '"+user.getCodigoemp()+"' order by o.orden");
            }

        datos = new Listbox();
        int a=0;
            for (Iterator it = materias.getItems().iterator(); it.hasNext();) {
                    materias.getItems().remove(a);
                }
                MateriaProfesor selecMate = new MateriaProfesor();
                Empleados emp = new Empleados(-1);
                emp.setApellidos("");
                emp.setNombres("");
                selecMate.setEmpleado(emp);
                Global glo = new Global(-2);
                glo.setDescripcion("[S E L E C C I O N E]");
                selecMate.setMateria(glo);
                empleadosEncontrados.add(0,selecMate);
               for (Iterator it = empleadosEncontrados.iterator(); it.hasNext();) {
                      MateriaProfesor acceIt = (MateriaProfesor) it.next();
                      Listitem li = new Listitem();
                      li.setValue(acceIt);
                      li.appendChild(new Listcell(acceIt.getMateria()+"["+acceIt.getEmpleado().getApellidos()+" "+acceIt.getEmpleado().getNombres()+"]"));
                      materias.appendChild(li);
             }

    }


    vio(Comentarios com){

            Representante emp = ses.getAttribute("userRepresentante");
                      com.setVistootro (true);

            adm.actualizar(com);
               SimpleDateFormat d1 = new SimpleDateFormat("dd-MMM-yyyy HH:mm:s");
               Date d = com.getFecha();


            fechav.value = d1.format(d)+"";
            profesorv.value = com.getEmpleado()+"";
            materiav.value = com.getMateria()+"";
            comentariov.value = com.getComentario();
              String tip = com.getTipo();
                      if(tip.equals("LE")){
                        tip = "LEVE";
                      }else if(tip.equals("GR")){
                        tip = "GRAVE";
                      }else if(tip.equals("MG")){
                        tip = "MUY GRAVE";
                      }else if(tip.equals("LA")){
                        tip = "LLAMADA DE ATENCIÃN";
                      }else if(tip.equals("PR")){
                        tip = "PREVENTIVA";
                      }else {
                        tip = "OTRA";
                      }
           tipov.value =""+tip;



            panel.visible = true;
            busquedaList.clearSelection();
}

        ]]>
    </zscript>
    <tabbox width="100%">
        <tabs>
            <tab id="registro" label="Registro" />
            <tab id="busqueda" label="Busquedas" />
        </tabs>
        <tabpanels>
            <tabpanel>
                    
                <panel  id="registrar"  framable="true" title="Enviar Tareas a Estudiantes" 	 border="normal"	  >
                    <panelchildren>

                
                        <grid width="100%" >
                            <rows>
                     
                                <row>


                                    <span style="float:right"> Cursos(1):</span>

                                    <listbox   mold="select"  id="curs" width="420px"
                                     onSelect="buscarMaterias(((Cursos)curs.selectedItem.value));">

                                        <listitem forEach="${cursos}" value="${each}">
                                            <listcell label="${each.descripcion} ${each.especialidad}  ${each.paralelo}" />

                                        </listitem>
                                    </listbox>
                                </row>
                                <row></row>
                                <row>

                                    <span style="float:right">Materia(2):</span>
                                    <listbox id="materias"  mold="select" onSelect="buscar2(((Cursos)curs.selectedItem.value)); estudiantesListado.visible=true;" width="420px" >
                                        <listitem value="-1" label="[S E L E C C I O N E]"></listitem>
                                
                                    </listbox>

                                </row>
                    <!--row>
                       <span style="float:right">Estudiantes(3):</span>
                        <listbox id="datos"  mold="select" width="420px" >
                            <listitem value="-1" label="[S E L E C C I O N E]"></listitem>
                       </listbox>

                    </row-->
                                <row></row>
                                <row >
                                    <span style="float:right">Estudiantes:</span>
                                    <span>
                                        <textbox id="datosTodos" readonly="true" cols="65" />
                                        <button  image="/images/expa.png"  id="expa1"  onClick="datos.visible= true;expa1.visible = false;contra1.visible = true;" />
                                        <button visible="false" image="/images/contra.png" id="contra1"  onClick="datos.visible= false; contra1.visible = false; expa1.visible = true" />
                                        <listbox id="datos" visible="false"  style="font:10px" height="300px" width="100%"  mold="paging" rows="3" pageSize="100"  multiple="true" oddRowSclass="non-odd"  fixedLayout="true" checkmark="true">
                                            <listhead>
                                                <listheader label="Estudiantes"  sort="auto">
                                                    <button image="/images/borrar.gif" label=" Borrar">
                                                        <attribute name="onClick">
                                            Set items = datos.getSelectedItems();
                                            if (items.isEmpty()) {
                                                alert("Seleccion un Item para Quitar!");
                                            } else {
                                                List al = new ArrayList(items);
                                                for (Iterator it = al.iterator(); it.hasNext();) {
                                                    Listitem li = (Listitem)it.next();
                                                    li.setSelected(false);
                                                    datos.removeItemAt(li.getIndex());
                                                }
                                                List al = datos.getItems();
                                                 datosTodos.value  = "";
                                                for (Iterator it = al.iterator(); it.hasNext();) {
                                                    Listitem li = (Listitem)it.next();
                                                     datosTodos.value  = datosTodos.value+"; "+li.getValue();

                                                }
                                            }

                                                        </attribute>
                                                    </button>
                                                    <button label="CERRAR" image="/images/eliminar.gif" onClick="datos.visible= false;contra1.visible = false; expa1.visible = true" />
                                                </listheader>

                                            </listhead>

                                        </listbox>


                                    </span>
                                </row>
                                <row>

                                    <span style="float:right">PresentaciÃ³n:</span>
                                    <span>
                            Inicio:
                                        <datebox id="desde"   onCreate="self.value = new Date()"/>
                        Fin:
                                        <datebox id="hasta"   onCreate="self.value = new Date()"/>
                                    </span>
                                </row>
                                <row></row>
                                <row  >
                                    <span style="float:right">Tema:</span>
                                    <textbox id="tarea"  cols="70"/>

                                </row>
                                <row></row>
                                <row >
                                    <span style="float:right">La_Tarea_es:</span>
                                    <radiogroup Id="tipo">
                                        <radio  selected="true" value="IN" label="INDIVIDUAL"/>
                                        <radio value="GR" label="GRUPAL"/>
                                        <radio  value="RE" label="DE RECUPERACIÃN"/>
                             
                                    </radiogroup>
                                </row>
                                <row></row>
                                <row spans="2">
                                    <span>
                                        <textbox value="" cols="30" readonly="true" id="nombrearchivo" />
                                        <button label="Adjuntar Archivo" image="/images/adjunto.gif"  id="ima">
                                            <attribute name="onClick">{
                                     Fileupload f = new Fileupload();
                                                Media media0 = f.get();
                                            if (media0 instanceof AMedia) {
                                                    AMedia media = (AMedia) media0;
                                                   //String tipo = "."+media.getFormat();
                                                    String nombre= media0.getName();
                                                    try{
                                                        data = media.getByteData();

                                                    }catch(Exception e){
                                                    System.out.println(""+e);
                                                        try{
                                                                data = media.getStringData().getBytes();
                                                        }catch(Exception ax){
                                                                System.out.println(""+ax);
                                                                 Messagebox.show("No puede adjuntar este tipo de archivos...!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
                                                                 return;
                                                        }


                                                    }
                                                    nombrearchivo.value = media0.getName();

                                    }else{
                                                   data =  media0.getByteData();
                                                   nombrearchivo.value = media0.getName();
                                    }

                                            }


                                            </attribute>
                                        </button>
                          
                                    </span>
                        

                                </row>
                                <row spans="2">
                                    <span >D  E  S  C  R  I  P  C  I  Ã  N
                                        <separator orient="vertical"/>  D E
                                        <separator orient="vertical"/>  L A
                                        <separator orient="vertical"/> T A R E A:
                                    </span>
                                </row>
                                <row></row>
                                <row spans="2">
                                    <textbox id="comentario" rows="3" cols="95"/>
                                </row>
                                <row></row>
                                <row spans="2">
                        
                                    <button image="/images/guardar.gif" id="guardar" label="Guardar" onClick="guardar();" />
                                </row>
                   
                 
                            </rows>
                        </grid>

                    </panelchildren>
                </panel>
    
            </tabpanel>
            <tabpanel>
                    
                    
                <panel  visible="true"  framable="true" title="BUSQUEDAS"  	 border="normal"	 >
                    <panelchildren>

                        <grid width="100%" >
                            <rows>
                                <row>
                                    <span>Ingrese Apellidos:
                                        <textbox  id="textoBuscar"  />
                                        <button image="/images/auditoria.gif" id="buscando" label="Buscar" onClick="buscarTodos(textoBuscar.value); " />
                                    </span>
                                </row>
                                <row spans="2">
                                    <listbox id="busquedaList"  onSelect="buscar(self.selectedItem.value);"  >
                                        <listhead sizable="true">
                                            <listheader label="Estudiante" sort="auto" />
                                            <listheader label="Fecha" sort="auto" />
                                            <listheader label="Limite Entrega" sort="auto" />
                                            <listheader label="Estudiantes" sort="auto" />
                                        </listhead>
                                    </listbox>
                                </row>
                            </rows>
                        </grid>

                    </panelchildren>
                </panel>
                <panel id="panel" visible="true"  framable="true" title="BUSQUEDAS"  	 border="normal"	 >
                    <panelchildren>

                        <grid width="100%" >
                            <rows>
                                <row>
                                    <span>                            
                                        <button image="/images/guardar.gif" id="guardarc" label="Guardar Cambios" onClick="guardarc();" />
                            El estudiante o El padre ha 
                                        <image src="/images/ok.gif"/> VISTO o
                                        <image src="/images/ok2.gif"/> NO VISTO
                            
                                    </span>
                                </row>
                                <row spans="2">
                                    <listbox  fixedLayout="true" multiple="true" checkmark="true"  id="busquedaListaEstudiantes"    >
                                        <listhead sizable="true">
                                            <listheader width="350px" label="ENTREGO TAREA(Seleccionar Todos)" sort="auto" />
                                            <listheader label="PADRE" />
                                            <listheader  label="HIJO" />
                                            <listheader label="[*ENTREGO*]" />
                              
                                        </listhead>
                                    </listbox>
                                </row>
                            </rows>
                        </grid>

                    </panelchildren>
                </panel>
            </tabpanel>
        </tabpanels>
    </tabbox>
 

   
    <panel id="estudiantesListado" visible="false" movable="true" title="SELECCIONE LOS ESTUDIANTES"  framable="true" width="500px" height="330px" style="position:absolute; top:13%; left:10%">
        <panelchildren>
            <listbox  id="estudiantesTodos" style="font:10px" width="100%" rows="10000" height="290px" mold="paging"   pageSize="100"  multiple="true" oddRowSclass="non-odd"  fixedLayout="true" checkmark="true">
                <listhead>
                    <listheader label="TODOS"  >
                        <button image="/images/add.png"  label="AÃADIR SELECCIONADOS">
                            <attribute name="onClick">
                                            Set items = estudiantesTodos.getSelectedItems();
                                            if (items.isEmpty()) {
                                                alert("Seleccion un Item para Quitar!");
                                            } else {
                                                List al = new ArrayList(items);
                                                for (Iterator it = al.iterator(); it.hasNext();) {
                                                    Listitem li = (Listitem)it.next();
                                                    li.setSelected(false);
                                                    datos.appendChild(li);
                                                    datosTodos.value  = datosTodos.value+"; "+li.getValue();
                                                }
                                            }

                            </attribute>
                        </button>
                        <button image="/images/eliminar.gif" onClick="estudiantesListado.visible = false;" label="CERRAR" />
                    </listheader>

                </listhead>

            </listbox>

        </panelchildren>
    </panel>

 

      
  
</window>
