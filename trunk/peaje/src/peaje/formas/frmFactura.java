package peaje.formas;

 
import hibernate.*;
import hibernate.cargar.WorkingDirectory;
import java.awt.Container;
import java.awt.print.PrinterJob;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.print.PrintService;
import javax.print.PrintServiceLookup;
import javax.print.attribute.HashPrintRequestAttributeSet;
import javax.print.attribute.PrintRequestAttributeSet;
import javax.print.attribute.standard.Copies;
import javax.print.attribute.standard.MediaPrintableArea;
import javax.print.attribute.standard.MediaSize;
import javax.print.attribute.standard.MediaSizeName;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRExporterParameter;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.export.JRPrintServiceExporter;
import net.sf.jasperreports.engine.export.JRPrintServiceExporterParameter;
import net.sf.jasperreports.engine.util.JRLoader;
import org.joda.time.DateTime;
import org.joda.time.Days;
import org.joda.time.LocalDate;
import org.joda.time.LocalTime;
import org.joda.time.Minutes;
import peaje.Administrador;
import peaje.validaciones;
 
import sources.FacturaSource;
//import org.eclipse.persistence.internal.history.HistoricalDatabaseTable;

/**
 *
 * @author geovanny
 */
public class frmFactura extends javax.swing.JDialog {

    /** Creates new form frmEmpresa */
    public boolean grabar = false;
    public boolean modificar = false;
    public List lista = null;
    public int posicion = 0;
    public int tamano = 0;
    private Container desktopContenedor;
    private Empresa empresaObj;
    Administrador adm;
    private String claveActual;
    private validaciones val;
    private principal principal;
    List<Tarifas> tarifario;

    
    /** Creates new form frmProfesores */
    public frmFactura(java.awt.Frame parent, boolean modal,Administrador adm1) {
          super(parent,modal);
        llenarCombo();
        initComponents();
        this.setSize(615, 508);
        empresaObj = new Empresa();
        adm =  adm1;
        val = new validaciones();
        noTicket.requestFocusInWindow();
                            dias.setVisible(false);
                            dias1.setVisible(false);
                            dias2.setVisible(false);
    }

    public frmFactura(java.awt.Frame parent, boolean modal,principal lo,Administrador adm1) {
          super(parent,modal);
        try {
            this.desktopContenedor = lo.contenedor;
            adm = adm1;
            llenarCombo();
            initComponents();
            this.setSize(615, 508);
            empresaObj = new Empresa();
    
            val = new validaciones();
            principal = lo;
            noTicket.requestFocusInWindow();
            tarifario = adm.query("Select o from Tarifas as o ");
            dias.setVisible(false);
            dias1.setVisible(false);
            dias2.setVisible(false);
        } catch (Exception ex) {
            Logger.getLogger(frmFactura.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void llenarCombo() {
        
        try {
            perfilesList = new ArrayList<Global>();
            perfilesList = adm.query("Select o from Global as o where o.grupo = 'PER'");
        } catch (Exception ex) {
            Logger.getLogger(frmEmpresa.class.getName()).log(Level.SEVERE, null, ex);
        }
    }


// <editor-fold defaultstate="collapsed" desc="PROPIEDADES">
    public String getClaveActual() {
        return claveActual;
    }

    public void setClaveActual(String claveActual) {
        this.claveActual = claveActual;
    }

    public Empresa getUsuarioObj() {
        return empresaObj;
    }

    public void setUsuarioObj(Empresa empresaObj) {
        this.empresaObj = empresaObj;
    }
    private List<Global> perfilesList = new ArrayList<Global>();

    public List<Global> getPerfilesList() {
        return perfilesList;
    }

    public void setPerfilesList(List<Global> perfilesList) {
        this.perfilesList = perfilesList;
    }


// </editor-fold>

// <editor-fold defaultstate="collapsed" desc="FUNCIONES ACCIONES">
    public void habilitar(Boolean estado) {


    }

    public void limpiar() {


    }

    // </editor-fold >
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        formaClientes = new javax.swing.JDialog();
        jPanel9 = new javax.swing.JPanel();
        codigoBuscar = new javax.swing.JFormattedTextField();
        jLabel18 = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        busquedaTabla = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        ingreso = new com.toedter.calendar.JDateChooser();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        noTicket = new javax.swing.JFormattedTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        telefono = new javax.swing.JFormattedTextField();
        identificacion = new javax.swing.JFormattedTextField();
        nombres = new javax.swing.JFormattedTextField();
        direccion = new javax.swing.JFormattedTextField();
        jButton1 = new javax.swing.JButton();
        salida = new com.toedter.calendar.JDateChooser();
        jLabel17 = new javax.swing.JLabel();
        cliente = new javax.swing.JFormattedTextField();
        jLabel19 = new javax.swing.JLabel();
        tiempo = new com.toedter.calendar.JDateChooser();
        placa = new javax.swing.JFormattedTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        total = new javax.swing.JFormattedTextField();
        codigo = new javax.swing.JFormattedTextField();
        dias = new javax.swing.JLabel();
        dias1 = new javax.swing.JLabel();
        dias2 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        btnAgregar = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();

        formaClientes.setLocationByPlatform(true);
        formaClientes.getContentPane().setLayout(null);

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel9.setLayout(null);

        codigoBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                codigoBuscarKeyPressed(evt);
            }
        });
        jPanel9.add(codigoBuscar);
        codigoBuscar.setBounds(100, 10, 220, 20);

        jLabel18.setText("NOMBRES:");
        jPanel9.add(jLabel18);
        jLabel18.setBounds(10, 10, 70, 14);

        formaClientes.getContentPane().add(jPanel9);
        jPanel9.setBounds(10, 10, 510, 40);

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel10.setLayout(null);

        busquedaTabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Identificaci√≥n", "Usuario"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        busquedaTabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                busquedaTablaMouseClicked(evt);
            }
        });
        busquedaTabla.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                busquedaTablaKeyPressed(evt);
            }
        });
        jScrollPane4.setViewportView(busquedaTabla);

        jPanel10.add(jScrollPane4);
        jScrollPane4.setBounds(20, 20, 480, 150);

        formaClientes.getContentPane().add(jPanel10);
        jPanel10.setBounds(10, 60, 510, 180);

        setTitle("Usuarios");
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                formKeyReleased(evt);
            }
        });
        getContentPane().setLayout(null);

        jPanel3.setBorder(new javax.swing.border.MatteBorder(new javax.swing.ImageIcon(getClass().getResource("/images_botones/fondoInicio.png")))); // NOI18N
        jPanel3.setOpaque(false);
        jPanel3.setLayout(null);

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel8.setForeground(new java.awt.Color(0, 51, 51));
        jLabel8.setText("Registro de Tickets ..::..");
        jPanel3.add(jLabel8);
        jLabel8.setBounds(10, 0, 270, 15);

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 10));
        jLabel10.setForeground(new java.awt.Color(102, 102, 102));
        jLabel10.setText("Registro el Numero de placa y presiona GUARDAR..::..");
        jPanel3.add(jLabel10);
        jLabel10.setBounds(10, 20, 290, 13);

        getContentPane().add(jPanel3);
        jPanel3.setBounds(0, 0, 600, 40);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel1.setLayout(null);

        ingreso.setBackground(new java.awt.Color(255, 255, 255));
        ingreso.setDateFormatString("HH:mm:ss");
        ingreso.setFont(new java.awt.Font("Tahoma", 1, 14));
        jPanel1.add(ingreso);
        ingreso.setBounds(120, 50, 110, 20);

        jLabel7.setForeground(new java.awt.Color(0, 0, 153));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("TICKET No:");
        jPanel1.add(jLabel7);
        jLabel7.setBounds(50, 10, 60, 14);

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("Tel√©fono:");
        jPanel1.add(jLabel9);
        jLabel9.setBounds(270, 90, 90, 20);

        noTicket.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                noTicketKeyPressed(evt);
            }
        });
        jPanel1.add(noTicket);
        noTicket.setBounds(120, 10, 110, 20);

        jLabel1.setText("Facturar a:");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(310, 10, 80, 14);

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel13.setForeground(new java.awt.Color(0, 0, 204));
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel13.setText("Tiempo:");
        jPanel1.add(jLabel13);
        jLabel13.setBounds(10, 90, 100, 20);

        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel14.setText("Identificaci√≥n:");
        jPanel1.add(jLabel14);
        jLabel14.setBounds(270, 30, 90, 20);

        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel15.setText("Direcci√≥n:");
        jPanel1.add(jLabel15);
        jLabel15.setBounds(270, 70, 90, 20);

        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel16.setText("Cliente:");
        jPanel1.add(jLabel16);
        jLabel16.setBounds(270, 50, 90, 20);

        telefono.setEditable(false);
        telefono.setText("9999999999999");
        jPanel1.add(telefono);
        telefono.setBounds(370, 90, 140, 20);

        identificacion.setEditable(false);
        identificacion.setText("9999999999999");
        identificacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                identificacionActionPerformed(evt);
            }
        });
        jPanel1.add(identificacion);
        identificacion.setBounds(370, 30, 110, 20);

        nombres.setEditable(false);
        nombres.setText("CONSUMIDOR FINAL");
        jPanel1.add(nombres);
        nombres.setBounds(370, 50, 190, 20);

        direccion.setEditable(false);
        direccion.setText("S/D");
        jPanel1.add(direccion);
        direccion.setBounds(370, 70, 190, 20);

        jButton1.setText("Buscar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(370, 10, 65, 20);

        salida.setBackground(new java.awt.Color(255, 255, 255));
        salida.setDateFormatString("HH:mm:ss");
        salida.setFont(new java.awt.Font("Tahoma", 1, 14));
        jPanel1.add(salida);
        salida.setBounds(120, 70, 110, 20);

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel17.setForeground(new java.awt.Color(0, 102, 0));
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel17.setText("Ingreso:");
        jPanel1.add(jLabel17);
        jLabel17.setBounds(10, 50, 100, 20);

        cliente.setEditable(false);
        cliente.setText("1");
        jPanel1.add(cliente);
        cliente.setBounds(480, 30, 30, 20);

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel19.setForeground(new java.awt.Color(204, 0, 0));
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel19.setText("Salida:");
        jPanel1.add(jLabel19);
        jLabel19.setBounds(10, 70, 100, 20);

        tiempo.setBackground(new java.awt.Color(255, 255, 255));
        tiempo.setDateFormatString("HH:mm");
        tiempo.setFont(new java.awt.Font("Tahoma", 1, 14));
        jPanel1.add(tiempo);
        tiempo.setBounds(120, 90, 110, 20);

        placa.setEditable(false);
        placa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                placaKeyPressed(evt);
            }
        });
        jPanel1.add(placa);
        placa.setBounds(120, 30, 110, 20);

        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel12.setText("Placa:");
        jPanel1.add(jLabel12);
        jLabel12.setBounds(50, 30, 60, 14);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18));
        jLabel2.setForeground(new java.awt.Color(255, 0, 0));
        jLabel2.setLabelFor(total);
        jLabel2.setText("A COBRAR:");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(270, 140, 130, 30);

        total.setEditable(false);
        total.setForeground(new java.awt.Color(51, 153, 0));
        total.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        total.setText("0.0");
        total.setCaretColor(new java.awt.Color(0, 204, 0));
        total.setFont(new java.awt.Font("Tahoma", 1, 24));
        jPanel1.add(total);
        total.setBounds(400, 140, 160, 30);

        codigo.setEditable(false);
        jPanel1.add(codigo);
        codigo.setBounds(230, 30, 40, 20);

        dias.setFont(new java.awt.Font("Tahoma", 1, 11));
        dias.setForeground(new java.awt.Color(0, 0, 204));
        dias.setText("DIA(s)");
        jPanel1.add(dias);
        dias.setBounds(160, 110, 60, 20);

        dias1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        dias1.setForeground(new java.awt.Color(204, 0, 0));
        dias1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        dias1.setText("0");
        jPanel1.add(dias1);
        dias1.setBounds(120, 110, 30, 20);

        dias2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        dias2.setForeground(new java.awt.Color(0, 0, 204));
        dias2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        dias2.setText("MAYOR A:");
        jPanel1.add(dias2);
        dias2.setBounds(40, 110, 70, 20);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(10, 70, 570, 180);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel4.setLayout(null);

        btnAgregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/guardar.png"))); // NOI18N
        btnAgregar.setMnemonic('G');
        btnAgregar.setText("Guardar");
        btnAgregar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAgregar.setMargin(new java.awt.Insets(2, 2, 2, 2));
        btnAgregar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });
        jPanel4.add(btnAgregar);
        btnAgregar.setBounds(150, 10, 60, 50);

        btnSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/salir.png"))); // NOI18N
        btnSalir.setMnemonic('S');
        btnSalir.setText("Salir");
        btnSalir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSalir.setMargin(new java.awt.Insets(2, 2, 2, 2));
        btnSalir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });
        jPanel4.add(btnSalir);
        btnSalir.setBounds(210, 10, 60, 50);

        getContentPane().add(jPanel4);
        jPanel4.setBounds(290, 260, 280, 70);

        pack();
    }// </editor-fold>//GEN-END:initComponents
 

    

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        // TODO add your handling code here:
        if(principal.permisos.getAgregar()){
                    try {
                        if(codigo.getText().isEmpty()){
                            JOptionPane.showMessageDialog(this, "Seleccione o Ingrese un Ticket ...!", "", JOptionPane.ERROR_MESSAGE);
                            noTicket.requestFocusInWindow();
                            return;
                        }
                        Empresa emp = (Empresa) adm.querySimple("Select o from Empresa as o");
                         Factura facActual =  (Factura) adm.buscarClave(new Integer(codigo.getText()),Factura.class);
                        facActual.setCliente(new Clientes(new Integer(cliente.getText())));
                        Date fecSalida = new Date();
                        fecSalida.setHours(salida.getDate().getHours());
                        fecSalida.setMinutes(salida.getDate().getMinutes());
                        fecSalida.setSeconds(salida.getDate().getSeconds());
                        facActual.setFechafin(fecSalida);

                        facActual.setNumero(emp.getDocumentofac());
                        facActual.setTotal(new BigDecimal(total.getText()));

                        Date fecTiempo = new Date();
                        fecTiempo.setHours(tiempo.getDate().getHours());
                        fecTiempo.setMinutes(tiempo.getDate().getMinutes());
                        fecTiempo.setSeconds(tiempo.getDate().getSeconds());
                        facActual.setTiempo(fecTiempo);


                        adm.actualizar(facActual);
                        Integer numero = new Integer(emp.getDocumentofac());
                        emp.setDocumentofac((numero+1)+"");
                        int dia = 0;
                        try {
                            dia = new Integer(dias1.getText());
                        } catch (Exception e) { dia = 0;}
                        imprimir(facActual.getCodigo(), emp,dia);
                        adm.actualizar(emp);
                        ingreso.setDate(null);
                        salida.setDate(null);
                        placa.setText(null);
                        tiempo.setDate(null);
                        noTicket.setText("");
                        codigo.setText("");
                        
                    } catch (Exception ex) {
                        JOptionPane.showMessageDialog(this, "Error en guardar Registro ...! \n" + ex.getMessage(), "", JOptionPane.ERROR_MESSAGE);
                        Logger.getLogger(frmEmpresa.class.getName()).log(Level.SEVERE, null, ex);
                        return;
                    }
  
        }else{
            JOptionPane.showMessageDialog(this, "NO TIENE PERMISOS PARA REALIZAR ESTA ACCI√ìN");
        }


    }//GEN-LAST:event_btnAgregarActionPerformed

    public void imprimir(int cod,Empresa emp,int dias) {

//                    viewer.show();
        try {
              WorkingDirectory w = new WorkingDirectory();
             String ubicacionDirectorio = w.get()+"\\";
                if(ubicacionDirectorio.contains("build"))
                    ubicacionDirectorio = ubicacionDirectorio.replace("\\build", "");
            JasperReport masterReport = (JasperReport) JRLoader.loadObject(ubicacionDirectorio+"\\reportes\\factura.jasper");

            Factura fac = (Factura) adm.querySimple("Select o from Factura as o where o.codigo = "+cod+" ");
            ArrayList detalle = new ArrayList();
            detalle.add(fac);
            FacturaSource ds = new FacturaSource(detalle);
            Map parametros = new HashMap();

            parametros.put("empresa", emp.getRazon());
            parametros.put("direccion", emp.getDireccion());
            parametros.put("telefono", emp.getTelefonos());
            parametros.put("dias", (dias>0?dias+ " Dias":""));

            JasperPrint masterPrint = JasperFillManager.fillReport(masterReport, parametros, ds);
             PrinterJob job = PrinterJob.getPrinterJob();
            /* Create an array of PrintServices */
            PrintService[] services = PrintServiceLookup.lookupPrintServices(null, null);
            int selectedService = 0;
            /* Scan found services to see if anyone suits our needs */
            for (int i = 0; i < services.length; i++) {
                String nombre = services[i].getName();
                if (nombre.contains(emp.getImpfactura())) {
                    selectedService = i;
                }
            }
            job.setPrintService(services[selectedService]);
            PrintRequestAttributeSet  printRequestAttributeSet = new HashPrintRequestAttributeSet();
            MediaSizeName mediaSizeName = MediaSize.findMedia(4, 4, MediaPrintableArea.INCH);
            printRequestAttributeSet.add(mediaSizeName);
            printRequestAttributeSet.add(new Copies(1));
            JRPrintServiceExporter exporter;
            exporter = new JRPrintServiceExporter();
            exporter.setParameter(JRExporterParameter.JASPER_PRINT, masterPrint);
            /* We set the selected service and pass it as a paramenter */
            exporter.setParameter(JRPrintServiceExporterParameter.PRINT_SERVICE, services[selectedService]);
            exporter.setParameter(JRPrintServiceExporterParameter.PRINT_SERVICE_ATTRIBUTE_SET, services[selectedService].getAttributes());
            exporter.setParameter(JRPrintServiceExporterParameter.PRINT_REQUEST_ATTRIBUTE_SET, printRequestAttributeSet);
            exporter.setParameter(JRPrintServiceExporterParameter.DISPLAY_PAGE_DIALOG, Boolean.FALSE);
            exporter.setParameter(JRPrintServiceExporterParameter.DISPLAY_PRINT_DIALOG, Boolean.FALSE);
            exporter.exportReport();

//            JasperViewer viewer = new JasperViewer(masterPrint, false); //PARA VER EL REPORTE ANTES DE IMPRIMIR
//            viewer.show();
//            try {
//                JasperPrintManager.printPage(masterPrint, 0, false);//LE ENVIO A IMPRIMIR false NO MUESTRA EL CUADRO DE DIALOGO
//            } catch (JRException ex) {
//                ex.printStackTrace();
//            }
        } catch (Exception ex) {
            Logger.getLogger(frmTicket.class.getName()).log(Level.SEVERE, null, ex);
        }

//        } catch (JRException ex) {
//            ex.printStackTrace();
//        }
    }
    


    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        principal = null;
        empresaObj = null;
        System.gc();
}//GEN-LAST:event_btnSalirActionPerformed

    private void formKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyReleased
        // TODO add your handling code here:
        if (evt.getKeyCode() == evt.VK_ESCAPE) {
            this.setVisible(false);
        }
    }//GEN-LAST:event_formKeyReleased

    private void placaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_placaKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == evt.VK_ENTER) {
            placa.nextFocus();
        }
    }//GEN-LAST:event_placaKeyPressed

    private void identificacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_identificacionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_identificacionActionPerformed

    private void codigoBuscarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_codigoBuscarKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == evt.VK_ENTER) {

            Thread cargar = new Thread() {

                public void run() {
                    principal.procesando.setVisible(true);
                    try {
                        List<Clientes> usuarios = adm.query("Select o from Clientes as o where o.nombres like '" + codigoBuscar.getText().trim() + "%' ");
                        Object[] obj = new Object[4];
                        DefaultTableModel dtm = (DefaultTableModel) busquedaTabla.getModel();
                        dtm.getDataVector().removeAllElements();
                        for (Iterator<Clientes> it = usuarios.iterator(); it.hasNext();) {
                            Clientes glbusuario = it.next();
                            obj[1] = glbusuario.getNombres();
                            obj[0] = glbusuario.getCodigo();
                            dtm.addRow(obj);
                        }
                        busquedaTabla.setModel(dtm);
                        if (busquedaTabla.getRowCount() > 0) {
                            busquedaTabla.requestFocusInWindow();
                        } else {
                            codigoBuscar.requestFocusInWindow();
                        }
                    } catch (Exception ex) {
                        Logger.getLogger(frmFactura.class.getName()).log(Level.SEVERE, null, ex);
                    }

                    principal.procesando.setVisible(false);
                }
            };
            cargar.start();

        } else if (evt.getKeyCode() == evt.VK_ESCAPE) {
            formaClientes.dispose();
        }
    }//GEN-LAST:event_codigoBuscarKeyPressed

    private void busquedaTablaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_busquedaTablaMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2) {
            try {
                int fila = busquedaTabla.getSelectedRow();
                 Clientes client = (Clientes) adm.buscarClave((Integer)busquedaTabla.getValueAt(fila, 0), Clientes.class);
                 cliente.setText(client.getCodigo()+"");
                 nombres.setText(client.getNombres());
                 identificacion.setText(client.getIdentificacion());
                 direccion.setText(client.getDireccion());
                 telefono.setText(client.getTelefono());
                formaClientes.dispose();
                client = null;
            } catch (Exception ex) {
                Logger.getLogger(frmFactura.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        //        JOptionPane.showMessageDialog(this, usuarioObj);
}//GEN-LAST:event_busquedaTablaMouseClicked

    private void busquedaTablaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_busquedaTablaKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == evt.VK_ENTER) {
            try {
                int fila = busquedaTabla.getSelectedRow();
                Clientes client = (Clientes) adm.buscarClave((Integer)busquedaTabla.getValueAt(fila, 0), Clientes.class);
                 cliente.setText(client.getCodigo()+"");
                 nombres.setText(client.getNombres());
                 identificacion.setText(client.getIdentificacion());
                 direccion.setText(client.getDireccion());
                 telefono.setText(client.getTelefono());
                formaClientes.dispose();
                client = null;
            } catch (Exception ex) {
                Logger.getLogger(frmFactura.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else if (evt.getKeyCode() == evt.VK_ESCAPE) {
            formaClientes.dispose();
        }
}//GEN-LAST:event_busquedaTablaKeyPressed

    @SuppressWarnings("static-access")
    private void noTicketKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_noTicketKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==evt.VK_ENTER){
            try {
                    ingreso.setDate(null);
                    salida.setDate(null);
                    placa.setText(null);
                    tiempo.setDate(null);

                    Factura fac = (Factura) adm.querySimple("Select o from Factura as o where o.ticket = '"+noTicket.getText()+"' ");
                    if(fac != null){
                        dias.setVisible(false);
                        dias1.setVisible(false);
                        dias2.setVisible(false);
                        if(fac.getFechafin()!= null){
                            JOptionPane.showMessageDialog(this, "Ticket ya facturado seleccione otro...!");
                                noTicket.setText("");
                            return;
                        }
                        ingreso.setDate(fac.getFechaini());
                        salida.setDate(new Date());

                         

                        Date act = new Date();
                        int diasEntre = Days.daysBetween(new LocalDate(fac.getFechaini()), new LocalDate (new Date())).getDays();

                        System.out.println(""+diasEntre);
//                        LocalTime horaIni = new LocalTime(ingreso.getDate().getTime());
//                        LocalTime horaFin = new LocalTime(salida.getDate().getTime());
                        LocalTime horaIni = new LocalTime(new DateTime(ingreso.getDate()));
                        LocalTime horaFin = new LocalTime(new DateTime(salida.getDate()));

                        Integer minutos = (Minutes.minutesBetween(horaIni, horaFin).getMinutes());
                        Integer horas = minutos/60;
                        if(minutos.intValue() <0){
//                            horas = horas *-1 ;
//                            horas += 24;
                            horas=0;
                            minutos = 0;
                            dias.setVisible(true);
                            dias1.setVisible(true);
                            dias2.setVisible(true);
                        }
                        for (int i = 0; i < diasEntre ; i++) {
                                horas += 24;
                            dias.setVisible(true);
                            dias1.setVisible(true);
                            dias2.setVisible(true);
                        }
                dias1.setText(""+diasEntre);

                        Float min = minutos/60f;
                        int indice =  min.toString().indexOf(".");
                        Float  valorf = new Float("0"+min.toString().substring(indice));
                        int valor = java.lang.Math.round((valorf*60));
                        act.setHours(horas);
                        act.setMinutes(valor);
                        tiempo.setDate(act);
                        placa.setText(fac.getPlaca());
                        
                        BigDecimal aCobrar = new BigDecimal(0);
                        for(int a= 0; a<horas; a++){
                            aCobrar =aCobrar.add(buscar(60));

                        }
                        if(valor>0){
                            aCobrar = aCobrar.add(buscar(valor));
                        }
                        total.setText(aCobrar+"");
                        codigo.setText(fac.getCodigo()+""); 
                        //tiempo.setDate(Hours.hoursBetween(horaIni, horaFin));


                    }else{
                        ingreso.setDate(null);
                        salida.setDate(null);
                        placa.setText(null);
                           tiempo.setDate(null);
                    }
            } catch (Exception e) {
                    ingreso.setDate(null);
                        salida.setDate(null);
                        placa.setText(null);
                               tiempo.setDate(null);
            }
        }
    }//GEN-LAST:event_noTicketKeyPressed

    public BigDecimal buscar(Integer minutos){
        for (Iterator<Tarifas> it = tarifario.iterator(); it.hasNext();) {
            Tarifas tarifas = it.next();
            int desde = tarifas.getDesde().intValue();
            int hasta = tarifas.getHasta().intValue() ;
            int valo = minutos;
                if(valo>=desde && valo <= hasta){
                    return tarifas.getValor();
                }
            
        }
        return new BigDecimal(0);


    }

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
         formaClientes.setModal(true);
         formaClientes.setSize(533, 300);
                formaClientes.setLocation(250, 70);
                formaClientes.show();
    }//GEN-LAST:event_jButton1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnSalir;
    private javax.swing.JTable busquedaTabla;
    private javax.swing.JFormattedTextField cliente;
    private javax.swing.JFormattedTextField codigo;
    private javax.swing.JFormattedTextField codigoBuscar;
    private javax.swing.JLabel dias;
    private javax.swing.JLabel dias1;
    private javax.swing.JLabel dias2;
    private javax.swing.JFormattedTextField direccion;
    private javax.swing.JDialog formaClientes;
    private javax.swing.JFormattedTextField identificacion;
    private com.toedter.calendar.JDateChooser ingreso;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JFormattedTextField noTicket;
    private javax.swing.JFormattedTextField nombres;
    private javax.swing.JFormattedTextField placa;
    private com.toedter.calendar.JDateChooser salida;
    private javax.swing.JFormattedTextField telefono;
    private com.toedter.calendar.JDateChooser tiempo;
    private javax.swing.JFormattedTextField total;
    // End of variables declaration//GEN-END:variables
}
