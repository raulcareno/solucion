<?page id="controlequipospage"?>
<window id="controlventana">
    <script type="text/javascript" src="/js/jquery-1.4.4.min.js"/>
    <script type="text/javascript" src="/js/jquery.maskedinput-1.2.2.min.js"/>
    <script type="text/javascript" src="/js/masks.js"/>
    <script type="text/javascript" src="/js/jquery-ui-1.8.9.custom.min.js" />
    <zscript>
            <![CDATA[
  import jcinform.persistencia.*;
  import jcinform.conexion.*;
  import jcinform.bean.*;
  import java.util.ArrayList;
  import org.zkoss.image.AImage;
  import org.zkoss.image.Image;
    Administrador adm = new Administrador();
 //  List allEvents = adm.query("Select o from Controlequipos as o ");
    //static Controlequipos empa = new Controlequipos();
    Permisos permiso = new Permisos();
    List perfiles = adm.query("Select o from Equipos as o order by o.nombre, o.modelo ");
    List proveedoresList = adm.query("Select o from Proveedores as o order by o.razonsocial ");
    Object media = null;

//FUNCIONES
void cargarFoto(byte[] imageData){
  foto0.setContent(new org.zkoss.image.AImage("fotito", imageData));
}
void cargarVacio(){
  foto0.setContent(new org.zkoss.image.AImage("t", desktop.webApp.getResourceAsStream("/fotos/vacio.gif")));
}

//FUNCIONES
/*
void llenar(Controlequipos empa){
    codigo.value = empa.getCodigo();
    cantidad.value = empa.getCantidad();
    fecha.value = empa.getFechacompra();
    precio.value = empa.getPrecio();
    mac.value = empa.getMac();
    



 
                if(empa.getEquipos()!=null){
                  for (int i = 0; i <= perf.getItems().size(); i++) {
                            Equipos tr0 = ((Equipos)((Listitem)perf.getItems().get(i)).getValue());
                            int primero = tr0.getCodigo();
                            int segundo = empa.getEquipos().getCodigo();
                            if(primero == segundo){
                                perf.setSelectedItem((Listitem)perf.getItems().get(i));
                                bd.value = empa.getEquipos()+"";
                                break;
                            }
                   }
  
                }
                
                
                if(empa.getProveedores()!=null){
                  for (int i = 0; i <= prove.getItems().size(); i++) {
                            Proveedores tr0 = ((Proveedores)((Listitem)prove.getItems().get(i)).getValue());
                            int primero = tr0.getCodigo();
                            int segundo = empa.getProveedores().getCodigo();
                            if(primero == segundo){
                                prove.setSelectedItem((Listitem)prove.getItems().get(i));
                                bd.value = empa.getProveedores()+"";
                                break;
                            }
                   }
  
                }

}
*/
void estado(Boolean estado,Boolean modificar){
        if(modificar){
            empa = (Controlequipos)datos.selectedItem.value;
        }

    cantidad.readonly = estado;
    precio.readonly = estado;
    fecha.readonly = estado;
    mac.readonly = estado;
    perf.disabled = estado;
    bd.disabled = estado;
    bd2.disabled = estado;

}


 void guardar(){
       
        
            List col = opciones.getRows().getChildren();
             for (int i = 0; i < col.size(); i++) {
                    Row object = (Row) col.get(i);
                    Controlequipos det = new Controlequipos();
                     det.setCodigo(adm.getNuevaClave("Controlequipos","codigo"));
                     List labels = object.getChildren();
                         det.setEquipos(((Listbox) labels.get(0)).getSelectedItem().getValue());
                         det.setProveedores(((Listbox) labels.get(1)).getSelectedItem().getValue());
                         det.setPrecio(((Doublebox) labels.get(2)).getValue());
                         det.setMac(((Textbox) labels.get(3)).getValue());
                         det.setAsignado(false);
                     adm.guardar(det);
             }
      
              Boolean a = true;
            if(a){
                Messagebox.show("Registro Almacenado con Éxito...!", "Administrador Educativo", Messagebox.OK, Messagebox.INFORMATION);
                permiso.auditar("Controlequipos","Guardar","cantidad"+cantidad.value+ ""+fecha.value);
                    guardar.disabled=true;
                    agregar.disabled=false;
                    estado(true,false);
                    llenar(new Controlequipos(0));
                    
            }else{
                Messagebox.show("No se pudo almacenar...X", "Administrador Educativo", Messagebox.OK, Messagebox.EXCLAMATION);
            }

    }

   Boolean verificar(String accion){
        return permiso.verificarPermiso("Equipos",accion);

    }
 void nuevo(){
    if(verificar("Agregar")){
          
          guardar.disabled=false; 
          //llenar(new Controlequipos(0));estado(false,false);
          cantidad.setDisabled(false);
          fecha.setDisabled(false);
          filas.getChildren().clear();
          
          //String command = "applyTelefono('"+seguridad.getUuid()+"');";
          //Clients.evalJavaScript(command);
    }else{
            Messagebox.show("No tiene permisos para realizar esta acción...!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
    }
}
 void move(){
        llenar((Controlequipos)datos.selectedItem.value);
        modificar.disabled = false;
        registro.setSelected(true);
  }
void modificar(){
  if(verificar("Modificar")){
       guardar.disabled=false; estado(false,true);
    }else{
            Messagebox.show("No tiene permisos para realizar esta acción...!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
    }
}
void eliminar(){
  if(verificar("Eliminar")){
        try{
             empa = (Controlequipos)datos.selectedItem.value;
             adm.eliminarObjeto(Controlequipos.class, empa.getCodigo());
             permiso.auditar("Controlequipos","Eliminar",""+nombre.value);
            datos.removeItemAt(datos.getSelectedIndex());
            llenar(new Controlequipos(0));
                Messagebox.show("Registro Eliminado con Éxito...!", "Administrador Educativo", Messagebox.OK, Messagebox.INFORMATION);
        }catch(Exception e){
            Messagebox.show("No se pudo eliminar el Registro...!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
        }
}else{
            Messagebox.show("No tiene permisos para realizar esta acción...!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
    }
}
 
  void buscar(String p){
        List ControlequiposEncontrados = adm.query("Select o from Controlequipos as o where o.equipos.nombre like '%"+p+"%' order by o.equipos.nombre");
        datos = new Listbox();
        int a=0;
            for (Iterator it = datos.getItems().iterator(); it.hasNext();) {
                    datos.getItems().remove(a);
                }


               for (Iterator it = ControlequiposEncontrados.iterator(); it.hasNext();) {
                      Controlequipos acceIt = (Controlequipos) it.next();
                      Listitem li = new Listitem();
                      li.setValue(acceIt);
                      li.appendChild(new Listcell(acceIt.getCodigo()+""));
                      li.appendChild(new Listcell(acceIt.getEquipos()+" "+acceIt.getEquipos().getModelo()+" "+acceIt.getEquipos().getMarcas()));
                      li.appendChild(new Listcell(acceIt.getMac()));
                      li.appendChild(new Listcell(acceIt.getPrecio()+""));
                      li.appendChild(new Listcell(acceIt.getFechacompra().toLocaleString()+""));
                      li.appendChild(new Listcell((acceIt.getAsignado()==true?"SI":"NO")));
                      datos.appendChild(li);
             }

    }
void cargar(Equipos g){
empa.setEquipos(g);
}
  Listbox llenaProve(Listbox ba){
    ba.setMold("select");
                   for (Iterator it = proveedoresList.iterator(); it.hasNext();) {
                      Proveedores acceIt = (Proveedores) it.next();
                      Listitem li = new Listitem();
                      li.setValue(acceIt);
                      li.setSelected(true);
                      li.appendChild(new Listcell(acceIt.getRazonsocial()+""));
                      ba.appendChild(li);
             }
    return ba;
}
  Listbox llenaEquipo(Listbox eq){
            eq.setMold("select");
                   for (Iterator it = perfiles.iterator(); it.hasNext();) {
                      Equipos acceIt = (Equipos) it.next();
                      Listitem li = new Listitem();
                      li.setValue(acceIt);
                      li.setSelected(true);
                      li.appendChild(new Listcell(acceIt.getNombre()+" "+ acceIt.getMarcas()+" "+acceIt.getModelo()));
                      eq.appendChild(li);
             }
    return eq;
}
llenarGrid(){
  if(cantidad.value == 0 || cantidad.value == null || cantidad.value == ""
  || idproducto.value == null || idproducto.value == "" 
  || vu.value == "" || vu.value == 0 || vu.value == null){
  
  alert("LLENE TODOS LOS CAMPOS");
    return;
  
  }
                            try
                    {
                    Row row = new Row();
                           Doublebox dou = new Doublebox(0);
                            dou.setStyle("float:right;text-align:right");
                            dou.setValue(vu.value);
                            Intbox intb = new Intbox(cantidad.value);
                            intb.setCols(3);
                             intb.setStyle("float:right;text-align:right");
                            Label prod = new Label(productod.value);
                            row.appendChild(intb);
                            row.appendChild(prod);
                            row.appendChild(dou);
                            
                            Button aButton = null;
                            aButton = new Button("quitar");
                            aButton.setImage("/images/quitar.gif");
                            aButton.setHeight("5px");
                            aButton.setId("id"+idproducto.value);
                            aButton.addEventListener("onClick", new EventListener() {
                                public void onEvent(Event event) throws Exception {
                                      //  int valor0 = Messagebox.show("PRECAUCIÓN: Si quita este elemento se eliminará de todos los Cursos y de todos los profesores, Desea Continuar?", "Question", Messagebox.YES | Messagebox.NO, Messagebox.QUESTION);
                                        quitarFila(aButton.getId());
                                         
                      
                                }
                            });

                            row.appendChild(aButton);
                            row.setValue(new Equipos(idproducto.value)); 
                         
                    filas.appendChild(row);

                    }catch(Exception e){
                        alert("YA SE HA AGREGADO ESTE PRODUCTO");
                    }
                        
                        vu.value=null;
                        cantidad.value= null;
                        productod.value=null;
                        idproducto.value = null;
                        cantidad.focus();
        
}
 public void quitarFila(String codigoBuscar){
                 Rows filas2 =opciones.getRows();
                List listadoProductos = filas2.getChildren();
                    for (int i = 0; i <= listadoProductos.size()-1; i++) {
                       Row object = (Row) listadoProductos.get(i);
                       Equipos nuevo = ((Equipos)object.getValue());
                       String codigoA = "id"+nuevo.getCodigo();
                       if(codigoA.equals(codigoBuscar)){
                            opciones.getRows().removeChild(object);
                            break;
                       }
                    }

}
llenarGridMac(int numero){
 
    filas2.getChildren().clear();
            for(int i = 0; i< numero; i++){
                    Row row = new Row();
                             Textbox t = new Textbox("");
                            row.appendChild(t);
                    filas2.appendChild(row);
            }
}

]]>
    </zscript>
    <tabbox width="100%">
        <tabs>
            <tab id="registro" label="Registro" />
            <tab id="busqueda" label="Busquedas" />
        </tabs>
        <tabpanels>
            <tabpanel>


                <grid width="100%">
                    <rows>
                    
                        <row>
                            <span style="float:right"> Fecha de Compra:</span>
                            <datebox id="fecha" onCreate="self.value = new Date()"/>
                        </row>
                        <row>
                            <span style="float:right"> Proveedor:</span> 
                            <span>
                                
                                <textbox  readonly="true"   cols="39" id="idproveedores" />
                                <textbox readonly="true"  cols="1" id="proveedores" />
                                
                                <button label=""  id="buscarE3" disabled="false"  image="/images/auditoria.gif">
                                    <attribute name="onClick">{
                                            final Window win = (Window) Executions.createComponents("buscarProveedores.zul", null, null);
                                            win.setMaximizable(true);
                                            win.setClosable(true);
                                            win.setAttribute("nuevo", true);
                                            win.setAttribute("equipo", 3);
                                            win.setTitle("Buscar");
                                            win.doModal();
                                            }                            
                                    </attribute>
                                </button> 
                            </span>
                        </row>
                        <row>
                            <span style="float:right"> Factura:</span> 
                            <textbox id="factura"/>
                        </row>
                        <row spans="4">
                            <grid  width="98%" id="anadir">
                                <columns sizable="true">
                                   
                                     <column label="CANTIDAD" width="80px" />
                             
                                    <column label="EQUIPO" />
                                    <column label="V.U."  width="30px" />
                                    <column label="OPCION" width="30px"  />
                                </columns>
                                <rows>
                                    <row>
                                        <intbox onOK="buscarPro.focus()" style="float:right;text-align:right" cols="2" id="cantidad" value="1"/>
                                       <span>
                                            <intbox cols="1" visible="false"  id="idproducto" readonly="true" />
                                             <textbox value="" onFocus="vu.focus()" id="productod" cols="50"  readonly="true" />
                                            
                                            <button label=""  id="buscarPro" disabled="false"  image="/images/auditoria.gif">
                                                <attribute name="onClick">{
                                            final Window win = (Window) Executions.createComponents("buscarProductos.zul", null, null);
                                            win.setMaximizable(true);
                                            win.setClosable(true);
                                            win.setAttribute("nuevo", true);
                                            win.setAttribute("equipo", 3);
                                            win.setTitle("Buscar");
                                            win.doModal();
                                            }                            
                                                </attribute>
                                            </button> 
                                       
                                        </span>
                                        <doublebox onOK="add.focus()"  style="float:right;text-align:right" id="vu"  />
                                        <span>
                                            <button  id="add"  label="Añadir Filas" image="/images/add2.png" onClick="llenarGrid();"/>
                                        </span>
                                       
                                    </row>
                                    
                                    <row>
                                      
                                    </row>
                                     
                                </rows>
                            </grid>
                                
                        </row>
                        <row spans="4">
                          
                            <grid height="280px"  width="98%" id="opciones">
                                <columns sizable="true">
                                    <column label="CANTIDAD" width="80px" />
                                    <column label="EQUIPO" />
                                    <column label="V.U."  width="30px" />
                                    <column label="OPCION" width="30px"  />
                                </columns>
                                <rows id="filas">
                                     
                                </rows>
                            </grid>
                                 
                        </row>
                            
                            

                      
                    </rows>
                </grid>




















                <vbox>
                    <hbox>
                        <button image="/images/guardar.gif" id="guardar" label="Guardar"  disabled="true"  onClick="guardar();"/>
                        <button  image="/images/nuevo.gif" id="agregar" label="Agregar" onClick="nuevo();" />
                        <button  image="/images/editar.gif" id="modificar"  label="Modificar" disabled="true"  onClick="modificar()"/>
                        <button  image="/images/eliminar.gif" id="eliminar"  label="Eliminar" disabled="true"  onClick="eliminar();"/>
                    </hbox>
                </vbox>


            </tabpanel>

            <tabpanel>

                <groupbox  width="100%" mold="3d" >

                    <caption label="Busquedas" />
                    <vbox>
                        <hbox>  Ip:
                            <textbox id="buscarText"  maxlength="60" cols="40" />
                            <button id="buscar"  label="Buscar" onClick="buscar(buscarText.getValue());"/>
                        </hbox>
                        <hbox>
                            <listbox mold="paging" rows="10" pageSize="10"  onSelect="move();estado(true,false);eliminar.disabled=false;guardar.disabled=true" id="datos" width="100%">
                                <listhead>
                                    <listheader label="Cod."/>
                                    <listheader label="Nombre"/>
                                    <listheader label="MAC"/>
                                    <listheader label="Precio"/>
                                    <listheader label="Comprado"/>
                                    <listheader label="Asignado"/>

                                </listhead>
                                <listitem forEach="${allEvents2}" value="${each}">
                                        <!--listcell label="${each.codigo}" />
                                        <listcell label="${each.ip}" />
                                        <listcell label="${each.ssid}" /-->
                                </listitem>
                            </listbox>


                        </hbox>
                    </vbox>
                </groupbox>



            </tabpanel>

        </tabpanels>


    </tabbox>

</window>
 