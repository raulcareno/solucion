  
<window   border="normal">

    <zscript>
        import bean.EventDAO; 
        import java.util.ArrayList; 
        import jcinform.persistencia.*;
        import jcinform.conexion.*;
        import jcinform.bean.*;
        import java.math.BigDecimal;

        Session ses = Sessions.getCurrent();
        Administrador adm = new Administrador();
        List allEvents = adm.query("Select o from Seriesempleados as o where o.codigo = -1 ");
        static Seriesempleados equi = new Seriesempleados();
        Permisos permiso = new Permisos();
        List empleadosLista = adm.query("Select o from Empleados as o "); 
        Empleados emp = new Empleados(-1);
            emp.setApellidos("[SELECCIONE]");
            emp.setNombres("");
         empleadosLista.add(0,emp);


        //FUNCIONES
        void llenar(Seriesempleados equi2){
                equi = equi2;
                try{serie.value = equi.getSeries().getSerie();}catch(Exception e){ serie.value = "";}
                try{serieSerie.value = equi.getSeries().getSerie();}catch(Exception e){ serieSerie.value = "";}
                try{equipoSerie.value = equi.getSeries().getDetallecompra().getEquipos()+"";}catch(Exception e){ equipoSerie.value = "";}
                try{codigoSerie.value = equi.getSeries().getCodigo()+"";}catch(Exception e){ codigoSerie.value = "";}
                fecha.value = equi.getFecha();
                
        }
        void estado(Boolean estado,Boolean modificar){
            if(modificar){
                equi = (Seriesempleados)datos.selectedItem.value;
            }
            serie.readonly = estado;
            fecha.disabled = estado;
        }


        void guardar(){
                if(empleadosL.selectedItem.value.equals("-1")){
                    Messagebox.show("Ingrese todos los campos con (*) ...!", "Administrador Educativo", Messagebox.OK, Messagebox.EXCLAMATION);
                    return;
                }
                
                equi.setSeries(new Series(new Integer(codigoSerie.value)));
                equi.setEmpleados(empleadosL.selectedItem.value);
                equi.setEstado(true);
                equi.setFecha(fecha.value);

                if((!equi.getCodigo().equals(0)) ){
                    adm.actualizar(equi);
                    List children = datos.selectedItem.children;
                    ((Listcell)children.get(0)).label = equipoSerie.value+"";
                    ((Listcell)children.get(1)).label = serieSerie.value+ "" ;
                    permiso.auditar("Seriesempleados","Actualizar",""+equi.getCodigo()+" - "+equipoSerie.value+" "+serieSerie.value);
                }else{
                    equi.setCodigo(adm.getNuevaClave("Seriesempleados","codigo"));
                    adm.guardar(equi);
                    permiso.auditar("Seriesempleados","Guardar",""+equi.getCodigo()+" - "+equipoSerie.value+" "+serieSerie.value);
                }
                Messagebox.show("Registro Almacenado con Éxito...!", "Administrador Educativo", Messagebox.OK, Messagebox.INFORMATION);
                guardar.disabled=true;
                agregar.disabled=false;
                estado(true,false);
                llenar(new Seriesempleados(0));
                buscar(empleadosL.selectedItem.value);
                }

    Boolean verificar(String accion){
        return permiso.verificarPermiso("Bancos",accion);
   }
    void nuevo(){
        if(verificar("Agregar")){
            guardar.disabled=false;
            llenar(new Seriesempleados(0));
            estado(false,false);
        }else{
            Messagebox.show("No tiene permisos para realizar esta acción...!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
        }
    }
        void move(){
            llenar((Seriesempleados)datos.selectedItem.value);
            
            modificar.disabled = false;
        }
        void modificar(){
            if(verificar("Modificar")){
                guardar.disabled=false; estado(false,true);
            }else{
                Messagebox.show("No tiene permisos para realizar esta acción...!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
            }
        }
        void eliminar(){
                if(verificar("Eliminar")){
                try{
                    equi = (Seriesempleados)datos.selectedItem.value;
                    adm.eliminarObjeto(Seriesempleados.class, equi.getCodigo());
                    permiso.auditar("Seriesempleados","Eliminar",""+equi.getCodigo()+" - "+equi.getSeries().getSerie());
                    datos.removeItemAt(datos.getSelectedIndex());
                    llenar(new Seriesempleados(0));
                    Messagebox.show("Registro Eliminado con Éxito...!", "Administrador Educativo", Messagebox.OK, Messagebox.INFORMATION);
                }catch(Exception e){
                    Messagebox.show("No se pudo eliminar el Registro...!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
                }
                }else{
                    Messagebox.show("No tiene permisos para realizar esta acción...!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
                }
        }
        void buscar(Empleados empleado){

      
                List equivaEncontrados = adm.query("Select o from Seriesempleados as o " + 
                " where o.empleados.codigo = '"+empleado.getCodigo()+"' and o.estado = true order by o.series.serie");
                datos = new Listbox();
                int a=0;
                for (Iterator it = datos.getItems().iterator(); it.hasNext();) {
                    datos.getItems().remove(a);
                }
                for (Iterator it = equivaEncontrados.iterator(); it.hasNext();) {
                    Seriesempleados acceIt = (Seriesempleados) it.next();
                    Listitem li = new Listitem();
                    li.setValue(acceIt);
                    li.appendChild(new Listcell(acceIt.getSeries().getDetallecompra().getEquipos()+" "));
                    li.appendChild(new Listcell(acceIt.getSeries().getSerie()+" "));
                    li.appendChild(new Listcell(acceIt.getFecha().toLocaleString()+" "));
                    datos.appendChild(li);
                }

        }
        void cargar(Bancos g){
            equi.setBancos(g);
        }
        void buscarSerie(String ser){
        List allEvents = adm.query("Select o from Series as o " + 
                " where o.estado = 'C' and o.serie = '"+ser+"' " + 
                " and o.serie not in (Select a.serie from Series as a where a.estado IN ( 'A','P','V') ) ");
        
        }
    </zscript>
    <groupbox mold="3d" >
        <caption label="Agregar Equipos a Empleados" />
	
        <grid width="80%">
            <rows> 
                <row>
                    <span style="float:right"> Seleccione un Empleado(*):</span>
                           <listbox mold="select" id="empleadosL" width="250px"
                              onSelect="buscar(self.selectedItem.value)">
                                    <listitem forEach="${empleadosLista}" value="${each}">
                                        <listcell label="${each.apellidos} ${each.nombres}" />

                                    </listitem>
                           </listbox>
                                              
                </row>
                <row>
                    
                    <span style="float:right"> Serie(*):</span>
                    <!--textbox id="serie"  onChanging="buscarSerie(event.value)"   maxlength="20"  cols="40" readonly="true"   /--> 
                    <combobox  cols="50" id="serie" onSelect='codigoSerie.value = ((Series)self.selectedItem.value).getCodigo()+""; serieSerie.value = ((Series)self.selectedItem.value).getSerie()+""; equipoSerie.value = ((Series)self.selectedItem.value).getDetallecompra().getEquipos()+""; ' 
                          autodrop="true" buttonVisible="false"  use="jcinform.bean.autoCompletarSeries"/>
                </row>
                <row >
                    <span></span>
                    <span>
                    <span > Codigo:</span>
                    <textbox id="codigoSerie"  maxlength="100" cols="10" readonly="true"   />   
                    <span> Serie:</span>
                    <textbox id="serieSerie"  maxlength="100" cols="15" readonly="true"   />   
                    <span> Equipo:</span>
                    <textbox id="equipoSerie"  maxlength="100" cols="20" readonly="true"   />   
                    </span>
                    
                </row>
                <row>
                            <span style="float:right"> Fecha(*):</span>                    
                            <datebox id="fecha"  format="dd/MM/yyyy HH:mm" onCreate="self.value= adm.Date()"/>
                </row>
                </rows>
        </grid>
        <vbox>
            <vbox>
                <hbox>
                    <button image="/images/guardar.gif" id="guardar" label="Guardar"  disabled="true"  onClick="guardar();"/>
                    <button  image="/images/nuevo.gif" id="agregar" label="Agregar" onClick="nuevo();" />
                    <button  image="/images/editar.gif" id="modificar"  label="Modificar" disabled="true"  onClick="modificar()"/>
                    <button  image="/images/eliminar.gif" id="eliminar"  label="Eliminar" disabled="true"  onClick="eliminar();"/>
                </hbox>
            </vbox>

        </vbox>

    </groupbox>
    <groupbox width="480px" mold="3d" >

        <caption label="Lista de Equipos Asignados" />
        <vbox>
   
            <hbox width="100%">
                <listbox onSelect="move();estado(true,false);eliminar.disabled=false;guardar.disabled=true" id="datos" width="478px" height="250px">
                    <listhead>
                        <listheader label="Equipo"/>
                        <listheader label="Serie"/>
                        <listheader label="Asignado"/>

                    </listhead>
                    <listitem forEach="${allEvents}" value="${each}">
                         <listcell label="${each.detallecompra.equipos}" />
                        <listcell label="${each.serie}" />
                        <listcell label="${each.fecha}" />
                    </listitem>
                </listbox>


            </hbox>
        </vbox>
    </groupbox>
	

</window>
