
<window   border="normal"
>

    <zscript>
        import bean.EventDAO; 
        import java.util.ArrayList; 
        import jcinform.persistencia.*;
        import jcinform.conexion.*;
        import jcinform.bean.*;
        import java.math.BigDecimal;

        Session ses = Sessions.getCurrent();
        Administrador adm = new Administrador();
        Session ses = Sessions.getCurrent();
        Empleadossucursal sucursalEmp = ses.getAttribute("sector");
  
        List allEvents = adm.query("Select o from Plan as o where o.sucursal.codigo = '"+sucursalEmp.getSucursal().getCodigo()+"' ");
        static Plan equi = new Plan();
        Permisos permiso = new Permisos();
        //SimpleTreeModel stm = new SimpleTreeModel(root);
        //FUNCIONES
        void llenar(Plan equi2){
                equi = equi2;
                nombre.value = equi.getNombre();
                valor.value = equi.getValor();
                pvp4.value = equi.getPvp4();
                tipo.value = equi.getTipo(); //home, corporativo
                dias.value = equi.getDias();
                fechaaviso.value = equi.getFechaaviso();
                fechavencimiento.value = equi.getFechavencimiento();
                nivelcomparticion.value = equi.getNivelcomparticion();//8:1 1:1
    
        }
        void estado(Boolean estado,Boolean modificar){
        if(modificar){
        equi = (Plan)datos.selectedItem.value;
        }
        nombre.readonly = estado;
        valor.readonly = estado;
        pvp4.readonly = estado;
        tipo.disabled = estado;
        dias.readonly = estado;
        fechaaviso.readonly = estado;
        fechavencimiento.readonly = estado;
 
        nivelcomparticion.readonly = estado;
 

        }


        void guardar(){
        if(nombre.value.equals("")){
        Messagebox.show("Ingrese todos los campos con (*) ...!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
        return;
        }
        equi.setNombre(nombre.value);
        equi.setValor(valor.value);
        equi.setTipo(tipo.value);
        equi.setDias(dias.value);
        equi.setPvp4(pvp4.value);
        equi.setSucursal(sucursalEmp.getSucursal());
        equi.setFechaaviso(fechaaviso.value);
        equi.setFechavencimiento(fechavencimiento.value);
        equi.setNivelcomparticion(nivelcomparticion.value);
        
        if((!equi.getCodigo().equals(0)) ){
            adm.actualizar(equi);
            List children = datos.selectedItem.children;
            ((Listcell)children.get(0)).label = equi.getCodigo()+"";
            ((Listcell)children.get(1)).label = nombre.value+ "" ;
            permiso.auditar("Planes","Actualizar",""+equi.getCodigo()+" - "+equi.getNombre());
        }else{
            equi.setCodigo(adm.getNuevaClave("Plan","codigo"));
            adm.guardar(equi);
            permiso.auditar("Planes","Guardar",""+equi.getCodigo()+" - "+equi.getNombre());
        }
        if(generarautomatico.isChecked()){
                adm.ejecutaSql("Update Contratos set automatico = true where plan.codigo = '"+equi.getCodigo()+"' ");
        }
        Messagebox.show("Registro Almacenado con Éxito...!", "Administrador Educativo", Messagebox.OK, Messagebox.INFORMATION);
        guardar.disabled=true;
        agregar.disabled=false;
        estado(true,false);
        llenar(new Plan(0));
        buscar("");
            
        }

        Boolean verificar(String accion){
        return permiso.verificarPermiso("Planes",accion);
        }
        void nuevo(){
        if(verificar("Agregar")){
        guardar.disabled=false;
        llenar(new Plan(0));
        estado(false,false);
        
        }else{
        Messagebox.show("No tiene permisos para realizar esta acción...!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
        }
        }
        void move(){
            generarautomatico.checked= false;
            llenar((Plan)datos.selectedItem.value);
            modificar.disabled = false;
        }
        void modificar(){
        if(verificar("Modificar")){
        guardar.disabled=false; estado(false,true);
        }else{
        Messagebox.show("No tiene permisos para realizar esta acción...!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
        }
        }
        void eliminar(){
        if(verificar("Eliminar")){
        try{
        equi = (Plan)datos.selectedItem.value;
        adm.eliminarObjeto(Plan.class, equi.getCodigo());
        permiso.auditar("Planes","Eliminar",""+equi.getCodigo()+" - "+equi.getNombre());
        datos.removeItemAt(datos.getSelectedIndex());
        llenar(new Plan(0));
        Messagebox.show("Registro Eliminado con Éxito...!", "Administrador Educativo", Messagebox.OK, Messagebox.INFORMATION);
        }catch(Exception e){
        Messagebox.show("No se pudo eliminar el Registro...!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
        }
        }else{
        Messagebox.show("No tiene permisos para realizar esta acción...!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
        }
        }
        void buscar(String p){

      
        List equivaEncontrados = adm.query("Select o from Plan as o where o.sucursal.codigo = '"+sucursalEmp.getSucursal().getCodigo()+"'  order by o.nombre");
        datos = new Listbox();
        int a=0;
        for (Iterator it = datos.getItems().iterator(); it.hasNext();) {
        datos.getItems().remove(a);
        }
   
       
        for (Iterator it = equivaEncontrados.iterator(); it.hasNext();) {
        Plan acceIt = (Plan) it.next();
        Listitem li = new Listitem();
        li.setValue(acceIt);
        li.appendChild(new Listcell(acceIt.getCodigo()+""));
        li.appendChild(new Listcell(acceIt.getNombre()+" "));
        li.appendChild(new Listcell(acceIt.getValor()+" "));
        li.appendChild(new Listcell(acceIt.getTipo()+" "));
        li.appendChild(new Listcell(acceIt.getDias()+" "));
        datos.appendChild(li);
        }

        }
        void cargar(Plan g){
        equi.setPerfil(g);
        }
    </zscript>
    <groupbox mold="3d" >
        <caption label="Agregar Planes" />
	
        <grid width="100%">
            <rows>
                <row>
                    <span style="float:right"> Nombre(*):</span>
                    <textbox id="nombre"  maxlength="100" cols="40" readonly="true"   />
                </row>
                <row>
                    <span style="float:right"> Valor(*):</span>
                    <doublebox id="valor"  maxlength="100" cols="40" readonly="true"   />
                </row>
                <row>
                    <span style="float:right"> Mbps(*):</span>
                    <doublebox id="pvp4"  maxlength="100" cols="40" readonly="true"   />
                </row>
                <row>
                    <span style="float:right"> Nivel de Compartición:(*):</span>
                    <textbox id="nivelcomparticion"  maxlength="100" cols="40" readonly="true"   />
                </row>
                <row>
                    <span style="float:right"> Tipo(*):</span>
                    <!--textbox id="tipo"  maxlength="100" cols="40" readonly="true"   /-->
                    <span>
                        <combobox id="tipo">
                            <comboitem label="HOME" />
                            <comboitem label="RESIDENCIAL" />
                            <comboitem label="BASICO" />
                            <comboitem label="CORPORATIVO" />
                            <comboitem label="PREMIUM" />
                            <comboitem label="CIBERCAFE" />
                        </combobox>

                        <span > No.Dias Plan(*):</span>
                        <intbox id="dias"  maxlength="5" cols="4" readonly="true"   />
                    </span>
                </row>
                <row>
                    <span style="float:right"> Día Aviso(*):</span>
                    <span>
                        <intbox id="fechaaviso" readonly="true"   />
                        Día Vencimiento(*):
                        <intbox id="fechavencimiento" readonly="true"  />
                    </span>
                    
                </row>
                   <row >
                       <span></span>
                       <span>
                        <checkbox id="generarautomatico" label='¿Actualizar el estado de todos los contratos de este plan a "automático"?' />
                        
                        </span>
                     
                    
                </row>
                 
            </rows>
        </grid>
        <vbox>
            <vbox>
                <hbox>
                    <button image="/images/guardar.gif" id="guardar" label="Guardar"  disabled="true"  onClick="guardar();"/>
                    <button  image="/images/nuevo.gif" id="agregar" label="Agregar" onClick="nuevo();" />
                    <button  image="/images/editar.gif" id="modificar"  label="Modificar" disabled="true"  onClick="modificar()"/>
                    <button  image="/images/eliminar.gif" id="eliminar"  label="Eliminar" disabled="true"  onClick="eliminar();"/>
                </hbox>
            </vbox>

        </vbox>

    </groupbox>
    <groupbox width="810px" mold="3d" >

        <caption label="Busquedas" />
        <vbox>
   
            <hbox width="800px">
                <listbox onSelect="move();estado(true,false);eliminar.disabled=false;guardar.disabled=true" id="datos"  rows="10" mold="paging" pageSize="15"   width="100%">
                    <listhead>
                        <listheader label="Código"/>
                        <listheader label="Nombre"/>
                        <listheader label="Valor"/>
                        <listheader label="Tipo"/>
                        <listheader label="No.Días"/>

                    </listhead>
                    <listitem forEach="${allEvents}" value="${each}">
                        <listcell label="${each.codigo}" />
                        <listcell label="${each.nombre}" />
                        <listcell label="${each.valor}" />
                        <listcell label="${each.tipo}" />
                        <listcell label="${each.dias}" />

                    </listitem>
                </listbox>


            </hbox>
        </vbox>
    </groupbox>
	

</window>
