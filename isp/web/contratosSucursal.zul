<?page id="contratospage"?>
<window id="contratosventana"  border="normal" >
    <style>
            .MyGridRowHeight tr.z-row td.z-row-inner  
            {
                  background: white;
                  border-top: none;
                  border-left: 1px solid white;
                  border-right: 1px solid #CCC;
                  //border-bottom: 1px solid #DDD;
                  border-bottom: none;

            }
            /*.MyGridRowHeight tr.z-grid-odd td.z-row-inner, tr.z-grid-odd{
              background: #F8F8F8;
            } */
            .MyGridRowHeight td.z-row-inner
            {
                padding: 0px;
                //overflow: hidden;
            }
    </style>
    <zscript>   <![CDATA[
    
  import bean.EventDAO; 
  import java.util.ArrayList; 
  import jcinform.persistencia.*;
  import jcinform.conexion.*;
  import jcinform.bean.*;
  import java.math.BigDecimal;
  import java.math.RoundingMode;
import java.text.SimpleDateFormat;
  import jcinform.bean.generarFacturas;


  Session ses = Sessions.getCurrent();
  //ses.setAttribute(org.zkoss.web.Attributes.PREFERRED_LOCALE, Locale.ENGLISH);
    Administrador adm = new Administrador();
    static Contratos equi = new Contratos();
    Permisos permiso = new Permisos();
    Empleados usuarioActual = ses.getAttribute("user");
   Empresa empresa = ses.getAttribute("empresa");
    Empleadossucursal sucursalEmp = ses.getAttribute("sector");
      List planes = adm.query("Select o from Plan as o where o.sucursal.codigo = '"+sucursalEmp.getSucursal().getCodigo()+"' ");
      List bancos = adm.query("Select o from Bancos as o  order by o.nombre ");
      generarFacturas gen = new generarFacturas();
List cantonesList = adm.query("Select o from Canton as o ");
    Boolean modificare = false;
    Boolean agregare = false;

//FUNCIONES

void llenarCliente(Clientes cli){
           codigocli.value = cli.getCodigo()+"";
            email.value = cli.getEmail()+"";
            apellidos.value = cli.getApellidos()+" "+cli.getNombres();//cliente
       

}
void llenar(Contratos  equi2){
  
    equi = equi2;

//SETEO LA FORMA DE PAGO
    try{
      if(equi.getFormapago().equals(1)){//SE COBRA EN OFICIONA
            efe.checked = true;
        }else if(equi.getFormapago().equals(2)){//POR DÃ‰BITO BANCARIO
            deb.checked = true;
        }else if(equi.getFormapago().equals(3)){ //COBRA A DOMICIOLIO
            cbr.checked = true;
        } else {
            efe.checked = true;
        } 
     }catch(Exception err){
     System.out.println("error en forma de pago null: "+err);
     efe.checked = true;
     }
    
    registro.setSelected(true);
    try{
     if(equi.getClientes()!=null){
        if(agregare==false)
           llenarCliente(equi.getClientes()); //LLLENAR CLIENTES
      }else{
          Clientes cli = new Clientes(0);
          cli.setEmail("");
          cli.setApellidos(""); 
          cli.setRazonsocial("");
          cli.setNombres("");  
          cli.setDireccion("");
          cli.setTelefono("");
          
        if(agregare==false){
            llenarCliente(cli); //LLLENAR CLIENTES
        }
       }
    }catch(Exception ecliente){
        
    }
    fecha.value = equi.getFecha();
    fechainstalacion.value = equi.getFechainstalacion();
    autorizado.checked = equi.getAutorizado();
    usuario.value = equi.getUsuario();
    ip.value = equi.getIp();
    nocuenta.value = equi.getNocuenta();
    tipocuenta.value  = equi.getTipocuenta();
    direccioni.value = equi.getDireccion();
    direccion.value = equi.getDireccionf();
    referenciai.value = equi.getReferencia();
    descuento.value = equi.getDescuento();
    telefonoi.value = equi.getTelefono();
    try{
        if(equi.getDiapago() == null){
            diapago.value  = "1";
        }else{
            diapago.value  = equi.getDiapago()+"";
        }
    }catch(Exception ex){
         diapago.value  = equi.getDiapago()+"";
    }
    
        
        clave.value = equi.getClave();
       if(equi.getEstado().equals("Activo")){
            eactivo.selected = true;
        }else if(equi.getEstado().equals("Suspendido")){
            esuspendido.selected = true;
        }else if(equi.getEstado().equals("Terminado")){
            eterminado.selected = true;
        } else if(equi.getEstado().equals("Cortado")){
            ecortado.selected = true;
        } 
    if(equi.getEmpleados2() != null){
        codigoemp.value = equi.getEmpleados2().getCodigo()+""; //EMPLEADOS
        combov.value =equi.getEmpleados2().getApellidos()+" "+equi.getEmpleados2().getNombres();//EMPLEADOS
    }else{
        codigoemp.value = "";
        combov.value ="";
    }
    
    numerocontrato.value = equi.getContrato();
       if(equi.getPlan() != null){
             try{
                        for (int i = 0; i <= perf.getItems().size(); i++) {
                                    Plan tr0 = ((Plan)((Listitem)perf.getItems().get(i)).getValue());
                                    int primero = tr0.getCodigo();
                                    int segundo = equi.getPlan().getCodigo();
                                    if(primero == segundo){
                                        perf.setSelectedItem((Listitem)perf.getItems().get(i));
                                        bd.value = equi.getPlan().getNombre()+" ";
                                        break;
                                    }
                           }
                 }catch(Exception err){System.out.println("ERROR no tiene planes asignados COMBO CURSOS: "+err);}


      } else{
               bdRadio.value = "";
                radio.setSelectedItem(null);
    }
 
 if(equi.getSector() != null){   
        try{
                              for (int i = 0; i <= cantones.getItems().size(); i++) {
                                    Canton tr0 = ((Canton)((Listitem)cantones.getItems().get(i)).getValue());
                                    int primero = tr0.getCodigo();
                                    int segundo = equi.getSector().getCanton().getCodigo();
                                    if(primero == segundo){
                                        cantones.setSelectedItem((Listitem)cantones.getItems().get(i));
                                        bdCanton.value = equi.getSector().getCanton().getNombre()+"";
                                        break;
                                    }
                           }
                           buscarSectores(equi.getSector().getCanton().getCodigo());

                            for (int i = 0; i <= sectores.getItems().size(); i++) {
                                            Sector tr0 = ((Sector)((Listitem)sectores.getItems().get(i)).getValue());
                                            int primero = tr0.getCodigo();
                                            int segundo = equi.getSector().getCodigo();
                                            if(primero == segundo){
                                                sectores.setSelectedItem((Listitem)sectores.getItems().get(i));
                                                bdSector.value = equi.getSector().getNombre();
                                                break;
                                            }
                            }
                            if(equi.getRadios() != null){
                                
                            }else{
                                    buscarNodos(equi.getSector().getCanton().getCodigo());
                            }
                            
                             }catch(Exception err){System.out.println("ERROR no tiene Radios asignados COMBO radio "+err);}
                    }       
    if(equi.getRadios() != null){
    try{
                      buscarNodos(equi.getRadios().getNodos().getSector().getCanton().getCodigo());
                    
                    for (int i = 0; i <= nodos.getItems().size(); i++) {
                                    Nodos tr0 = ((Nodos)((Listitem)nodos.getItems().get(i)).getValue());
                                    int primero = tr0.getCodigo();
                                    int segundo = equi.getRadios().getNodos().getCodigo();
                                    if(primero == segundo){
                                        nodos.setSelectedItem((Listitem)nodos.getItems().get(i));
                                        bdNodo.value = equi.getRadios().getNodos().getNombre();
                                        break;
                                    }
                           }
                       
                        buscarRadios(equi.getRadios().getNodos().getCodigo());
        
                      for (int i = 0; i <= radio.getItems().size(); i++) {
                                    Radios tr0 = ((Radios)((Listitem)radio.getItems().get(i)).getValue());
                                    int primero = tr0.getCodigo();
                                    int segundo = equi.getRadios().getCodigo();
                                    if(primero == segundo){
                                        radio.setSelectedItem((Listitem)radio.getItems().get(i));
                                        bdRadio.value = equi.getRadios().getNombre()+" ";
                                        break;
                                    }
                           }
                 }catch(Exception err){System.out.println("ERROR no tiene Radios asignados COMBO radio "+err);}
        
    }else{
       bdRadio.value = "";
        radio.setSelectedItem(null);
    }
    
       if(equi.getBancos() != null){
 
        try{
                      for (int i = 0; i <= bancosList.getItems().size(); i++) {
                                    Bancos tr0 = ((Bancos)((Listitem)bancosList.getItems().get(i)).getValue());
                                    int primero = tr0.getCodigo();
                                    int segundo = equi.getBancos().getCodigo();
                                    if(primero == segundo){
                                        bancosList.setSelectedItem((Listitem)bancosList.getItems().get(i));
                                        bd22.value = equi.getBancos().getNombre()+" ";
                                        break;
                                    }
                           }
                 }catch(Exception err){System.out.println("ERROR no tiene Bancos asignados COMBO bancosList"+err);}
        
    }else{
       bd22.value = "";
        bancosList.setSelectedItem(null);
    }
    try{
        registrado.value = equi.getEmpleados()+"";//REGISTRADOR
        registradoU.value = equi.getEmpleados().getCodigo()+"";//REGISTRADOR
     
     }catch(Exception exa){
     registrado.value = usuarioActual.getApellidos()+" "+usuarioActual.getNombres();
     registradoU.value = usuarioActual.getCodigo()+"";
     }  
     
    
}
void estado(Boolean estado,Boolean modificar){
    
   
 
    fecha.disabled = estado;
     tipocuenta.disabled = estado;
    diapago.disabled = estado;
    direccioni.readonly = estado;
    referenciai.readonly = estado;
     
    ip.readonly = estado;
    clave.readonly = estado;
     direccion.readonly = estado;
     telefono.readonly = estado;
     email.readonly = estado;
     nombres.readonly = estado;
     apellidos.readonly = estado;
     razonsocial.readonly = estado;
      
     
     //combo.readonly = estado;


}
Boolean validar(Textbox text){
        if(text.value == "" || text.value == null){
            text.focus();
            return true;
        }
        return false;
}
Boolean validar(Intbox text){
        if(text.value == "" || text.value == null){
            text.focus();
            return true;
        }
        return false;
}

Boolean validar(Datebox text){
        if(text.value == "" || text.value == null){
            text.focus();
            return true;
        }
        return false;
}
Boolean validar(Combobox text){
        if(text.value == "" || text.value == null){
            text.focus();
            return true;
        }
        return false;
}

Boolean validar(){
        if(validar(identificacion2)   ||  validar(nombres) || validar(apellidos) || validar(direccion)  || validar(telefono)  || 
                    validar(numerocontrato) || validar(fecha) || validar(fechainstalacion)  || 
                  validar(direccioni) ||  validar(telefonoi) || validar(combov) ){
                          //Messagebox.show("Complete todos los campos que estÃ¡n con (*) ...!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
                          return true;
          
          }
            return false; 
}
 void guardar(){

    if(validar(identificacion2) ){
           Messagebox.show("Ingrese la IdentificaciÃ³n del Cliente ...!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
           identificacion2.focus();
            return;
    }
        if(validar(nombres) ){
           Messagebox.show("Ingrese los Nombres del Cliente  ...!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
           nombres.focus();
            return;
    } if(validar(apellidos) ){
           Messagebox.show("Ingrese los Apellidos del Cliente ...!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
           apellidos.focus();
            return;
    }if(validar(direccion) ){
           Messagebox.show("Ingrese la DirecciÃ³n del Cliente ...!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
           direccion.focus();
            return;
    } if(  validar(numerocontrato)){
           Messagebox.show("Ingrese la NÃºmero de Contrato...!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
           numerocontrato.focus();
            return;
    }if( validar(fecha) ){
           Messagebox.show("Ingrese la Fecha...!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
           fecha.focus();
            return;
    }if( validar(fechainstalacion)  ){
           Messagebox.show("Ingrese la Fecha de InstalciÃ³n...!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
           fechainstalacion.focus();
            return;
    }if(validar(direccioni) ){
           Messagebox.show("Ingrese la DirecciÃ³n de InstalaciÃ³n...!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
           direccioni.focus();
            return;
    } if( validar(combov) ){
           Messagebox.show("Ingrese el Vendedor...!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
           combov.focus();
            return;
    } 
    if( bd.value == ""  ){
           Messagebox.show("Seleccione el Plan para poder continuar...!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
            return;
    } 
     if(codigocli.value.equals("0")){
        Clientes empa = new Clientes();
            empa.setIdentificacion(""+identificacion2.value);
            empa.setNombres(nombres.value);
            empa.setApellidos(apellidos.value);
            empa.setRazonsocial(razonsocial.value);
            empa.setDireccion(direccion.value);
            empa.setTelefono(telefono.value);
            empa.setEmail(email.value);
            empa.setSucursal(sucursalEmp.getSucursal());
            adm.guardar(empa);
            codigocli.value = empa.getCodigo()+"";
     }else{
            Clientes empa = new Clientes(new Integer(codigocli.value));
            empa.setIdentificacion(""+identificacion2.value);
            empa.setNombres(nombres.value);
            empa.setApellidos(apellidos.value);
            empa.setRazonsocial(razonsocial.value);
            empa.setDireccion(direccion.value);
            empa.setTelefono(telefono.value);
            empa.setEmail(email.value);
            empa.setSucursal(sucursalEmp.getSucursal());
            adm.actualizar(empa);
            
     }
     equi.setDireccionf(direccion.value);
    equi.setTelefonof(telefono.value);
    equi.setClientes(new Clientes(new Integer(codigocli.value)));
    equi.setFecha(fecha.value);
    equi.setFechainstalacion(fechainstalacion.value);
    equi.setAutorizado(autorizado.isChecked());
    equi.setUsuario(usuario.value);
    equi.setIp(ip.value);
    equi.setClave(clave.value);
    equi.setContrato(numerocontrato.value);
    equi.setEstado(estadoContrato.selectedItem.value);
    equi.setSucursal(sucursalEmp.getSucursal());
    equi.setDireccion(direccioni.value);
    equi.setReferencia(referenciai.value);
    equi.setTelefono(telefonoi.value);
    equi.setEmpleados2(new Empleados((new Integer(codigoemp.value))));
    
    
     if(equi.getContrato()==null){
            Integer valor = adm.getNuevaClave("Contratos","contrato");
            equi.setContrato(valor);
    }
    
    equi.setDireccion(direccioni.value);
    equi.setReferencia(referenciai.value);
    equi.setDescuento(descuento.value);
    equi.setTelefono(telefonoi.value);
    equi.setFormapago(new Integer(formapago.selectedItem.value)); //integer
    equi.setNocuenta(nocuenta.value); //varchar
    equi.setTipocuenta(tipocuenta.value); //varchar 
    equi.setDiapago(new Integer(diapago.value));//integer
  
   
    
   
    try{
        equi.setPlan(perf.getSelectedItem().getValue());
        }catch(Exception e){
    }
    try{
        equi.setRadios(radio.getSelectedItem().getValue());
    }catch(Exception e){
    }
    
    try{
        equi.setSector(sectores.getSelectedItem().getValue());
    }catch(Exception e){
    }
    
    try{
        equi.setBancos(bancosList.getSelectedItem().getValue());
    }catch(Exception e){
    }
    
        if((!equi.getCodigo().equals(0)) ){
            equi.setEmpleados(new Empleados(new Integer(registradoU.value)));//REGISTRADOR
             adm.actualizar(equi);
                permiso.auditar("Contratos","Actualizar",""+equi.getContrato()+" - "+equi.getClientes());
         }else{
          //EN CASO DE Q VAYA A ACTUALIAR
             if(validarContrato(numerocontrato.value)){
                    Messagebox.show("NÃºmero de contrato ya existe ...!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR); 
                    numerocontrato.value = null;
                    numerocontrato.focus();
                    return;
             }
                equi.setEmpleados(usuarioActual);//REGISTRADOR
                equi.setCodigo(adm.getNuevaClave("Contratos","codigo"));
                adm.guardar(equi);
                permiso.auditar("Contratos","Guardar",""+equi.getContrato()+" - "+equi.getClientes());
         }
             
          Messagebox.show("Contrato Registrado con Ã‰xito...!", "Administrador Educativo", Messagebox.OK, Messagebox.INFORMATION);
                    guardar.disabled=true;
                    agregar.disabled=false;
                     estado(true,false);
                    sumar();
                     
}

 Boolean verificar(String accion){
        return permiso.verificarPermiso("Contratos",accion);
 }
 Boolean verificar2(String accion){
        return permiso.verificarPermiso("Descuentos",accion);
 }
 Boolean verificar3(String accion){
        return permiso.verificarPermiso("RealizarCobros",accion);
 }
 
  Boolean verificar4(String accion){
        return permiso.verificarPermiso("Soporte",accion);
 }
 void nuevo(){
      
     telefono.value ="";
     direccion.value ="";
    if(verificar("Agregar")){
       guardar.disabled=false;
       agregare = false;
      if(planes.size()<=0){
        Messagebox.show("No se han creado planes, cierre esta pantalla e ingresse nuevos Planes  ...!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
         return;
      }
      /*if(bancos.size()<=0){
        Messagebox.show("No se han creado Bancos, cierre esta pantalla e ingrese nuevos Bancos  ...!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
         return;
      }
    if(radios.size()<=0){
        Messagebox.show("No se han creado Radios, cierre esta pantalla e ingrese nuevos Radios  ...!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
         return;
      } */
       
        llenar(new Contratos(0));
        estado(false,false);
        eliminar.disabled = true;
         
        identificacion2.focus();
     bd22.disabled=true; tipocuenta.disabled= true;nocuenta.disabled = true; diapago.disabled = true;
    }else{
            Messagebox.show("No tiene permisos para realizar esta acciÃ³n..._!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
    }
}
  public Double redondear(Double numero, int decimales) {
        try {
            BigDecimal d = new BigDecimal(numero);
            d = d.setScale(decimales, RoundingMode.HALF_UP);
            return d.doubleValue();
        } catch (Exception e) {
            return 0.0;
        }
    }
 void nuevo2(){
   
    if(verificar("Agregar")){
       guardar.disabled=false;
       agregare = true;
       if(planes.size()<=0){
            Messagebox.show("No se han creado planes, cierre esta pantalla e ingresse nuevos Planes  ...!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
            return;
        }
   
       
        llenar(new Contratos(0));
        eliminar.disabled = true;
        estado(false,false);
        efe.selected = true;
        efe.checked = true;
         
     bd22.disabled=true; tipocuenta.disabled= true;nocuenta.disabled = true; diapago.disabled = true;
    }else{
            //Messagebox.show("No tiene permisos para realizar esta acciÃ³n...,!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
    }
}
 void move(){
        llenar((Contratos)datos.selectedItem.value);
        modificar.disabled = false;
  }
void modificar(){
  if(verificar("Modificar")){
       guardar.disabled=false; 
       estado(false,true);
    }else{
            Messagebox.show("No tiene permisos para realizar esta acciÃ³n...!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
    }
}
 
 
llenarCliente(Clientes clienteEn){
    //identificacion.value = clienteEn.getIdentificacion();
     identificacion2.value = clienteEn.getIdentificacion();
     codigocli.value = clienteEn.getCodigo()+"";
     email.value  = clienteEn.getEmail();
     String espacio = "";
     if(!clienteEn.getApellidos().trim().equals("")){
          espacio = " ";
     }
     apellidos.value = clienteEn.getApellidos();
     nombres.value = clienteEn.getNombres() ;
     razonsocial.value = clienteEn.getRazonsocial();
     

}

void buscarCedula(String valor){
 
      if(valor.length()>6){
         List empleados = adm.query("Select o from Clientes as o  " + 
            " where o.identificacion like '"+valor+"%' and o.sucursal.codigo = '"+sucursalEmp.getSucursal().getCodigo()+"' ");
            if(empleados.size()>0){
 
            
                Clientes cli =(empleados.get(0));
                codigocli.value = cli.getCodigo()+"";
                email.value = cli.getEmail()+"";
                apellidos.value = cli.getApellidos();//cliente
                razonsocial.value = cli.getRazonsocial();//cliente
                nombres.value = cli.getNombres();
 
            } 

        }else{
                if(valor.contains("999")){
                    List empleados = adm.query("Select o from Clientes as o where o.identificacion like '"+valor+"%'   and o.sucursal.codigo = '"+sucursalEmp.getSucursal().getCodigo()+"' ");
                     if(empleados.size()>0){
                        for(Iterator it = empleados.iterator(); it.hasNext();) {
                              Clientes object = (Clientes)it.next();
                              empa = object;

                         }
                        llenarCliente(empa);
                         numerocontrato.focus();
                    }
                }
        
        }
 
    }
    
void verificarCedula(String valor){
      if(valor.length()>6){
                  List empleados = adm.query("Select o from Clientes as o  " + 
            " where o.identificacion like '"+valor+"%' and o.sucursal.codigo = '"+sucursalEmp.getSucursal().getCodigo()+"' ");
      if(empleados.size()>0){
                for(Iterator it = empleados.iterator(); it.hasNext();) {
                      Clientes object = (Clientes)it.next();
                      empa = object;
                 }
                 llenarCliente(empa);
                  contratosCliente = new Listbox();
                   int a=0;
                   nuevo2();
                   estado(true,false);
            for (Iterator it = contratosCliente.getItems().iterator(); it.hasNext();) {
                   contratosCliente.getItems().remove(a);
                }
                List  contratosEncontrados = adm.query("Select o from Contratos as o where o.clientes.codigo = '"+empa.getCodigo()+"'   ");
                        if(contratosEncontrados.size()>0){
                        
                                 if(contratosEncontrados.size() > 1){
                                          contratosPanel.visible = true; 
                                          llenarCliente(empa);
                                          numerocontrato.focus();
                                          anadir.disabled = true;
                                 }else{
                                          contratosPanel.visible = false; 
                                          llenarCliente(empa);
                                          llenar(contratosEncontrados.get(0));
                                          direccion.value = contratosEncontrados.get(0).getDireccionf();
                                          telefono.value = contratosEncontrados.get(0).getTelefonof();
                                          eliminar.disabled = false;
                                          numerocontrato.focus();
                                          modificar.disabled = false;
                                          anadir.disabled = false;
                                 }
                                
                                
                                for (Iterator it = contratosEncontrados.iterator(); it.hasNext();) {
                                      Contratos  acceIt = (Contratos) it.next();
                                      Listitem li = new Listitem();
                                      li.setValue(acceIt);
                                      Listcell contratoCelda = new Listcell(acceIt.getContrato()+"");
                                      Listcell planCelda = new Listcell(acceIt.getPlan().getNombre()+" "+acceIt.getPlan().getTipo()+" "+acceIt.getPlan().getValor());
                                      Listcell fechaCelda = new Listcell(acceIt.getFecha().toLocaleString().substring(0,11)+"");
                                      Listcell estadoCelda = new Listcell(acceIt.getEstado()+"");
                                      String estilo = "background:#00E673";
                                      if(acceIt.getEstado().contains("Activo")){
                                        estilo = "background:#00E673";
                                      }
                                      if(acceIt.getEstado().contains("Suspendido")){
                                        estilo  = "background:#FFFF6F";
                                      }
                                      if(acceIt.getEstado().contains("Terminado")){
                                        estilo = "background:#FF7575";   
                                      }
                                      contratoCelda.setStyle(estilo);
                                      planCelda.setStyle(estilo);
                                      fechaCelda.setStyle(estilo);
                                      estadoCelda.setStyle(estilo);
                                      li.appendChild(contratoCelda);
                                      li.appendChild(planCelda);
                                      li.appendChild(fechaCelda);
                                      li.appendChild(estadoCelda);
                                        contratosCliente.appendChild(li);
                             }
                           }
                           
                  
                                
                             
              
            }else{
                  System.out.println("NO TIENE CONTRATOS ASIGNADOS");
           }

        }else{
                if(valor.contains("999")){
                    List empleados = adm.query("Select o from Clientes as o where o.identificacion like '"+valor+"%'   and o.sucursal.codigo = '"+sucursalEmp.getSucursal().getCodigo()+"' ");
                     if(empleados.size()>0){
                        for(Iterator it = empleados.iterator(); it.hasNext();) {
                              Clientes object = (Clientes)it.next();
                              empa = object;

                         }
                        llenarCliente(empa);
                         numerocontrato.focus();
                    }
                }
        
        }
 
    }
    
    
    
    void verificarContrato(Integer valor){
                      nuevo2();
                   estado(true,false);
                   String q = "Select o from Contratos as o " + 
                        " where o.contrato = '"+valor+"'  "  + 
                        " and o.sucursal.codigo = '"+sucursalEmp.getSucursal().getCodigo()+"' ";
                   List  ControlequiposEncontrados = adm.query(q);
                   if(ControlequiposEncontrados.size()>0){
                              contratosPanel.visible = false; 
                              llenarCliente(ControlequiposEncontrados.get(0).getClientes());
                              llenar(ControlequiposEncontrados.get(0));
                              direccion.value = ControlequiposEncontrados.get(0).getDireccionf();
                              telefono.value = ControlequiposEncontrados.get(0).getTelefonof();
                              numerocontrato.focus();
                              modificar.disabled = false;
                              anadir.disabled = false;
                  }else{
                        Messagebox.show("No. de Contrato no Existente ...!", "Administrador Educativo", Messagebox.OK, Messagebox.EXCLAMATION);
                  }
  }
    boolean validarContrato(Integer valor){

      if(numerocontrato.getValue() !=null ){
        if(numerocontrato.getValue().equals(0)){
            return false;
       }
      } 

            if(valor!=null){
                   String q = "Select o from Contratos as o " + 
                        " where o.contrato = '"+valor+"'  "  + 
                        " and o.sucursal.codigo = '"+sucursalEmp.getSucursal().getCodigo()+"' ";
                   List  ControlequiposEncontrados = adm.query(q);
                   if(ControlequiposEncontrados.size()>0){
                        numerocontrato.value= null;
                        Messagebox.show("No. de Contrato ya Existe  ...!", "Administrador Educativo", Messagebox.OK, Messagebox.EXCLAMATION);       
                        numerocontrato.focus();
                        return true;
                  }else{
                        return false;
                  }
                  
            }else{
                return false;
            }
            
  }
    
    
     
 
      
     nuevos(Soporte sop){
                
                     if(verificar4("Agregar")){
                                          codigos.value = sop.getCodigo();
                                    try{

                                        atendida.value = sop.getEmpleados().getCodigo();
                                        atendidanombre.value = sop.getEmpleados().getApellidos()+" "+sop.getEmpleados().getNombres();
                                    }catch(Exception e){
                                        atendida.value =  usuarioActual.getCodigo();
                                        atendidanombre.value = usuarioActual.getApellidos()+" "+usuarioActual.getNombres();
                                    }

                                        fechasoporte.value = sop.getFecha();
                                    if(sop.getFecha() == null)
                                        fechasoporte.value = adm.Date();
                                    observacion.value = sop.getObservacion();
                                    generar.checked  = sop.getGenerada();
                                    noorden.value = sop.getNoorden();        
                        }else{
                                Messagebox.show("No tiene permisos para realizar esta acciÃ³n...!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
                        }  

              }
              
              
          habilitar(Boolean estado){
                         if(verificar4("Modificar")){
                            fechasoporte.readonly = estado;
                            observacion.readonly = estado;
                            generar.disabled  = estado;
                          }else{
                                Messagebox.show("No tiene permisos para realizar esta acciÃ³n...!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
                        }     
                            
                            
            }
                        
                void guardars(){
 
                                Soporte sop = new Soporte();
                                sop.setCodigo(codigos.value);
                                sop.setEmpleados(new Empleados(atendida.value));
                                sop.setFecha(fechasoporte.value);
                                sop.setObservacion(observacion.value);
                                sop.setGenerada(generar.checked);
                                sop.setClientes(new Clientes(new Integer(codigocli.value)));
                                sop.setNoorden(noorden.value);

                                if(sop.getGenerada() && sop.getNoorden() == null){ 
                                    Integer valor = adm.getNuevaClave("Soporte","noorden");
                                    sop.setNoorden(valor);
                                }
                                if((!sop.getCodigo().equals(0)) ){
                                     sop.setEmpleados(new Empleados(usuarioActual.getCodigo()));//REGISTRADOR
                                     adm.actualizar(sop);
                                        permiso.auditar("Soporte","Actualizar",""+sop.getCodigo()+" - "+sop.getClientes());
                                 }else{
                                        sop.setEmpleados(new Empleados(usuarioActual.getCodigo()));//REGISTRADOR
                                        sop.setCodigo(adm.getNuevaClave("Soporte","codigo"));
                                        adm.guardar(sop);
                                        permiso.auditar("Soporte","Actualizar",""+sop.getCodigo()+" - "+sop.getClientes());
                                 }
                                        Messagebox.show("Registro Almacenado con Ã‰xito...!", "Administrador Educativo", Messagebox.OK, Messagebox.INFORMATION);
                             
                                       
                                              if(sop.getGenerada()){  //GENERAR ORDEN DE COMPRA
                                         
                                                   Map parameters = new HashMap();
                                                   System.out.println("00000");
                                             
                                                    parameters.put("ruc", empresa.getRuc());
                                                    System.out.println("0000-1");
                                                    parameters.put("empresa", empresa.getRazonsocial());
                                                    System.out.println("00001");
                                                    parameters.put("direccion", empresa.getDireccion());
                                                    parameters.put("observacion", observacion.value);
                                                    parameters.put("telefono", empresa.getTelefono());
                                                    parameters.put("cliente", combo.value);
                                                    parameters.put("noorden", sop.getNoorden());
                                                    System.out.println("00002");
                                                    parameters.put("telefono1", telefonoi.value);
                                                    parameters.put("direccion1", direccioni.value);
                                                    System.out.println("00003");
                                                    reportelocal.setSrc("/jcinform/bean/reportes/jrxml/orden.jasper");
                                                    reportelocal.setParameters(parameters);
                                                    reportelocal.setDatasource(null);
                                                    reportelocal.setType("pdf");
                                                     System.out.println("000041");
                                                    final Window win = (Window) Executions.createComponents("reporteVisualizar.zul", null, null);
                                                    win.setMaximizable(true);
                                                    win.setClosable(true);
                                                    win.setAttribute("reporte",reportelocal);
                                                    win.setTitle("Reporte");
                                                    win.doModal();
                                              }
                                            guardars.disabled=true;
                                            agregars.disabled=false;
                                            nuevos(new Soporte(0));
                                            habilitar(true);
                                            buscarSoportes();
                                      
                  
                    }
                     
                    
                      void buscarSoportes(){
                    try{
                            List ControlequiposEncontrados = adm.query("Select o from Soporte  as o where o.clientes.codigo = '"+codigocli.value+"' order by o.fecha desc ");
                        
                        soporte = new Listbox();
                        int a=0;
                            for (Iterator it =soporte.getItems().iterator(); it.hasNext();) {
                                    soporte.getItems().remove(a);
                                }


                               for (Iterator it = ControlequiposEncontrados.iterator(); it.hasNext();) {
                                      Soporte  acceIt = (Soporte) it.next();
                                      Listitem li = new Listitem();
                                      li.setValue(acceIt);
                                      li.appendChild(new Listcell(acceIt.getFecha().toLocaleString()+""));
                                      li.appendChild(new Listcell(acceIt.getObservacion()+""));
                                      li.appendChild(new Listcell((acceIt.getGenerada()==true?"SI":"NO")));
                                      li.appendChild(new Listcell(acceIt.getEmpleados().getApellidos()+" "+acceIt.getEmpleados().getNombres()));
                                      soporte.appendChild(li);
                             }

                    }catch(Exception e){
                            Messagebox.show("Seleccione primero un CLIENTE  ...!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
                            registro.setSelected(true);
                        }
                 }
                 

  void facturasPendientes(){
                try{
                List facEncontradas =  adm.queryNativo("SELECT fa.codigo, fa.fecha, fa.total,  (SUM(cx.debe) - SUM(cx.haber)) saldo,fa.contratos FROM cxcobrar cx, factura  fa "   +
                        " WHERE fa.clientes  =  "+codigocli.value+"  " + 
                        "  AND cx.factura = fa.codigo GROUP BY fa.codigo   HAVING  (SUM(cx.debe) - SUM(cx.haber)) > 0 order by fa.contratos, fa.fecha "); 
                
                facturasDatos.getRows().getChildren().clear();
  ArrayList contratosAnadidos = new ArrayList();
  int i =0;
                for (Iterator itna = facEncontradas.iterator(); itna.hasNext();) {
                            Vector vec = (Vector) itna.next();
                          
                              Contratos con = adm.buscarClave(vec.get(4), Contratos.class);
                              Group grupo = new Group(con.getPlan()+"");
                              grupo.setId("grup"+con.getCodigo()+"");
                             // grupo.setStyle("background-color:#FFDDAA");
                              
                              if(contratosAnadidos.size() == 0){
                                    grupo.setParent(filasFac);
                                    contratosAnadidos.add(con.getCodigo()+"");
                                    
                              }else{
                                      if(!contratosAnadidos.contains(con.getCodigo()+"")){
                                               grupo.setParent(filasFac);
                                      }
                                        contratosAnadidos.add(con.getCodigo()+"");
                              }
                              
                              
                            Row row = new Row();
                                   if(row == null){
                                    row = new Row();
                                   }
                            for (int j = 0; j < vec.size(); j++) {
                                Object dos = vec.get(j);
                                if(row == null){
                                    row = new Row();
                                   }
                                    if(dos instanceof Integer){
                                       row.setValue(dos);
                                        row.appendChild(new Label(dos+""));
                                    }else if(dos instanceof Date){
                                     SimpleDateFormat d1 = new SimpleDateFormat("dd-MMMM-yyyy");
                                     Date d = (Date)dos;
                                      row.appendChild(new Label(d1.format(d)+""));
                                    }else{
                                        row.appendChild(new Label(dos+""));
                                    }
                            }
                            Span s = new Span();
                            Button aButton = null;
                            aButton = new Button("Cobrar");//"Cobrar"
                            aButton.setImage("/images/dinero.gif");
                            aButton.setId(""+vec.get(0));
                            aButton.setAttribute("valor",vec.get(3));
                            aButton.setTooltip(cobr);
                            aButton.addEventListener("onClick", new EventListener() {
                             public void onEvent(Event event) throws Exception {
                               if(verificar3("Ingresar")){
                                        registro.setSelected(true);
                                        final Window win = (Window) Executions.createComponents("facturarCliente2.zul", null, null);
                                        win.setMaximizable(true);
                                        win.setClosable(true);
                                        win.setAttribute("codigoFactura", aButton.getId());
                                        win.setAttribute("valoraPagar", aButton.getAttribute("valor"));
                                        win.setTitle("Facturar Clientes");
                                        win.doModal();
                                 }else{
                                            Messagebox.show("No tiene permisos para realizar esta acciÃ³n...!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
                                    }  
                               
                              }
                                });
                                s.appendChild(aButton);
                              //row.appendChild(aButton);
                              row.appendChild(s);
                            filasFac.appendChild(row);
                }
            
                   }catch(Exception e){
                            Messagebox.show("Seleccione primero un CLIENTE  ...! \n"+e, "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
                            System.out.println("ERROR: "+e);
                            registro.setSelected(true);
                        }
                
 }
 
     void facturasPagadas(){
                try{
                List facEncontradas =  adm.queryNativo("SELECT cx.codigo, fa.numero, fa.fecha, " + 
                    "  fa.total, cx.fecha, cx.debe, cx.haber,IF(cx.haber < fa.total && cx.haber >0,'ABONO',IF(cx.haber = fa.total,'PAGADO','')),cx.fechadeposito  " + 
                    " ,fa.codigo,'cero', concat('abc',cx.empleados) FROM cxcobrar cx, factura  fa  "   +
                    "   WHERE fa.clientes  =  "+codigocli.value+"  " + 
                    "  AND cx.factura = fa.codigo and cx.haber > 0 GROUP BY cx.codigo " + 
                    " order by fa.codigo desc, fa.fecha desc, cx.fecha "); 
                
                facturasPag.getRows().getChildren().clear();
                  int i =0;
                  //11 ES EL CODIGO DEL EMPLEADO
                  //10 ES EL CERO DEL DESCUENTO
                  ArrayList facturasAnadidos = new ArrayList();
                for (Iterator itna = facEncontradas.iterator(); itna.hasNext();) {
                            Vector vec = (Vector) itna.next();
                                SimpleDateFormat d1 = new SimpleDateFormat("dd-MMM-yyyy");
                                Date d = (Date)vec.get(2);
                             String cabe = vec.get(0)+"";
                               Group grupo = new Group(" MES: "+d1.format(d));
                               if(i == 0){
                                    grupo.setParent(filasPag);
                                    facturasAnadidos.add(cabe+"");
                              }else{
                                if(!facturasAnadidos.contains(cabe+"")){
                                      grupo.setParent(filasPag);
                                      facturasAnadidos.add(cabe+"");
                                  }
                              }
                              i++;
                            Row row = new Row();
                                   if(row == null){
                                    row = new Row();
                                   }
                                   Boolean mostrarEliminar = false;
                            for (int j = 0; j < vec.size(); j++) {
                                Object dos = vec.get(j);
                                if(row == null){
                                    row = new Row();
                                   }
                                    if(dos instanceof Integer){
                                       row.setValue(dos);
                                        //row.appendChild(new Label(dos+""));
                                    }else if(dos instanceof Date){
                                         SimpleDateFormat d1 = new SimpleDateFormat("dd-MMM-yyyy");
                                         Date d = (Date)dos;
                                          row.appendChild(new Label(d1.format(d)+""));
                                    }else if(dos instanceof java.math.BigDecimal){
                                           java.math.BigDecimal val = (java.math.BigDecimal)dos;
                                            if(val.doubleValue()<=0){
                                                row.appendChild(new Label(""));
                                            }else{
                                                row.appendChild(new Label(val+""));
                                            }
                                    }else if(dos instanceof String){
                                           String val = dos+"";
                                            if(val.length()>9){
                                                row.appendChild(new Label(val.substring(6)+""));
                                            }else if(val.equals("ABONO") ||val.equals("PAGADO") ){
                                                Label la = new Label(val+"");
                                                la.setStyle("color:blue; font-weight:bold");
                                                row.appendChild(la);
                                                mostrarEliminar = true;
                                            }else{
                                                if(j==11){
                                                  Empleados empleadoA = adm.buscarClave(new Integer(val.replace("abc","")), Empleados.class);
                                                    row.appendChild(new Label(empleadoA+""));
                                                }else if(j==10){
                                                    try{
                                                        List descA = adm.query("Select o from Descuentos as o where " + 
                                                            "  o.factura.codigo = '"+row.getValue()+"' ");
                                                            row.appendChild(new Label(((Descuentos)descA.get(0)).getValor()+""));
                                                    }catch(Exception er){
                                                                row.appendChild(new Label("0.0"));
                                                    }
                                                
                                                }else{
                                                  row.appendChild(new Label(""));
                                                 }
                                            }
                                    }else{
                                        if(dos!=null){
                                            row.appendChild(new Label(dos+""));
                                        }else{
                                            row.appendChild(new Label(""));
                                       }
                                    }
                            }
                                Button aButtonEli = null;
                            aButtonEli = new Button("Eliminar");//"Eliminar"
                            aButtonEli.setImage("/images/eliminar.gif");
                            aButtonEli.setId("elip"+vec.get(0));
                            aButtonEli.setVisible(mostrarEliminar);
                            aButtonEli.addEventListener("onClick", new EventListener() {
                             public void onEvent(Event event) throws Exception {
                                 if(verificar2("Eliminar")){
                                 registro.setSelected(true);
                                 int valor0 = Messagebox.show("Seguro que desea Eliminar este elemento, Desea Continuar?", "JCINFORM-Seguridad", Messagebox.YES | Messagebox.NO, Messagebox.QUESTION);
                                  seriespanel.visible = false;
                                   
                                   if(valor0 == 16){
                                      Integer facCodi = new Integer(aButtonEli.getId().replace("elip",""));
                                      Cxcobrar cobro = adm.buscarClave(facCodi, Cxcobrar.class);
                                      /* List siEx = adm.query("Select o from Cxcobrar as o where o.factura.codigo = '"+cobro.getFactura().getCodigo()+"'");
                                      if(siEx.size()>1){
                                                 Messagebox.show("No se puede eliminar, ya tiene pagos realizados...!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);                                      
                                      }else{
                                      */
                                              
                                              Factura mifac = cobro.getFactura();
                                              observacionanula.value = "";
                                              continuar.checked = false;
                                              if(mifac.getNumero() != null && !mifac.getNumero().isEmpty()){
                                                      continuar.checked = false;
                                                      final Window win = (Window) Executions.createComponents("anularFactura.zul", null, null);
                                                        win.setMaximizable(true);
                                                        win.setClosable(true);
                                                        win.setTitle("ObservaciÃ³n de ElimaciÃ³n del Pago");
                                                        win.doModal();
                                                       
                                                      if(continuar.isChecked()){
                                                        
                                                        adm.eliminarObjeto(Cxcobrar.class, facCodi );
                                                        //mifac.setNumero(null);
                                                        //adm.actualizar(mifac);
                                                      }else{
                                                            historial.setSelected(true);
                                                          return;
                                                      }
                                                      historial.setSelected(true);
                                               }else{
                                                    final Window win = (Window) Executions.createComponents("anularFactura.zul", null, null);
                                                    win.setMaximizable(true);
                                                    win.setClosable(true);
                                                    win.setTitle("ObservaciÃ³n de Anular Cobro");
                                                    win.doModal();
                                                    /*
                                                      Facturaanulada facAnulada = new Facturaanulada();
                                                      facAnulada.setFactura(null);
                                                      facAnulada.setEmpleados(usuarioActual);
                                                      facAnulada.setFecha(adm.Date());
                                                      facAnulada.setNumero(null);
                                                      facAnulada.setObservacion(observacionanula.value);
                                                      facAnulada.setValorpago(cobro.getHaber());
                                                      facAnulada.setNopago(cobro.getCodigo()); */
                                                    //if(continuar.isChecked()){
                                                        //adm.guardar(facAnulada);
                                                        adm.eliminarObjeto(Cxcobrar.class, facCodi );
                                                    //}
                                          
                                                     historial.setSelected(true);
                                               }
                                       
                                      
                                      //}
                                      
                                      
                                    }
                                     
                                    historial.setSelected(true);  
                                      
                                }else{
                                        Messagebox.show("No tiene permisos para realizar esta acciÃ³n...!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
                                }                      

                              
                               
                              }
                                });
                            //row.appendChild(aButtonEli);
                            
                            Button bDeta = null;
                            bDeta = new Button("Detalles");//"Detalles"
                            bDeta.setImage("/images/control.png");
                            bDeta.setId(vec.get(0)+"c"+vec.get(9));
                            System.out.println(vec.get(0)+"c"+vec.get(9)+"***********************************************");
                            bDeta.setVisible(mostrarEliminar);
                            bDeta.addEventListener("onClick", new EventListener() {
                             public void onEvent(Event event) throws Exception {
                             Integer facCodi = null;
                                try{
                                  
                                //System.out.println(""+);
                                 facCodi = new Integer(bDeta.getId().substring(bDeta.getId().indexOf("c")+1, bDeta.getId().length()));
//                                 alert(""+facCodi);
                                 }catch(Exception e){
                                    System.out.println("error en conversion a integer:"+e);
                                 }
                                   final Window win = (Window) Executions.createComponents("detallesFactura.zul", null, null);
                                    win.setMaximizable(true);
                                    win.setClosable(true);
                                    win.setAttribute("codigoFactura", facCodi);
                                    win.setTitle("Detalle de Factura");
                                    win.doModal();
                               
                              }
                                });
                            row.appendChild(bDeta);
    
                            filasPag.appendChild(row);
                }
            
                   }catch(Exception e){
                            Messagebox.show("Seleccione primero un CLIENTE  ...! \n"+e, "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
                            System.out.println("ERROR: "+e);
                            registro.setSelected(true);
                        }
                
 }
                
                
        //BUSQUEDA DE CLIENTES
  void buscarCli(String p){
        List ClientesEncontrados = adm.query("Select o from Clientes as o "+ 
        " where o.apellidos like '"+p+"%'  and o.sucursal.codigo = '"+sucursalEmp.getSucursal().getCodigo()+"' " + 
        " order by o.apellidos",0,10);
        lcliente = new Listbox();
        int a=0;
            for (Iterator it = lcliente.getItems().iterator(); it.hasNext();) {
                    lcliente.getItems().remove(a);
                }


               for (Iterator it = ClientesEncontrados.iterator(); it.hasNext();) {
                      Clientes acceIt = (Clientes) it.next();
                      Listitem li = new Listitem();
                      li.setValue(acceIt);
                      li.appendChild(new Listcell(acceIt.getApellidos()+" "+acceIt.getNombres()));
                      li.appendChild(new Listcell(acceIt.getDireccion()+""));
                      lcliente.appendChild(li);
             }
             if(ClientesEncontrados.size()>0){
                    bcliente.visible = true;
             }
             
    }
      void buscarCliCed(String p){
      if(p.length() > 3){
        List ClientesEncontrados = adm.query("Select o from Clientes as o " + 
        " where o.identificacion like '"+p+"%' and o.sucursal.codigo = '"+sucursalEmp.getSucursal().getCodigo()+"' order by o.identificacion");
        lclienteced = new Listbox();
        int a=0;
            for (Iterator it = lclienteced.getItems().iterator(); it.hasNext();) {
                    lclienteced.getItems().remove(a);
                }


               for (Iterator it = ClientesEncontrados.iterator(); it.hasNext();) {
                      Clientes acceIt = (Clientes) it.next();
                      Listitem li = new Listitem();
                      li.setValue(acceIt);
                      li.appendChild(new Listcell(acceIt.getIdentificacion()+""));
                      li.appendChild(new Listcell(acceIt.getApellidos()+" "+acceIt.getNombres()));
                      
                      lclienteced.appendChild(li);
             }
             if(ClientesEncontrados.size()>0){
                    bclientei.visible = true;
             }
        }
    }
       
                                     public void quitarFila(String codigoBuscar){
                               
                                    }
 
    public void sumar(){
        }
    
   
void llamar(){  
          String object = (String)InputMessageBox.showQuestion("NÃºmero de Factura", "Ingreso");
        System.out.println("RESULT: " + object);
}
   void buscarSectores(Integer codigo){
          bdSector.value = "";
        List NodosEncontrados = adm.query("Select o from Sector as o  " + 
        " where o.canton.codigo = '"+codigo+"' and o.sucursal.codigo = '"+sucursalEmp.getSucursal().getCodigo()+"' order by o.nombre");
        sectores = new Listbox();
        int a=0;
            for (Iterator it = sectores.getItems().iterator(); it.hasNext();) {
                    sectores.getItems().remove(a);
                }


               for (Iterator it = NodosEncontrados.iterator(); it.hasNext();) {
                      Sector acceIt = (Sector) it.next();
                      Listitem li = new Listitem();
                      li.setValue(acceIt);
                      li.appendChild(new Listcell(acceIt.getNombre()+" "));
                      sectores.appendChild(li);
             }

    }
    
      void buscarNodos(Integer codigo){
          bdNodo.value = "";
        List NodosEncontrados = adm.query("Select o from Nodos as o " + 
        " where o.sector.canton.codigo = '"+codigo+"' and o.sector.sucursal.codigo = '"+sucursalEmp.getSucursal().getCodigo() +"'  order by o.nombre");
        nodos = new Listbox();
        int a=0;
            for (Iterator it = nodos.getItems().iterator(); it.hasNext();) {
                    nodos.getItems().remove(a);
                }


               for (Iterator it = NodosEncontrados.iterator(); it.hasNext();) {
                      Nodos acceIt = (Nodos) it.next();
                      Listitem li = new Listitem();
                      li.setValue(acceIt);
                      li.appendChild(new Listcell(acceIt.getNombre()+" "));
                      nodos.appendChild(li);
             }

    }
    void buscarRadios(Integer codigo){
          bdRadio.value = "";
        List NodosEncontrados = adm.query("Select o from Radios as o where o.nodos.codigo = '"+codigo+"'  order by o.nombre");
        nodos = new Listbox();
        int a=0;
            for (Iterator it = radio.getItems().iterator(); it.hasNext();) {
                    radio.getItems().remove(a);
                }


               for (Iterator it = NodosEncontrados.iterator(); it.hasNext();) {
                      Radios acceIt = (Radios) it.next();
                      Listitem li = new Listitem();
                      li.setValue(acceIt);
                      li.appendChild(new Listcell(acceIt.getNombre()+" "));
                      radio.appendChild(li);
             }

    }
    void eliminar(){
            if((equi.getCodigo().equals(0)) ){
                    Messagebox.show("El presente contrato aÃºn no ha sido guardado...!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);                                      
                    permiso.auditar("Contratos","Actualizar",""+equi.getContrato()+" - "+equi.getClientes());
                    return;
             } 
           
        int valor0 = Messagebox.show("Seguro que desea Eliminar este Contrato, Desea Continuar?", "JCINFORM-Seguridad", Messagebox.YES | Messagebox.NO, Messagebox.QUESTION);
           if(valor0 == 16){
                try{
                        adm.eliminarObjeto(Contratos.class, equi.getCodigo());
                        llenar(new Contratos(0));
                }catch(Exception ax){
                        Messagebox.show("No se puede eliminar, ya tiene pagos realizados, o facturas Emitidas...!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);                                      
                }
            }
    }
  ]]>
    </zscript>
    <div>
        <!--button label="MOSTRAR" id="mensaje"  onClick="llamar()" /-->
         <popup id="cobr" width="150px">
            <vbox>
			Cobrar la deuda seleccionada
            </vbox>
        </popup>
       
        <tabbox width="100%"  height="600px" orient="vertical"  >
            <tabs  width="150px">
                <tab id="registro" label="Contratos"/>
                <tab onSelect="facturasPendientes()" label="Pendientes" id="facturas"/>
                
                <tab onSelect="buscarSoportes()" label="Hist. TÃ©cnica" />
                <tab onSelect="facturasPagadas()" label="Hist. Pagos" id="historial" />
                
               
            </tabs>
            <tabpanels>
                <tabpanel>
                    <button image="/images/guardar.gif" id="guardar" label="Guardar"  disabled="true"  onClick="guardar();"/>
                    <button  image="/images/editar.gif" id="modificar"  label="Modificar" disabled="true"  onClick="modificar()"/>
  
                    <groupbox id="panel" mold="3d" width="830px">
                        <panel id="equiposcontrol"  width="100%" >
                            <panelchildren>
                               
                                <grid  sclass="MyGridRowHeight" width="100%">
                                    <rows>
                                        <row spans="2">
                            
                                        </row>
                                        <row spans="4">
                                            <groupbox id="busqueda" style="background:#D6E3F6" mold="3d" width="100%">
                                                <span>
                                                                
                                                    <label style="font-weight:bold2" value="." />
                                                </span>
                                                <span>
                                                    <textbox id="identificacion"  visible="false" readonly="false"   onChanging="buscarCliCed(event.value); "  cols="13"   onOK="verificarCedula(self.value); bclientei.visible = false;"  />
                                                     
                                                     
                                                    <groupbox closable="true" style="position: absolute;background:#E2EDFE;" visible="false" id="bclientei">
                                                        <vbox>
                                                            <hbox>
                                                                <listbox onSelect='combo.value = ""; direccion.value = ((Clientes)self.selectedItem.value).getCodigo()+"";identificacion.value = ((Clientes)self.selectedItem.value).getIdentificacion()+""; identificacion2.value = ((Clientes)self.selectedItem.value).getIdentificacion()+"";  telefono.value = ((Clientes)self.selectedItem.value).getTelefono()+""; email.value = ((Clientes)self.selectedItem.value).getEmail()+"";codigocli.value = ((Clientes)self.selectedItem.value).getCodigo()+""; razonsocial.value = ((Clientes)self.selectedItem.value).getRazonsocial(); apellidos.value = ((Clientes)self.selectedItem.value).getApellidos(); nombres.value = ((Clientes)self.selectedItem.value).getNombres();  bclientei.visible =false; verificarCedula(identificacion.value);' id="lclienteced" width="400px">
                                                                    <listhead>
                                                                        <listheader label="Nombres"/>
                                                                        <listheader label="DirecciÃ³n"/>
                                                                    </listhead>
                                                                    <listitem forEach="${allEvents}" value="${each}">
                                                                        <listcell label="${each.apellidos}" />
                                                                        <listcell label="${each.direccion}" />
                                                                    </listitem>
                                                                </listbox>
                                                            </hbox>
                                                            <button label="CERRAR" onClick="bclientei.visible = false;"/>
                                                        </vbox>
                                                                
                                                    </groupbox>
                                    
                                                            
                                                </span>
                                                  
                                                <span>
                                                    <label style="font-weight:bold2" id="labelnombre" value="Apellidos: " />
                                                </span>
                                                <span>
                                                    <combobox  cols="35" id="combo" onSelect="verificarCedula(((Clientes)self.selectedItem.value).getIdentificacion())" autodrop="true" buttonVisible="false"  use="jcinform.bean.autoCompletarClientesSector"/>

                                                    <image  tooltip="autompletar2" popup="autompletar2"  src="/images/keyboard.png"  />
                                                    <popup id="autompletar2" width="300px">
                                                        <html>
                                                                            Ingrese un Apellido del Cliente Ejemplo: AGUIRRE y seleccione uno de los del listado de bÃºsqueda, si es que existe.
                                                        </html>
                                                    </popup>
 
                                                    <label style="font-weight:bold2" visible="false" id="labelcontrato" value="No.Contrato" />
                                                    <intbox visible ="false" readonly="false" cols="5"   onOK ="verificarContrato(self.value)"   id="buscarContrato" />
                                                    <!--image  tooltip="autompletarNo" popup="autompletarNo"  src="/images/keyboard.png"  /-->
                                                    <popup id="autompletarNo" width="300px">
                                                        <html>
                                                                            Digite el No de Contrato y Presione Enter
                                                        </html>
                                                    </popup>
                               
                    
                       
                      
                                                </span>
                                                   
	    			 
                                            </groupbox>
                                        </row>
                                        <row>
                                            <span  style="float:right" >IdentificaciÃ³n(*):</span>
                                            <span>
                                                <textbox id="identificacion2" onBlur="buscarCedula(self.value)" readonly="true"   cols="13" />
                                                <textbox id="codigocli" style="background:white;border:0px;font-size:10px" cols="1" disabled="true" />
                                                            <!--button label="Nuevo Cliente" image="/images/clientes.png" onClick='identificacion.value= ""; direccion.value = "";  identificacion2.value = ""; telefono.value = ""; email.value ="";codigocli.value = "0"; combo.value = ""; apellidos.value = ""; nombres.value = ""; bcliente.visible =false; identificacion.readonly = false; direccion.readonly = false;  identificacion2.readonly = false; telefono.readonly = false; email.readonly = false;codigocli.value = "0"; apellidos.readonly = false; nombres.readonly = false;'/-->
                                            </span>
                                                        
                                            <span  style="float:right" >RazÃ³n Social:</span>
                                            <span> 
                                                <textbox readonly="true" cols="25"  id="razonsocial" />
                                            </span>
                                        </row>
                                        <row>
                                            <span style="float:right">
                                                <label style="font-weight:bold2" id="labelnombre2" value="Apellidos(*): " />
                                            </span>
                                            <span>
                                                <textbox readonly="true" cols="25"  id="apellidos" />
                                            </span>
                                            <span style="float:right">
                                                <label style="font-weight:bold2" id="labelnombre332" value="Nombres(*): " />
                                            </span>
                                            <span>
                                                <textbox readonly="true" cols="25"  id="nombres" />
                                            </span>
                                                      
                                        </row>
                                                    
                                        <row>
                                            <span style="float:right">
                                                <label style="font-weight:bold2" value=" TelÃ©fono Fac.(*):" />
                                            </span>
                                            <textbox id="telefono" cols="32" readonly="true"  />
                                            <span style="float:right">
                                                <label style="font-weight:bold2" value=" Email: " />
                                            </span>
                                            <textbox id="email" cols="32" readonly="true"  />
                                        </row>
                                        <row>
                                            <span style="float:right">
                                                <label style="font-weight:bold2" value=" DirecciÃ³n Fac.(*): " />
                                            </span>
                                            <textbox id="direccion" cols="32"  rows="2" readonly="true"  />    
                                            <span></span>
                                            <span></span>
                                        </row>
                    
                                        <row>
                                                         
                                            <span style="float:right">
                                                <label style="font-weight:bold2" value=" Estado: " />
                                            </span>
                                                                
                                            <radiogroup id="estadoContrato" >
                                                <radio disabled="true" id="eactivo" selected="true" value="Activo" label="Activo" style="font-weight:bold2" />
                                                <radio disabled="true"  id="ecortado"  value="Cortado"  label="Cortado" style="font-weight:bold2" />
                                                <radio disabled="true"  id="esuspendido"  value="Suspendido"  label="Suspendido" style="font-weight:bold2" />
                                                <radio  disabled="true"  id="eterminado" value="Terminado"  label="Terminado" style="font-weight:bold2" />
                                            </radiogroup>
                                            <span style="float:right">
                                                <label visible="false" style="font-weight:bold2" value=" Fecha: " />
                                                <datebox id="fecha" visible="false" disabled="true" onCreate="self.value = adm.Date()"/>
                                                <label style="font-weight:bold2" value=" InstalaciÃ³n (*): " />
                                            </span>
                                            <datebox id="fechainstalacion" disabled="true"  onCreate="self.value = adm.Date()"/>
                                            
                                        </row>
                                        <row>
                                            <span style="float:right">
                                                <label style="font-weight:bold2" value=" No.Contrato: " />
                                            </span>
                                            <span>
                                                <intbox style="color:red;font-size:16px;text-align:center"  readonly="true" id="numerocontrato" cols="16" />
                                                <button label="Contratos"  image="/images/contratos.png"  id="vercontratos" onClick="contratosPanel.visible = true; "/>
                                            </span>
                                            <span style="float:right">
                                                <label style="font-weight:bold2" value=" Planes (*): " />
                                            </span>
                                            <bandbox style="background-color:transparent" disabled="true" readonly="true" width="240px"  id="bd">
                                                <bandpopup>
                                                    <vbox>
                                                        <listbox id="perf" width="450px" onSelect="bd.value=self.selectedItem.label;bd.closeDropdown();">
                                                            <listhead>
                                                                <listheader label="DescripciÃ³n"/>
                                                                <listheader label="Tipo"/>
                                                                <listheader label="valor"/>
                                            
                                                            </listhead>
                                                            <listitem forEach="${planes}" value="${each}">
                                                                <listcell label="${each.nombre}" />
                                                                <listcell label="${each.tipo}" />
                                                                <listcell label="${each.valor}" />

                                                            </listitem>
                                                        </listbox>
                                                    </vbox>
                                                </bandpopup>
                                            </bandbox>
                                        </row>
                                     
                                        <row>
                                            <span style="float:right">
                                                <label style="font-weight:bold2" value=" Dir.Instalar: " />
                                            </span>
                                            <span>
                                                <textbox id="direccioni" cols="40" readonly="true"  />
                                                <button image="/images/copiar.png"   onClick="direccioni.value=direccion.value;"/>
                                            </span>
                                            <span style="float:right">
                                                <label style="font-weight:bold2" value=" Telf.Instalar: " />
                                            </span>
                                            <span>
                                                <textbox id="telefonoi" readonly="true"  />
                                                <button  image="/images/copiar.png"   onClick="telefonoi.value=telefono.value;"/>
                                            </span>
                                        </row>
                                        <row>
                                            <span style="float:right">
                                                <label style="font-weight:bold2" value=" Referencia: " />
                                                              
                                            </span>
                                            <textbox id="referenciai" rows="2" cols="40" readonly="true"  />
                                            <span style="float:right"> Descuento </span>
                                            <span > 
                                                <decimalbox id="descuento" readonly="true" format="#0.00" cols="4" />$   
                                            </span>
                                        </row>
                                                   
                                                           
                                        <row>
                                            <span style="float:right"> Canton(*):</span>
                                            <bandbox  width="200px"  disabled="true"   id="bdCanton">
                                                <bandpopup>
                                                    <vbox>
                                                        <listbox id="cantones" width="250px" rows="10"
                                                           onSelect="bdCanton.value=self.selectedItem.label;bdCanton.closeDropdown(); buscarSectores(((Canton)self.selectedItem.value).getCodigo()); buscarNodos(((Canton)self.selectedItem.value).getCodigo());">
                                                            <listitem   forEach="${cantonesList}" value="${each}">
                                                                <listcell label="${each.nombre}" />
                                                            </listitem>
                                                        </listbox>
                                                    </vbox>
                                                </bandpopup>
                                            </bandbox>
                                            <span style="float:right"> Nodos(*):</span>
                                                           
                                            <bandbox  width="200px"  disabled="true"  readonly="true"  id="bdNodo">
                                                <bandpopup>
                                                    <vbox>
                                                        <listbox id="nodos" width="250px" rows="10"
                                                                        onSelect="bdNodo.value=self.selectedItem.label;bdNodo.closeDropdown(); buscarRadios(((Nodos)self.selectedItem.value).getCodigo());">

                                                        </listbox>
                                                    </vbox>
                                                </bandpopup>
                                            </bandbox>
                                        </row>
                                        <row>
                                            <span style="float:right"> Sector(*):</span>
                                            <bandbox  width="200px" disabled="true" readonly="true"  id="bdSector">
                                                <bandpopup>
                                                    <vbox>
                                                        <listbox id="sectores" width="250px" rows="10"
                                                                  onSelect="bdSector.value=self.selectedItem.label;bdSector.closeDropdown();">
                                    
                                                        </listbox>
                                                    </vbox>
                                                </bandpopup>
                                            </bandbox>
                                                        
                                                    
                                                        
                                                     
                                            <span style="float:right">
                                                <label style="font-weight:bold2" value="Radio(*): " />
                                            </span>
                                            <bandbox  disabled="true"  readonly="true"  id="bdRadio">
                                                <bandpopup>
                                                    <vbox>
                                                        <listbox id="radio" width="450px"
                                                     onSelect="bdRadio.value=self.selectedItem.label;bdRadio.closeDropdown();">
                                                            <listhead>
                                                                <listheader label="Nombre"/>
                                                                <listheader label="Sector"/>
                                                                <listheader label="Radio"/>
                                                                <listheader label="Ip"/>
                                            
                                                            </listhead>
                                                            <listitem forEach="${radios}" value="${each}">
                                                                <listcell label="${each.nombre}" />
                                                                <listcell label="${each.nodos.sector}" />
                                                                <listcell label="${each.nodos.nombre}" />
                                                                <listcell label="${each.ip}" />
                                                            </listitem>
                                                        </listbox>
                                                    </vbox>
                                                </bandpopup>
                                            </bandbox>
                                                      
                                                       
                                                       
                                        </row>
                                        <row visible="false">
                                            <span style="float:right">   IP(*):</span>
                                            <textbox cols="15" readonly="true" id="ip" />
                                            <span style="float:right"> Autorizado a Inst(*):</span>
                                            <checkbox id="autorizado" disabled="true"  />
                                                           
                                        </row>
                                        <row>
                                            <span style="float:right">
                                                <label style="font-weight:bold2" value=" Vendido por(*): " />
                                                <textbox id="codigoemp"  style="background:white;border:0px;font-size:8px" disabled="true" cols="2" />
                                            </span>
                                            <span>
                                                <textbox  readonly="true"  cols="32"   id="combov" />

                                                <button label=""  id="buscarE" disabled="true" image="/images/auditoria.gif">
                                                    <attribute name="onClick">{
                                                            final Window win = (Window) Executions.createComponents("buscarEmpleados.zul", null, null);
                                                            win.setMaximizable(true);
                                                            win.setClosable(true);
                                                            win.setAttribute("nuevo", true);
                                                            win.setTitle("Buscar Empleados");
                                                            win.doModal();
                                                        }                            
                                                    </attribute>
                                                </button>

                                            </span>
                                            <span style="float:right">   Usuario:</span>
                                            <span style="float:right">   
                                                <textbox cols="15" readonly="true"   id="usuario" />
                                                    Clave:
                                                <textbox cols="15" readonly="true"   id="clave" />
                                            </span>
                                        </row>
                                        <row spans="4">
                                            <groupbox style="background:#FFE7D7" mold="3d" width="100%">
                                                
                                            
                                                <span>
                                                    <label style="font-weight:bold2" value=" Paga(*): " />
                                                </span>
                                                <radiogroup Id="formapago" onCheck="">
                                                    <radio disabled="true" id="efe" selected="true" value="1" onCheck="bd22.disabled=true; tipocuenta.disabled= true;nocuenta.disabled = true; diapago.disabled = true;" label="Oficina"/>
                                                    <radio disabled="true" id="cbr" value="3" onCheck="bd22.disabled=true; tipocuenta.disabled= true;nocuenta.disabled = true; diapago.disabled = true;" label="Domicilio"/>
                                                    <radio disabled="true" id="deb"   value="2" onCheck="bd22.disabled=false;tipocuenta.disabled= false;nocuenta.disabled = false;diapago.disabled = false;  " label="DÃ©bito"/>
                                                </radiogroup>
                                                <span>
                                                    <label style="font-weight:bold2" value="Banco:" />
                                                </span>
                                                <bandbox disabled="true" readonly="true" width="100px"  id="bd22">
                                                    <bandpopup>
                                                        <vbox>
                                                            <listbox  id="bancosList" width="250px"
                                                                    onSelect="bd22.value=self.selectedItem.label;bd22.closeDropdown();">
                                                                <listhead>
                                                                    <listheader label="Seleccione un Banco"/>
                                                                </listhead>
                                                                <listitem forEach="${bancos}" value="${each}">
                                                                    <listcell label="${each.nombre}" />

                                                                </listitem>
                                                            </listbox>
                                                        </vbox>
                                                    </bandpopup>
                                                </bandbox>
                                                <span>
                                                    <label style="font-weight:bold2" value="No.Cuen: " />
                                                </span>
                                                <span>
                                                    <textbox id="nocuenta" cols="10"  readonly="true"  />
                                                    <combobox   style="background-color:transparent" disabled="true" width="29px" id="tipocuenta">
                                                        <comboitem label="AHO"/>
                                                        <comboitem label="COR"/>
                                                    </combobox>
                                                </span>
                                                <span>
                                                    <label style="font-weight:bold2" value="DÃ­a Pago(*): " />
                                                </span>
                                                <combobox disabled="true" width="17px"  id="diapago">
                                                    <comboitem label="1"/>
                                                    <comboitem label="2"/>
                                                    <comboitem label="3"/>
                                                    <comboitem label="4"/>
                                                    <comboitem label="5"/>
                                                    <comboitem label="6"/>
                                                    <comboitem label="7"/>
                                                    <comboitem label="8"/>
                                                    <comboitem label="9"/>
                                                    <comboitem label="10"/>
                                                    <comboitem label="11"/>
                                                    <comboitem label="12"/>
                                                    <comboitem label="13"/>
                                                    <comboitem label="14"/>
                                                    <comboitem label="15"/>
                                                    <comboitem label="16"/>
                                                    <comboitem label="17"/>
                                                    <comboitem label="18"/>
                                                    <comboitem label="19"/>
                                                    <comboitem label="20"/>
                                                    <comboitem label="23"/>
                                                    <comboitem label="22"/>
                                                    <comboitem label="25"/>
                                                    <comboitem label="24"/>
                                                    <comboitem label="27"/>
                                                    <comboitem label="26"/>
                                                    <comboitem label="29"/>
                                                    <comboitem label="28"/>
                                                    <comboitem label="30"/>
                                                </combobox>
                                            </groupbox> 
                                        </row>
                                        
                    
                                        <row visible="false">
                                            <span style="float:right">
                                                <label style="font-weight:bold2" value=" Registrado por(*): " />
                                            </span>
                                            <span>
                                                <textbox id="registrado" readonly="true" cols="32"   value="${sessionScope.sector.empleados.apellidos} ${sessionScope.sector.empleados.nombres}" />
                                                <textbox id="registradoU"  style="background:white;border:0px;font-size:8px" disabled="true" cols="2" />
                                            </span>
                                            <span></span>
                                            <span></span>
                                        </row>
                                      
                                    </rows>
                                </grid>
                                                        
                          
                            </panelchildren>
                        </panel>
                       
                   		
	    		
                    </groupbox>
                  
                </tabpanel>
                <tabpanel>
 
                    <grid height="350px"  sclass="MyGridRowHeight"  fixedLayout="true"  id="facturasDatos" >
                        <columns>
                            <column  label="No."/>
                            <column  label="Fecha Pago"/>
                            <column   label="Total"/>
                            <column   label="Saldo"/>
                            <column   label="Ref."/>
                            <column  width="150px"  label="Acciones"/>
                        </columns>
                        <rows id="filasFac">
                        </rows>
                    </grid>
                </tabpanel>
                <tabpanel>
             
                    <grid>
                        <rows>
                            <row visible = "false">
                                <intbox id="codigos" readonly="true" />
                                <intbox id="atendida" readonly="true" />
                            </row>
                            <row>
                                <span style="float:right">Atendido por:  </span>
                                <textbox id="atendidanombre" cols="50" readonly="true" />
                            </row>
                            <row>
                                <span style="float:right">Fecha:  </span>
                                <datebox readonly="true" onCreate="self.value = adm.Date()" id="fechasoporte"/>
                            </row>
                            <row>
                                <span style="float:right"> ObservaciÃ³n: </span>
                                <textbox readonly="true" cols="60" rows="3" id="observacion"/>
                            </row>
                            <row>
                                <span style="float:right"> Generar Orden: </span>
                                <checkbox id="generar" disabled="true"   />
                            </row>
                            <row>
                                <span style="float:right"> No. Orden: </span>
                                <intbox id="noorden" readonly="true"   />
                            </row>
                        </rows>
                    </grid>
                    <button image="/images/guardar.gif" id="guardars" label="Guardar"  disabled="true"  onClick="guardars();modificars.disabled = true;"/>
                    <button  image="/images/nuevo.gif" id="agregars" label="Agregar" onClick="nuevos(new Soporte(0)); habilitar(false); observacion.focus();guardars.disabled = false;modificars.disabled = true" />
                    <button  image="/images/editar.gif" id="modificars"  label="Modificar" disabled="true"  onClick="habilitar(false); observacion.focus();guardars.disabled = false;"/>
                    <listbox mold="paging" rows="10" pageSize="10"  onSelect="nuevos(soporte.selectedItem.value);modificars.disabled = false" id="soporte" width="100%">
                        <listhead>
                            <listheader label="Fecha"/>
                            <listheader label="ObservaciÃ³n"/>
                            <listheader label="Orden Generada"/>
                            <listheader label="Atendida"/>
                        </listhead>
                        <listitem forEach="${allEvents}" value="${each}">
                            <listcell label="${each.fecha}" />
                            <listcell label="${each.observacion}" />
                            <listcell label="${each.generada}" />
                            <listcell label="${each.empleados}" />
                        </listitem>
                    </listbox>
                </tabpanel>
                <tabpanel>
                    <grid height="350px"  sclass="MyGridRowHeight"  fixedLayout="true"  id="facturasPag" >
                        <columns>
                            <column  sort="auto"  label="No."/>
                            <column  label="EmisiÃ³n"/>
                            <column   label="Total"/>
                            <column sort="auto"  label="Fec.Pago"/>
                            <column   label="Debe"/>
                            <column   label="Haber"/>
                            <column   label="ObservaciÃ³n"/>
                            <column   label="Fec.Depo"/>
                            <column   label="Dscto."/>
                            <column   label="Usuario"/>
                            <column   label="AcciÃ³n"/>
                        </columns>
                        <rows id="filasPag">
                            
                        </rows>
                    </grid>
                    <textbox id="observacionanula" />
                    <checkbox id="continuar" />
                </tabpanel>
                <tabpanel>
                    <panel height="470px" style="margin-bottom:10px"
                           title="Reporte" border="normal">
                        <panelchildren>
                            <jasperreport id="reportelocal" />
                        </panelchildren>
                    </panel>
                
                </tabpanel>
            </tabpanels>
            
            
        </tabbox>
        <panel framable="true" visible="false" id="contratosPanel" title="CONTRATOS CON Ã‰STE CLIENTE" style="position:absolute; top:5%; left:5%" width="600px">
            <panelchildren>
                <listbox mold="paging" rows="10" pageSize="10" onSelect="llenar(self.selectedItem.value); contratosPanel.visible = false;modificar.disabled = false;anadir.disabled = false;  eliminar.disabled = false;" id="contratosCliente" width="100%">
                    <listhead>
                        <listheader label="Contra."/>
                        <listheader label="Plan"/>
                        <listheader label="Fecha"/>
                        <listheader label="Estado"/>
                    </listhead>
                    <listitem forEach="${allEvents}" value="${each}">
                        <listcell label="${each.fecha}" />
                    </listitem>
                </listbox>
                <button label="CERRAR" onClick="contratosPanel.visible = false"/>
            </panelchildren>
        </panel>
    </div>
</window>
