<?xml version="1.0" encoding="UTF-8"?>


<zk  xmlns="http://www.zkoss.org/2005/zul">
    <script type="text/javascript" src="/js/jquery-1.4.4.min.js"/>
    <script type="text/javascript" src="/js/jquery.maskedinput-1.2.2.min.js"/>
    <script type="text/javascript" src="/js/masks.js"/>
    <script type="text/javascript" src="/js/jquery-ui-1.8.9.custom.min.js" />
 
    <window>

        <zscript>
            <![CDATA[
  import jcinform.persistencia.*;
  import jcinform.conexion.*;
  import jcinform.bean.*;
  import java.util.ArrayList;
  import org.zkoss.image.AImage;
  import org.zkoss.image.Image;
    Administrador adm = new Administrador();
    List allEvents = adm.query("Select o from Nodos as o where o.nombre = 0");
    static Nodos empa = new Nodos();
    Permisos permiso = new Permisos();
    List perfiles = adm.query("Select o from Sector as o  ");
    Object media = null;

//FUNCIONES
void cargarFoto(byte[] imageData){
  foto0.setContent(new org.zkoss.image.AImage("fotito", imageData));
}
void cargarVacio(){
  foto0.setContent(new org.zkoss.image.AImage("t", desktop.webApp.getResourceAsStream("/fotos/vacio.gif")));
}

//FUNCIONES
void llenar(Nodos empa){
    codigo.value = empa.getCodigo();
    nombre.value = empa.getNombre();
    ip.value = empa.getIp();
    usuario.value = empa.getUsuario();
    clave.value = permiso.decriptar(empa.getClave());
    ssid.value = empa.getSsid();
    seguridad.value = empa.getSeguridad();
    
    



 
                if(empa.getSector()!=null){
                  for (int i = 0; i <= perf.getItems().size(); i++) {
                            Sector tr0 = ((Sector)((Listitem)perf.getItems().get(i)).getValue());
                            int primero = tr0.getCodigo();
                            int segundo = empa.getSector().getCodigo();
                            if(primero == segundo){
                                perf.setSelectedItem((Listitem)perf.getItems().get(i));
                                bd.value = empa.getSector()+"";
                                break;
                            }
                   }


                    
                }

}
void estado(Boolean estado,Boolean modificar){
        if(modificar){
            empa = (Nodos)datos.selectedItem.value;
        }

    nombre.readonly = estado;
    ip.readonly = estado;
    ssid.readonly = estado;
    seguridad.readonly = estado;
    usuario.readonly = estado;
    clave.readonly = estado;
    perf.disabled = estado;
    bd.disabled = estado;

}


 void guardar(){


 if(nombre.value =="" || ip.value == "" || ssid.value == "" || perf.selectedItem == null){
    Messagebox.show("Registre los campos con (*) para continuar...!", "Administrador Educativo", Messagebox.OK, Messagebox.EXCLAMATION);
    return;
 }
        empa.setCodigo(codigo.value);
        empa.setNombre(nombre.value);
        empa.setIp(ip.value);
        empa.setSsid(ssid.value);
        empa.setSeguridad(seguridad.value);
        empa.setSector(perf.selectedItem.value);
       empa.setUsuario(usuario.value);
        empa.setClave(permiso.encriptar(clave.value));
 

        if((!empa.getCodigo().equals(0)) ){
             adm.actualizar(empa);
         }else{
             adm.guardar(empa);
         }
              Boolean a = true;
            if(a){
                Messagebox.show("Registro Almacenado con Éxito...!", "Administrador Educativo", Messagebox.OK, Messagebox.INFORMATION);
                permiso.auditar("Nodos","Guardar",""+ip.value+" "+nombre.value);
                    guardar.disabled=true;
                    agregar.disabled=false;
                    estado(true,false);
                    llenar(new Nodos(0));
                    
            }else{
                Messagebox.show("No se pudo almacenar...X", "Administrador Educativo", Messagebox.OK, Messagebox.EXCLAMATION);
            }

    }

   Boolean verificar(String accion){
        return permiso.verificarPermiso("Nodos",accion);

    }
 void nuevo(){
    if(verificar("Agregar")){
          
          guardar.disabled=false; llenar(new Nodos(0));estado(false,false);
          //String command = "applyTelefono('"+seguridad.getUuid()+"');";
          //Clients.evalJavaScript(command);
    }else{
            Messagebox.show("No tiene permisos para realizar esta acción...!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
    }
}
 void move(){
        llenar((Nodos)datos.selectedItem.value);
        modificar.disabled = false;
        //registro.setSelected(true);
  }
void modificar(){
  if(verificar("Modificar")){
       guardar.disabled=false; estado(false,true);
    }else{
            Messagebox.show("No tiene permisos para realizar esta acción...!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
    }
}
void eliminar(){
  if(verificar("Eliminar")){
        try{
             empa = (Nodos)datos.selectedItem.value;
             adm.eliminarObjeto(Nodos.class, empa.getCodigo());
             permiso.auditar("Nodos","Eliminar",""+ip.value+" "+nombre.value);
            datos.removeItemAt(datos.getSelectedIndex());
            llenar(new Nodos(0));
                Messagebox.show("Registro Eliminado con Éxito...!", "Administrador Educativo", Messagebox.OK, Messagebox.INFORMATION);
        }catch(Exception e){
            Messagebox.show("No se pudo eliminar el Registro...!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
        }
}else{
            Messagebox.show("No tiene permisos para realizar esta acción...!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
    }
}
 
  void buscar(String p){
        List NodosEncontrados = adm.query("Select o from Nodos as o where o.ip like '%"+p+"%' order by o.ip");
        datos = new Listbox();
        int a=0;
            for (Iterator it = datos.getItems().iterator(); it.hasNext();) {
                    datos.getItems().remove(a);
                }


               for (Iterator it = NodosEncontrados.iterator(); it.hasNext();) {
                      Nodos acceIt = (Nodos) it.next();
                      Listitem li = new Listitem();
                      li.setValue(acceIt);
                      li.appendChild(new Listcell(acceIt.getCodigo()+""));
                      li.appendChild(new Listcell(acceIt.getIp()+" "+acceIt.getNombre()));
                      li.appendChild(new Listcell(acceIt.getSsid()+""));
                      datos.appendChild(li);
             }

    }
void cargar(Sector g){
empa.setSector(g);
}
]]>
        </zscript>
      

                    <grid width="100%">
                        <rows>
                            <row>
                                <span>
                                    <intbox id="codigo" disabled="true" style="background:transparent;border:0px;color:grey;font-size:5px"   cols="2" readonly="true" />
                                </span>
                                <span></span>
                            </row>

                            <row>
                                <span style="float:right"> Nombre(*):</span>
                                <textbox id="nombre"  maxlength="60" cols="40" readonly="true"   />
                                
                            </row>
                            <row>
                                <span style="float:right"> Ip:</span>
                                <textbox id="ip"  maxlength="60" cols="40" readonly="true"  />
                              
                            </row>
                            <row>
                                <span style="float:right"> SSID:</span>
                                <textbox id="ssid" maxlength="100" cols="40"  readonly="true"    />
                                 
                            </row>
                            <row>
                                <span style="float:right"> Seguridad:</span>
                                <textbox id="seguridad"   readonly="true"   >
                                       
                                </textbox>
                                 
                            </row>
                            <row>
                                <span style="float:right"> Usuario:</span>
                                <textbox id="usuario" maxlength="30" cols="15" readonly="true"  />
                            </row>
                            <row>
                                <span style="float:right"> Clave:</span>
                                <textbox id="clave" type="password" maxlength="30" cols="15" readonly="true"  />
                            </row>
                            <row>
                                <span style="float:right"> Sector(*):</span>
                                <bandbox  readonly="true"  id="bd">
                                    <bandpopup>
                                        <vbox>
                                            <listbox id="perf" width="250px"
                                                     onSelect="bd.value=self.selectedItem.label;cargar(((Sector)self.selectedItem.value));bd.closeDropdown();">
                                                <listhead>
                                                    <listheader label="Description"/>
                                                </listhead>
                                                <listitem forEach="${perfiles}" value="${each}">
                                                    <listcell label="${each.nombre}" />

                                                </listitem>
                                            </listbox>
                                        </vbox>
                                    </bandpopup>
                                </bandbox>

                            </row>

                      
                        </rows>
                    </grid>

                    <vbox>
                        <hbox>
                            <button image="/images/guardar.gif" id="guardar" label="Guardar"  disabled="true"  onClick="guardar();"/>
                            <button  image="/images/nuevo.gif" id="agregar" label="Agregar" onClick="nuevo();" />
                            <button  image="/images/editar.gif" id="modificar"  label="Modificar" disabled="true"  onClick="modificar()"/>
                            <button  image="/images/eliminar.gif" id="eliminar"  label="Eliminar" disabled="true"  onClick="eliminar();"/>
                        </hbox>
                    </vbox>


    

                    <groupbox  width="100%" mold="3d" >

                        <caption label="Busquedas" />
                        <vbox>
                            <hbox>  Ip:
                                <textbox id="buscarText"  maxlength="60" cols="40" />
                                <button id="buscar"  label="Buscar" onClick="buscar(buscarText.getValue());"/>
                            </hbox>
                            <hbox>
                                <listbox mold="paging" rows="10" pageSize="10"  onSelect="move();estado(true,false);eliminar.disabled=false;guardar.disabled=true" id="datos" width="100%">
                                    <listhead>
                                        <listheader label="Cod."/>
                                        <listheader label="Nombre"/>
                                        <listheader label="Dirección"/>

                                    </listhead>
                                    <listitem forEach="${allEvents}" value="${each}">
                                        <listcell label="${each.codigo}" />
                                        <listcell label="${each.ip}" />
                                        <listcell label="${each.ssid}" />
                                    </listitem>
                                </listbox>


                            </hbox>
                        </vbox>
                    </groupbox>


 

    </window>
</zk>