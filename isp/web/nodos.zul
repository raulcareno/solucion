<?xml version="1.0" encoding="UTF-8"?>


<zk  xmlns="http://www.zkoss.org/2005/zul">
    <script type="text/javascript" src="/js/jquery-1.4.4.min.js"/>
    <script type="text/javascript" src="/js/jquery.maskedinput-1.2.2.min.js"/>
    <script type="text/javascript" src="/js/masks.js"/>
    <script type="text/javascript" src="/js/jquery-ui-1.8.9.custom.min.js" />
 
    <window>

        <zscript>
            <![CDATA[
  import jcinform.persistencia.*;
  import jcinform.conexion.*;
  import jcinform.bean.*;
  import java.util.ArrayList;
  import org.zkoss.image.AImage;
  import org.zkoss.image.Image;
    Administrador adm = new Administrador();
    Session ses = Sessions.getCurrent();
    Empleadossucursal sucursalEmp = ses.getAttribute("sector");
    List allEvents = adm.query("Select o from Nodos as o where o.nombre = 0");
    static Nodos empa = new Nodos();
    Permisos permiso = new Permisos();
    List perfiles = adm.query("Select o from Sector as o where o.codigo = -1  ");
    List cantones = adm.query("Select o from Canton as o  ");
    Object media = null;

//FUNCIONES
void cargarFoto(byte[] imageData){
  foto0.setContent(new org.zkoss.image.AImage("fotito", imageData));
}
void cargarVacio(){
  foto0.setContent(new org.zkoss.image.AImage("t", desktop.webApp.getResourceAsStream("/fotos/vacio.gif")));
}

//FUNCIONES
void llenar(Nodos empa){
    codigo.value = empa.getCodigo();
    nombre.value = empa.getNombre();
    direccion.value = empa.getDireccion();
    torre.value = empa.getTorre();
    observaciones.value = empa.getObservaciones();

                if(empa.getSector()!=null){
                          //buscarSectores(empa.getCanton().getCodigo());
                          
                          for (int i = 0; i <= cant.getItems().size(); i++) {
                                    Canton tr0 = ((Canton)((Listitem)cant.getItems().get(i)).getValue());
                                    int primero = tr0.getCodigo();
                                    int segundo = empa.getSector().getCanton().getCodigo();
                                    if(primero == segundo){
                                        cant.setSelectedItem((Listitem)cant.getItems().get(i));
                                        bdCanton.value = empa.getSector().getCanton().getNombre()+"";
                                        break;
                                    }
                           }
                          
                               buscarSectores(empa.getSector().getCanton().getCodigo());
                          for (int i = 0; i <= perf.getItems().size(); i++) {
                                    Sector tr0 = ((Sector)((Listitem)perf.getItems().get(i)).getValue());
                                    int primero = tr0.getCodigo();
                                    int segundo = empa.getSector().getCodigo();
                                    if(primero == segundo){
                                        perf.setSelectedItem((Listitem)perf.getItems().get(i));
                                        bd.value = empa.getSector()+"";
                                        break;
                                    }
                           }

                        
                    
                }

}
void estado(Boolean estado,Boolean modificar){
        if(modificar){
            empa = (Nodos)datos.selectedItem.value;
        }

    nombre.readonly = estado;
        direccion.readonly = estado;
    torre.readonly = estado;
    observaciones.readonly = estado;
    
    perf.disabled = estado;
    cant.disabled = estado;
    bd.disabled = estado;
    bdCanton.disabled = estado;
    

}


 void guardar(){
         if(nombre.value =="" || direccion.value == "" || perf.selectedItem == null){
            Messagebox.show("Registre los campos con (*) para continuar...!", "Administrador Educativo", Messagebox.OK, Messagebox.EXCLAMATION);
            return;
         }
        empa.setCodigo(codigo.value);
        empa.setNombre(nombre.value);
        empa.setDireccion(direccion.value);
        empa.setTorre(torre.value);
        empa.setObservaciones(observaciones.value);
        empa.setSector(perf.selectedItem.value);
        
 

        if((!empa.getCodigo().equals(0)) ){
             adm.actualizar(empa);
         }else{
             adm.guardar(empa);
         }
              Boolean a = true;
            if(a){
                Messagebox.show("Registro Almacenado con Éxito...!", "Administrador Educativo", Messagebox.OK, Messagebox.INFORMATION);
                permiso.auditar("Nodos","Guardar"," "+nombre.value);
                    guardar.disabled=true;
                    agregar.disabled=false;
                    estado(true,false);
                    llenar(new Nodos(0));
                    
            }else{
                Messagebox.show("No se pudo almacenar...X", "Administrador Educativo", Messagebox.OK, Messagebox.EXCLAMATION);
            }

    }

   Boolean verificar(String accion){
        return permiso.verificarPermiso("Nodos",accion);

    }
 void nuevo(){
    if(verificar("Agregar")){
          
          guardar.disabled=false; llenar(new Nodos(0));estado(false,false);
    }else{
            Messagebox.show("No tiene permisos para realizar esta acción...!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
    }
}
 void move(){
        llenar((Nodos)datos.selectedItem.value);
        modificar.disabled = false;
        //registro.setSelected(true);
  }
void modificar(){
  if(verificar("Modificar")){
       guardar.disabled=false; estado(false,true);
    }else{
            Messagebox.show("No tiene permisos para realizar esta acción...!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
    }
}
void eliminar(){
  if(verificar("Eliminar")){
        try{
             empa = (Nodos)datos.selectedItem.value;
             adm.eliminarObjeto(Nodos.class, empa.getCodigo());
             permiso.auditar("Nodos","Eliminar",""+nombre.value);
            datos.removeItemAt(datos.getSelectedIndex());
            llenar(new Nodos(0));
                Messagebox.show("Registro Eliminado con Éxito...!", "Administrador Educativo", Messagebox.OK, Messagebox.INFORMATION);
        }catch(Exception e){
            Messagebox.show("No se pudo eliminar el Registro...!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
        }
}else{
            Messagebox.show("No tiene permisos para realizar esta acción...!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
    }
}
 
  void buscar(String p){
        List NodosEncontrados = adm.query("Select o from Nodos as o "+ 
        " where o.nombre like '%"+p+"%' and o.sector.sucursal.codigo = '"+sucursalEmp.getSucursal().getCodigo()+"' ");
        datos = new Listbox();
        int a=0;
            for (Iterator it = datos.getItems().iterator(); it.hasNext();) {
                    datos.getItems().remove(a);
                }


               for (Iterator it = NodosEncontrados.iterator(); it.hasNext();) {
                      Nodos acceIt = (Nodos) it.next();
                      Listitem li = new Listitem();
                      li.setValue(acceIt);
                      li.appendChild(new Listcell(acceIt.getCodigo()+""));
                      li.appendChild(new Listcell(acceIt.getNombre()+" "));
                      li.appendChild(new Listcell(acceIt.getDireccion()+" "));
                      li.appendChild(new Listcell(acceIt.getTorre()+""));
                      datos.appendChild(li);
             }

    }
    
     void buscarSectores(Integer codigo){
          bd.value = "";
        List NodosEncontrados = adm.query("Select o from Sector as o "  + 
        " where o.canton.codigo = '"+codigo+"' and o.sucursal.codigo = '"+sucursalEmp.getSucursal().getCodigo()+"' ");
        perf = new Listbox();
        int a=0;
            for (Iterator it = perf.getItems().iterator(); it.hasNext();) {
                    perf.getItems().remove(a);
                }


               for (Iterator it = NodosEncontrados.iterator(); it.hasNext();) {
                      Sector acceIt = (Sector) it.next();
                      Listitem li = new Listitem();
                      li.setValue(acceIt);
                      li.appendChild(new Listcell(acceIt.getNombre()+" "));
                      perf.appendChild(li);
             }

    }
    
void cargar(Sector g){
empa.setSector(g);
}
]]>
        </zscript>
      

        <grid width="100%">
            <rows>
                <row>
                    <span>
                        <intbox id="codigo" disabled="true" style="background:transparent;border:0px;color:grey;font-size:5px"   cols="2" readonly="true" />
                    </span>
                    <span></span>
                </row>
                <row>
                    <span style="float:right"> Seleccione un Cantón(*):</span>
                    <bandbox  width="200px" readonly="true"  id="bdCanton">
                        <bandpopup>
                            <vbox>
                                <listbox id="cant" width="250px"
                                                     onSelect="bdCanton.value=self.selectedItem.label;buscarSectores(((Canton)self.selectedItem.value).getCodigo());bdCanton.closeDropdown();">
                        
                                    <listitem forEach="${cantones}" value="${each}">
                                        <listcell label="${each.nombre}" />

                                    </listitem>
                                </listbox>
                            </vbox>
                        </bandpopup>
                    </bandbox>

                </row>
                <row>
                    <span style="float:right"> Seleccione un Sector(*):</span>
                    <bandbox  width="200px" readonly="true"  id="bd">
                        <bandpopup>
                            <vbox>
                                <listbox id="perf" width="250px"
                                                     onSelect="bd.value=self.selectedItem.label;cargar(((Sector)self.selectedItem.value));bd.closeDropdown();">
                                 
                                    <listitem forEach="${perfiles}" value="${each}">
                                        <listcell label="${each.nombre}" />

                                    </listitem>
                                </listbox>
                            </vbox>
                        </bandpopup>
                    </bandbox>

                </row>
                <row>
                    <span style="float:right"> Nombre(*):</span>
                    <textbox id="nombre"  maxlength="60" cols="40" readonly="true"   />
                                
                </row>
                <row>
                    <span style="float:right"> Dirección(*):</span>
                    <textbox id="direccion"  maxlength="60" cols="40" readonly="true"   />
                                
                </row>
                <row>
                    <span style="float:right"> Torre:</span>
                    <textbox id="torre"  maxlength="60" cols="40" readonly="true"   />
                                
                </row>
                <row>
                    <span style="float:right"> Observaciones:</span>
                    <textbox id="observaciones"  rows="2" cols="40" readonly="true"   />
                                
                </row>
                    


                      
            </rows>
        </grid>

        <vbox>
            <hbox>
                <button image="/images/guardar.gif" id="guardar" label="Guardar"  disabled="true"  onClick="guardar();"/>
                <button  image="/images/nuevo.gif" id="agregar" label="Agregar" onClick="nuevo();" />
                <button  image="/images/editar.gif" id="modificar"  label="Modificar" disabled="true"  onClick="modificar()"/>
                <button  image="/images/eliminar.gif" id="eliminar"  label="Eliminar" disabled="true"  onClick="eliminar();"/>
            </hbox>
        </vbox>


    

        <groupbox  width="100%" mold="3d" >

            <caption label="Busquedas" />
            <vbox>
                <hbox>  Nombre:
                    <textbox id="buscarText"  maxlength="60" cols="40" />
                    <button id="buscar"  label="Buscar" onClick="buscar(buscarText.getValue());"/>
                </hbox>
                <hbox>
                    <listbox mold="paging" rows="10" pageSize="10"  onSelect="move();estado(true,false);eliminar.disabled=false;guardar.disabled=true" id="datos" width="100%">
                        <listhead>
                            <listheader label="Cod."/>
                            <listheader label="Nombre"/>
                            <listheader label="Torre"/>
                            <listheader label="Direccion"/>

                        </listhead>
                        <listitem forEach="${allEvents}" value="${each}">
                            <listcell label="${each.codigo}" />
                            <listcell label="${each.nombre}" />
                            <listcell label="${each.torre}" />
                            <listcell label="${each.direccion}" />
                        </listitem>
                    </listbox>


                </hbox>
            </vbox>
        </groupbox>


 

    </window>
</zk>