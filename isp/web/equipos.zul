<?xml version="1.0" encoding="UTF-8"?>


<zk  xmlns="http://www.zkoss.org/2005/zul">
    <script type="text/javascript" src="/js/jquery-1.4.4.min.js"/>
    <script type="text/javascript" src="/js/jquery.maskedinput-1.2.2.min.js"/>
    <script type="text/javascript" src="/js/masks.js"/>
    <script type="text/javascript" src="/js/jquery-ui-1.8.9.custom.min.js" />
 
    <window>

        <zscript>
            <![CDATA[
  import jcinform.persistencia.*;
  import jcinform.conexion.*;
  import jcinform.bean.*;
  import java.util.ArrayList;
  import org.zkoss.image.AImage;
  import org.zkoss.image.Image;
  
  Session ses = Sessions.getCurrent();
  Empleadossucursal sucursalEmp = ses.getAttribute("sector");
  Administrador adm = new Administrador();
  List allEvents = adm.query("Select o from Equipos as o where o.sucursal.codigo = '"+sucursalEmp.getSucursal().getCodigo()+"' ");
  static Equipos empa = new Equipos();
    Permisos permiso = new Permisos();
    List perfiles = adm.query("Select o from Marcas as o  ");
    Object media = null;

//FUNCIONES
void cargarFoto(byte[] imageData){
  foto0.setContent(new org.zkoss.image.AImage("fotito", imageData));
}
void cargarVacio(){
  foto0.setContent(new org.zkoss.image.AImage("t", desktop.webApp.getResourceAsStream("/fotos/vacio.gif")));
}

//FUNCIONES
void llenar(Equipos empa){
    codigo.value = empa.getCodigo();
    nombre.value = empa.getNombre();
    modelo.value = empa.getModelo();
    serie.value = empa.getTipo();
        if(empa.getBien()){
        bien.checked = true;
        codigoserie.visible = false;
     }else{
        servicio.checked = true;
        codigoserie.visible = true;
      }
  
    pvp.value = empa.getPvp1();
    pvp2.value = empa.getPvp2();
    pvp3.value = empa.getPvp3();
    contable.value = empa.getContable();
    unidad.value = empa.getUnidad();
    costo.value = empa.getCosto();
    
                if(empa.getMarcas()!=null){
                  for (int i = 0; i <= perf.getItems().size(); i++) {
                            Marcas tr0 = ((Marcas)((Listitem)perf.getItems().get(i)).getValue());
                            int primero = tr0.getCodigo();
                            int segundo = empa.getMarcas().getCodigo();
                            if(primero == segundo){
                                perf.setSelectedItem((Listitem)perf.getItems().get(i));
                                bd.value = empa.getMarcas()+"";
                                break;
                            }
                   }


                    
                }

}
void estado(Boolean estado,Boolean modificar){
        if(modificar){
            empa = (Equipos)datos.selectedItem.value;
        }
    nombre.readonly = estado;
    modelo.readonly = estado;
    serie.readonly = estado;
    bien.disabled = estado;
    servicio.disabled = estado;
    pvp.readonly = estado;
    pvp2.readonly = estado;
    pvp3.readonly = estado;
    contable.readonly = estado;
    unidad.readonly = estado;
    costo.readonly = estado;
    perf.disabled = estado;
    bd.disabled = estado;

}


 void guardar(){
 if(nombre.value =="" || modelo.value == "" || perf.selectedItem == null || pvp.value == null  ){
    Messagebox.show("Registre los campos con (*) para continuar...!", "Administrador Educativo", Messagebox.OK, Messagebox.EXCLAMATION);
    return;
 } 
        if(bien.checked){
            empa.setBien(true);
         }else{
                empa.setBien(false);
              if(serie.value == "" || serie.value == null){
                    Messagebox.show("Ingrese la serie, esto servirá para registrar el producto en factura para continuar...!", "Administrador Educativo", Messagebox.OK, Messagebox.EXCLAMATION);
                    serie.focus();
                    return;
              }
         }
        empa.setTipo(serie.value);
        empa.setCodigo(codigo.value);
        empa.setNombre(nombre.value);
        empa.setMarcas(perf.selectedItem.value);
        empa.setModelo(modelo.value);
        empa.setSucursal(sucursalEmp.getSucursal());
        empa.setPvp1(pvp.value);
        empa.setCosto(costo.value);
        empa.setPvp1(pvp.value);
        empa.setPvp2(pvp2.value);
        empa.setPvp3(pvp3.value);
        empa.setContable(contable.value);
        empa.setUnidad(unidad.value);
        
         if((!empa.getCodigo().equals(0)) ){
             adm.actualizar(empa);
         }else{
             adm.guardar(empa);
         }
              Boolean a = true;
            if(a){
                Messagebox.show("Registro Almacenado con Éxito...!", "Administrador Educativo", Messagebox.OK, Messagebox.INFORMATION);
                permiso.auditar("Equipos","Guardar",""+nombre.value+" "+nombre.value);
                    guardar.disabled=true;
                    agregar.disabled=false;
                    estado(true,false);
                    llenar(new Equipos(0));
                    
            }else{
                Messagebox.show("No se pudo almacenar...X", "Administrador Educativo", Messagebox.OK, Messagebox.EXCLAMATION);
            }

    }

   Boolean verificar(String accion){
        return permiso.verificarPermiso("Equipos",accion);

    }
 void nuevo(){
    if(verificar("Agregar")){
          guardar.disabled=false; llenar(new Equipos(0));estado(false,false);
    }else{
            Messagebox.show("No tiene permisos para realizar esta acción...!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
    }
}
 void move(){
        llenar((Equipos)datos.selectedItem.value);
        modificar.disabled = false;
        //registro.setSelected(true);
  }
void modificar(){
  if(verificar("Modificar")){
       guardar.disabled=false; estado(false,true);
    }else{
            Messagebox.show("No tiene permisos para realizar esta acción...!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
    }
}
void eliminar(){
  if(verificar("Eliminar")){
        try{
             empa = (Equipos)datos.selectedItem.value;
             adm.eliminarObjeto(Equipos.class, empa.getCodigo());
             permiso.auditar("Equipos","Eliminar",""+nombre.value+" "+nombre.value);
            datos.removeItemAt(datos.getSelectedIndex());
            llenar(new Equipos(0));
                Messagebox.show("Registro Eliminado con Éxito...!", "Administrador Educativo", Messagebox.OK, Messagebox.INFORMATION);
        }catch(Exception e){
            Messagebox.show("No se pudo eliminar el Registro...!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
        }
}else{
            Messagebox.show("No tiene permisos para realizar esta acción...!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
    }
}
 
  void buscar(String p){
        List EquiposEncontrados = adm.query("Select o from Equipos as o " + 
        " where o.nombre like '%"+p+"%' and o.sucursal.codigo = '"+sucursalEmp.getSucursal().getCodigo()+"' order by o.nombre");
        datos = new Listbox();
        int a=0;
            for (Iterator it = datos.getItems().iterator(); it.hasNext();) {
                    datos.getItems().remove(a);
                }


               for (Iterator it = EquiposEncontrados.iterator(); it.hasNext();) {
                      Equipos acceIt = (Equipos) it.next();
                      Listitem li = new Listitem();
                      li.setValue(acceIt);
                      li.appendChild(new Listcell(acceIt.getCodigo()+""));
                      li.appendChild(new Listcell(acceIt.getNombre()));
                      li.appendChild(new Listcell(acceIt.getModelo()+""));
                      datos.appendChild(li);
             }

    }
void cargar(Marcas g){
empa.setMarcas(g);
}
]]>
        </zscript>
 

<hbox width="700px">
        <grid width="350px">
            <rows>
                <row>
  
                    <span style="float:right"> Nombre(*):    <intbox id="codigo" disabled="true" style="background:transparent;border:0px;color:grey;font-size:5px"   cols="2" readonly="true" /></span>
                    <textbox id="nombre"  maxlength="60" cols="40" readonly="true"   />
                                
                </row>
                           
                <row>
                    <span style="float:right"> Modelo:</span>
                    <textbox id="modelo" maxlength="30" cols="15" readonly="true"  />
                </row>
                           
                <row>
                    <span style="float:right"> Marcas(*):</span>
                    <bandbox  readonly="true"  id="bd">
                        <bandpopup>
                            <vbox>
                                <listbox id="perf" width="250px"
                                         onSelect="bd.value=self.selectedItem.label;cargar(((Marcas)self.selectedItem.value));bd.closeDropdown();">
                                    <listhead>
                                        <listheader label="Description"/>
                                    </listhead>
                                    <listitem forEach="${perfiles}" value="${each}">
                                        <listcell label="${each.nombre}" />

                                    </listitem>
                                </listbox>
                            </vbox>
                        </bandpopup>
                    </bandbox>

                </row>
                <row>
                    <span style="float:right"> Es un Bien:</span>
                    <span>
                        <radiogroup onCheck="">
                            <radio id="bien" value="true" onCheck="codigoserie.visible=false" selected="true" label="Bien"/>
                            <radio id="servicio" value="true" label="Servicio"  onCheck="codigoserie.visible=true" />
                        </radiogroup>
                        <span id="codigoserie" visible="false">
                            <textbox cols="7" id="serie" />
                        </span>
                    </span>
                </row>
                 <row>
                    <span style="float:right"> Costo(*):</span>
                    <decimalbox id="costo"  maxlength="100" cols="15" readonly="true"   />
                </row>
            </rows>
        </grid>
        <grid  width="350px">
            <rows>
               
                <row>
                    <span style="float:right"> p.v.p.1(*):</span>
                    <decimalbox id="pvp"  maxlength="100" cols="15" readonly="true"   />
                </row>
                <row>
                    <span style="float:right"> p.v.p. 2 :</span>
                    <decimalbox id="pvp2"  maxlength="100" cols="15" readonly="true"   />
                </row>
                <row>
                    <span style="float:right"> p.v.p. 3 :</span>
                    <decimalbox id="pvp3"  maxlength="100" cols="15" readonly="true"   />
                </row>
                <row>
                    <span style="float:right"> Cod.Contabilidad:</span>
                    <textbox id="contable"  maxlength="100" cols="20" readonly="true"   />
                </row>
                <row>
                    <span style="float:right"> Unidad(*):</span>
                    <span>
                    <textbox id="unidad" maxlength="100" cols="15" readonly="true"   />
                    UNI,Mts.
                    </span>
                    
                </row>
                      
            </rows>
        </grid>
</hbox>
        <vbox>
            <hbox>
                <button image="/images/guardar.gif" id="guardar" label="Guardar"  disabled="true"  onClick="guardar();"/>
                <button  image="/images/nuevo.gif" id="agregar" label="Agregar" onClick="nuevo();" />
                <button  image="/images/editar.gif" id="modificar"  label="Modificar" disabled="true"  onClick="modificar()"/>
                <button  image="/images/eliminar.gif" id="eliminar"  label="Eliminar" disabled="true"  onClick="eliminar();"/>
            </hbox>
        </vbox>


      

        <groupbox  width="700px" mold="3d" >

            <caption label="Busquedas" />
            <vbox>
                <hbox>  Descripción:
                    <textbox id="buscarText"  maxlength="60" cols="40" />
                    <button id="buscar"  label="Buscar" onClick="buscar(buscarText.getValue());"/>
                </hbox>
                <hbox>
                    <listbox mold="paging"  width="690px"  rows="10" pageSize="10"  onSelect="move();estado(true,false);eliminar.disabled=false;guardar.disabled=true" id="datos" >
                        <listhead>
                            <listheader label="Cod."/>
                            <listheader label="Nombre"/>
                            <listheader label="Dirección"/>

                        </listhead>
                        <listitem forEach="${allEvents}" value="${each}">
                            <listcell label="${each.codigo}" />
                            <listcell label="${each.nombre}" />
                            <listcell label="${each.modelo}" />
                        </listitem>
                    </listbox>


                </hbox>
            </vbox>
        </groupbox>

 

    </window>
</zk>