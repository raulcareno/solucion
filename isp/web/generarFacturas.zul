
<window   border="normal" >

    <zscript>
         <![CDATA[
    
  import bean.EventDAO; 
  import java.util.ArrayList; 
  import jcinform.persistencia.*;
  import jcinform.conexion.*;
  import jcinform.bean.*;
  import java.math.BigDecimal;
  import jcinform.bean.generarFacturas;
  import java.math.BigDecimal;
    import java.text.SimpleDateFormat;
    import jcinform.bean.sources.*;
    import jcinform.bean.sources.clasestmp.Pendientes;
    

  Session ses = Sessions.getCurrent();
    Administrador adm = new Administrador();
    List allEvents = adm.query("Select o from Sucursal as o");
    static Sucursal equi = new Sucursal();
    Permisos permiso = new Permisos();
    generarFacturas gen = new generarFacturas();
    Empleadossucursal sucursalEmp = ses.getAttribute("sector");
    Empresa empresa = ses.getAttribute("empresa"); 
    String directorioReportes = empresa.getReportes();
    void generar(){
        generarFacturas gen = new generarFacturas();
                //for(Iterator it = datos.getItems().iterator(); it.hasNext();) {
                            //Listitem object = (Listitem)it.next();
                            //Sucursal emp = object.getValue();
                            Sucursal suc = sucursalEmp.getSucursal();
                                String resultado =  gen.empezarGenerar(fecha.value,null,suc); 
                                if(resultado.equals("OK")){
                                    alert("GENERACIÓN TERMINADA CON +EXITO ");
                                }else{
                                    alert("error: "+resultado);
                                }
                //}
        
    }

 Boolean verificar(String accion){
        return permiso.verificarPermiso("Cantones",accion);
 }
 
 
 
    void seleccionarTodos(Checkbox estado,Integer tipo){
                if(tipo == 0){
                       List col = facturasDatos.getRows().getChildren();
                              for (int i = 0; i < col.size(); i++) {
                                     Row object = (Row) col.get(i);
                                      List labels = object.getChildren();
                                        ((Checkbox) labels.get(0)).setChecked(estado.isChecked());
                               }
                 }else{
                        List col = facturasDatosAsignados.getRows().getChildren();
                              for (int i = 0; i < col.size(); i++) {
                                     Row object = (Row) col.get(i);
                                      List labels = object.getChildren();
                                        ((Checkbox) labels.get(0)).setChecked(estado.isChecked());
                               }
                 
                 }
    }
 void facturasPendientes(){
        try{
            List facEncontradas =  gen.buscar(sucursalEmp.getSucursal(),tipo.value);
            facturasDatos.getRows().getChildren().clear();
            if(facEncontradas == null){
                return;
            }
            
            
            ArrayList contratosAnadidos = new ArrayList();
            totalFacturas.value = facEncontradas.size()+"";
            int i =0;
            BigDecimal total = new BigDecimal(0);
                for (Iterator itna = facEncontradas.iterator(); itna.hasNext();) {
                            Vector vec = (Vector) itna.next();
                          
                           Row row = new Row();
                                   if(row == null){
                                        row = new Row();
                                   }
                                Checkbox ch = new Checkbox("");   
                                 
                              row.appendChild(ch);
                              
                            for (int j = 0; j < vec.size(); j++) {
                                Object dos = vec.get(j);
                                if(row == null){
                                    row = new Row();
                                   }
                                    if(dos instanceof Integer){
                                             row.setValue(dos);
                                             row.appendChild(new Label(dos+""));
                                    }else if(dos instanceof Date){
                                             SimpleDateFormat d1 = new SimpleDateFormat("dd-MM-yyyy");
                                             Date d = (Date)dos;
                                             row.appendChild(new Label(d1.format(d)+""));
                                    }else{
                                        if(dos != null){
                                                if(j==1){
                                                        row.appendChild(new Label(dos.substring(9)+""));        
                                                }else{
                                                        row.appendChild(new Label(dos+""));
                                                }
                                            
                                        }else{
                                            row.appendChild(new Label(""));
                                       }
                                    }
                            }
                            BigDecimal val = ((BigDecimal) vec.get(5));
                            total = total.add(val);
                            try{
                                    filasFac.appendChild(row);
                            }catch(Exception exs){
                            System.out.println("NO SE AGREGÓ FILA POR ERROR: "+exs);
                            }
                }
            valortotal.value = total;
                   }catch(Exception e){
                            //Messagebox.show("Seleccione primero un CLIENTE  ...! \n"+e, "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
                            System.out.println("ERROR: "+e);
                          
                        }
                
 }
 List facturasGeneradas = new ArrayList();
  void generarFacturas(){
 
                       List col = facturasDatos.getRows().getChildren();
                       Sucursal suc = sucursalEmp.getSucursal();
                       Integer num = numero.value;
                       
                       String vali = suc.getSerie1() + "" + suc.getSerie2() + "FAC" + llenarCeros("" + num);
                        List siExiste = adm.query("Select o from Factura as o where o.numero = '"+vali+"' ");
                        
                            if(siExiste.size()>0){
                                Messagebox.show("El # Inicial de la factura ya existe, rectifique y vuelva a intentarlo ...!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
                                numero.focus();
                                return;        
                            }
                        String nofacturas="";
                             for (int i = 0; i < col.size(); i++) {
                                     Row object = (Row) col.get(i);
                                      List labels = object.getChildren();
                                        if(((Checkbox) labels.get(0)).isChecked()){
                                             String nn = suc.getSerie1() + "" + suc.getSerie2() + "FAC" + llenarCeros("" + num);
                                             nofacturas += "'"+nn+"',";
                                             num++;
                                        }
                               }
                                        if(nofacturas.length()>0){
                                             nofacturas = nofacturas.substring(0,nofacturas.length()-1);
                                             siExiste = adm.query("Select o from Factura as o where o.numero in ("+nofacturas+") ");
                        
                                                        if(siExiste.size()>0){
                                                        String existentes  = "";
                                                                    for (Iterator itna = siExiste.iterator(); itna.hasNext();) {
                                                                            Factura f = (Factura) itna.next();  
                                                                            existentes += f.numero.substring(9)+" , ";

                                                                    }
                                                            Messagebox.show("Algunas # de Facturas ya se han Usado ...! \n"+existentes, "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
                                                            numero.focus();
                                                            return;        
                                                        }
                                             
                                         }
                       Integer num2 = numero.value;
                       facturasGeneradas = new ArrayList();
                              for (int i = 0; i < col.size(); i++) {
                                     Row object = (Row) col.get(i);
                                      List labels = object.getChildren();
                                        if(((Checkbox) labels.get(0)).isChecked()){
                                                Factura fac = adm. buscarClave(object.getValue(),Factura.class);
                                                String nn = suc.getSerie1() + "" + suc.getSerie2() + "FAC" + llenarCeros("" + num2);
                                                if(fac.getNumero() == null){
                                                   fac.setNumero(nn);
                                                  adm.actualizar(fac);
                                                  facturasGeneradas.add(fac);
                                                    num2++;
                                                }
                                        }
                               }

                 try{              
                               
//VUELVO A LLENAR LAS FACTURAS EN ORDEN
            facturasDatos.getRows().getChildren().clear();
            int i =0;
            BigDecimal total = new BigDecimal(0);
                for (Iterator itna = facturasGeneradas.iterator(); itna.hasNext();) {
                            Factura vec = (Factura) itna.next();
                            Row row = new Row();
                            if(row == null){
                               row = new Row();
                            }
                            Checkbox ch = new Checkbox("");   
                             ch.setChecked(true);
                             row.appendChild(ch);
                             row.setValue(vec.getCodigo());
                             row.appendChild(new Label(dos+""));

                             SimpleDateFormat d1 = new SimpleDateFormat("dd-MM-yyyy");
                             Date d =  vec.getFecha();
                             row.appendChild(new Label(d1.format(d)+""));
                             row.appendChild(new Label(vec.getNumero().substring(9)+""));        
                             row.appendChild(new Label(vec.getClientes().getApellidos()+" "+ vec.getClientes().getNombres()));
                             row.appendChild(new Label(vec.getTotal()+""));
                             row.appendChild(new Label(vec.getTotal()+""));
                             filasFac.appendChild(row);
                }
             }catch(Exception e){
                            System.out.println("ERROR: "+e);
             }


                               
                               
                               
    }
    
      
    String llenarCeros(String numero) {
        
        while (numero.length() < 7) {
            numero = "0" + numero;
        }        
        return numero;
        
    }
    
    void imprimirTodos(){
            List col = facturasDatos.getRows().getChildren();
            String codigos = "";
                           for (int i = 0; i < col.size(); i++) {
                                     Row object = (Row) col.get(i);
                                     List labels = object.getChildren();
                                     if(((Checkbox) labels.get(0)).isChecked()){
                                                if(!labels.get(1).equals("")){
                                                      Integer facCodigo = object.getValue();
                                                     codigos += facCodigo+",";
                                                }
                                     }
                                                 
                            }
            if(codigos.length() >0){
                codigos = codigos.substring(0,codigos.length()-1);
                Map parameters = new HashMap();
                parameters.put("empresa",empresa.getRazonsocial());
                parameters.put("ruc",empresa.getRuc());
                parameters.put("direccion",empresa.getDireccion());
                parameters.put("telefono",empresa.getTelefono());
                    List detalleFac = adm.query("Select o from Detalle as o " + 
                    "where o.factura.codigo in (" + codigos + ") order by o.factura.numero  ");
                    ArrayList detalles = new ArrayList();
                   for (Iterator itAbono =detalleFac.iterator(); itAbono.hasNext();) {
                        Detalle det = itAbono.next();
                         detalles.add(det);
                   }
                   ReporteFacturaDataSource ds = new ReporteFacturaDataSource(detalles);
                   reportelocal.setSrc(directorioReportes+"factura.jasper");
                   reportelocal.setParameters(parameters);
                   reportelocal.setDatasource(ds);
                   reportelocal.setType((String) format.getSelectedItem().getValue());
                   
                   //impresion.selected = true;
                
            }
                
 
 }
  
 
  ]]>
    </zscript>
    <grid width="810px">
        <rows>
            <row>
                <groupbox mold="3d" width="400px">
                    <caption>1.- Generación de Deudas mensuales</caption>    
                
                            FECHA DE EMISION: 
                    <datebox id="fecha" format="MMM-yyyy" onCreate="self.value = adm.Date()"/>
                    <button label="GENERAR DEUDA PARA TODOS LOS CLIENTES" onClick="generar()"/>
                </groupbox>
                <groupbox id="gssb" mold="3d" width="400px">
                    <caption> 2.- Asignación de No. de facturas</caption>    
                    <span > SELECCIONE UN PLAN: </span>
                    <combobox  value="HOME" id="tipo">
                        <comboitem label="HOME" />
                        <comboitem label="BASICO" />
                        <comboitem label="CORPORATIVO" />
                        <comboitem label="PREMIUM" />
                    </combobox>
                    <button image="/images/auditoria.gif" label="BUSCAR DEUDAS " onClick="facturasPendientes()"/>
                </groupbox>
                
                
            </row>    
             <!--row spans="2">
                <listbox multiple="true" checkmark="true"  id="datos" width="99%">
                    <listhead>
                        <listheader label="Código"/>
                        <listheader label="Nombre"/>

                    </listhead>
                    <listitem forEach="${allEvents}" value="${each}">
                        <listcell label="${each.descripcion}" />
                    </listitem>
                </listbox>    
            </row-->
         
            <row spans="2">
              
                
                <groupbox id="gb" mold="3d" width="100%">
                    <caption>3.- Operaciones </caption>
	    			# Inicial de Factura
                    <intbox id="numero" style="color:blue; text-align:center;font-size:14px;font-weight:bold" constraint="no empty,no zero: Ingrese el número inicial para continuar debe ser mayor a 0 y no blanco" />
                    <button label="Empezar a Generar #" onClick="numero.getValue(); generarFacturas(); "/>
                    <button label="Imprimir" image="/images/imprimir.gif" onClick="imprimirTodos()"/>
                    <bandbox readonly="true"  width="70px" value="PDF" id="bd" >
                                        <bandpopup>
                                            <vbox>
                                                <listbox width="90px" id="format"  onSelect="bd.value=self.selectedItem.label; bd.close();imprimirTodos();">
                                                    <listitem  value="pdf" selected="true">
                                                        <listcell  image="/images/pdf.png" label="PDF" />
                                                    </listitem>
                                                    <listitem value="rtf">
                                                        <listcell  image="/images/word.gif" label="Word" />
                                                    </listitem>
                                                    <listitem value="xls">
                                                        <listcell  image="/images/excel.gif"  label="Excel" />
                                                    </listitem>
                                                    <listitem value="jxl">
                                                        <listcell  image="/images/excel.gif" label="JXL" />
                                                    </listitem>
                                                    <listitem value="csv">
                                                        <listcell  image="/images/csv.gif" label="CSV" />
                                                    </listitem>
                                                    <listitem value="odt">
                                                        <listcell  image="/images/open.png" label="OpenOfic" />
                                                    </listitem>
                                                    <listitem value="xml">
                                                        <listcell  image="/images/xml.gif" label="XML" />
                                                    </listitem>
                                                    <listitem value="html">
                                                        <listcell  image="/images/html.gif" label="HTML" />
                                                    </listitem>
                                                </listbox>
                                            </vbox>
                                        </bandpopup>
                                    </bandbox>

                </groupbox>
                                           
            </row>
        </rows>
    </grid>
    <grid height="350px"   width="810px"  fixedLayout="true"  id="facturasDatos" >
        <columns>
            <column  width="35px" >
                <checkbox id="todos" label="Selección" onCheck="seleccionarTodos(self,0)" />
            </column>
            <column visible="false"  label="Cod."/>
            <column sort="auto"    width="68px" label="# Fac."/>
            <column sort="auto"    width="85px"   label="Fecha"/>
            <column sort="auto" width="150px"   label="Cliente "/>
            <column   width="45px"   label="Total"/>
            <column    width="45px"  label="Saldo"/>
            <column  width="45px" label=""/>
        </columns>
        <rows id="filasFac">
        </rows>
        <foot style="background:#E1E1E1">
            <footer>
                <textbox id="totalFacturas" value="0" readonly="true"/>
            </footer>
            <footer/>
            <footer/>
            <footer/>
            <footer/>
            <footer width="10px">
                                            
                <decimalbox format="#00.00"  style="float:right;text-align:right;font:14px;font-weight:bold;background:#E1E1E1;border:0px" id="valortotal"  value="0.0"  readonly="true"   />    
            </footer>
            <footer/>
                                                                                      
        </foot>
    </grid>
    <grid id="gridReporte" height="350px"  width="810px">
        <rows>
            <row>
                <jasperreport id="reportelocal"  height="350px" />    
            </row>    
        </rows>    
    </grid>

</window>
