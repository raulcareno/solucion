<?page id="contratospage"?>
<window id="contratosventana"  border="normal" >
    <style>
.MyGridRowHeight tr.z-row td.z-row-inner  
{
      background: white;
      border-top: none;
      border-left: 1px solid white;
      border-right: 1px solid #CCC;
      //border-bottom: 1px solid #DDD;
      border-bottom: none;
 
}
/*.MyGridRowHeight tr.z-grid-odd td.z-row-inner, tr.z-grid-odd{
  background: #F8F8F8;
} */
.MyGridRowHeight td.z-row-inner
{
    padding: 0px;
    //overflow: hidden;
}
    </style>
    <zscript>   <![CDATA[
    
  import bean.EventDAO; 
  import java.util.ArrayList; 
  import jcinform.persistencia.*;
  import jcinform.conexion.*;
  import jcinform.bean.*;
  import java.math.BigDecimal;
import java.text.SimpleDateFormat;
  import jcinform.bean.generarFacturas;
    import jcinform.bean.sources.*;

  Session ses = Sessions.getCurrent();
  //ses.setAttribute(org.zkoss.web.Attributes.PREFERRED_LOCALE, Locale.ENGLISH);
    Administrador adm = new Administrador();
    static Contratos equi = new Contratos();
    Permisos permiso = new Permisos();
    Empleados usuarioActual = ses.getAttribute("user");
   Empresa empresa = ses.getAttribute("empresa");
    Empleadossucursal sucursalEmp = ses.getAttribute("sector");
      generarFacturas gen = new generarFacturas();
         String directorioReportes = empresa.getReportes();
      
      
List cantonesList = adm.query("Select o from Canton as o ");
List empleadosList = adm.query("Select o from Empleados as o ");
           

  void facturasPendientes(){
        try{
            List facEncontradas =  gen.buscar(sucursalEmp.getSucursal(),sect.selectedItem.value,sect2.selectedItem.value);
            facturasDatos.getRows().getChildren().clear();
            ArrayList contratosAnadidos = new ArrayList();
            int i =0;
                for (Iterator itna = facEncontradas.iterator(); itna.hasNext();) {
                            Vector vec = (Vector) itna.next();
                          
                           Row row = new Row();
                                   if(row == null){
                                        row = new Row();
                                   }
                                Checkbox ch = new Checkbox("");   
                                 
                              row.appendChild(ch);
                              
                            for (int j = 0; j < vec.size(); j++) {
                                Object dos = vec.get(j);
                                if(row == null){
                                    row = new Row();
                                   }
                                    if(dos instanceof Integer){
                                             row.setValue(dos);
                                             row.appendChild(new Label(dos+""));
                                    }else if(dos instanceof Date){
                                             SimpleDateFormat d1 = new SimpleDateFormat("dd-MM-yyyy");
                                             Date d = (Date)dos;
                                             row.appendChild(new Label(d1.format(d)+""));
                                    }else{
                                        if(dos != null){
                                                if(j==1){
                                                        row.appendChild(new Label(dos.substring(9)+""));        
                                                }else{
                                                        row.appendChild(new Label(dos+""));
                                                }
                                            
                                        }else{
                                            row.appendChild(new Label(""));
                                       }
                                    }
                            }


                              Button aButton = null;
                            aButton = new Button("");
                            aButton.setImage("/images/imprimir.gif");
                            aButton.setId(""+vec.get(0));
                            if( vec.get(1) == null)
                                aButton.setDisabled(true);
                            aButton.setAttribute("valor",vec.get(3));
                            aButton.addEventListener("onClick", new EventListener() {
                             public void onEvent(Event event) throws Exception {
                               /* if(verificar3("Ingresar")){ */
                                     Map parameters = new HashMap();
                                    List detalleFac = adm.query("Select o from Detalle as o where o.factura.codigo = '" + aButton.getId() + "'");
                                    ArrayList detalles = new ArrayList();
                                   for (Iterator itAbono =detalleFac.iterator(); itAbono.hasNext();) {
                                        Detalle det = itAbono.next();
                                         detalles.add(det);
                                   }
                                   ReporteFacturaDataSource ds = new ReporteFacturaDataSource(detalles);
                                   reportelocal.setSrc(directorioReportes+"factura.jasper");
                                   reportelocal.setParameters(parameters);
                                   reportelocal.setDatasource(ds);
                                   reportelocal.setType("pdf");
                                   impresion.selected = true;
                                    /*final Window win = (Window) Executions.createComponents("reporteVisualizar.zul", null, null);
                                    win.setMaximizable(true);
                                    win.setClosable(true);
                                    win.setAttribute("reporte",reportelocal);
                                    win.setTitle("Reporte");
                                    win.doModal(); */
                                 /*}else{
                                            Messagebox.show("No tiene permisos para realizar esta acciÃ³n...!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
                                    } */

                              }
                                });
                              row.appendChild(aButton);
                            
                            filasFac.appendChild(row);
                }
            
                   }catch(Exception e){
                            //Messagebox.show("Seleccione primero un CLIENTE  ...! \n"+e, "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
                            System.out.println("ERROR: "+e);
                          
                        }
                
 }
                
 void buscarSectores(Integer codigo){
          bd.value = "";
        List NodosEncontrados = adm.query("Select o from Sector as o where o.canton.codigo = '"+codigo+"'  order by o.numero" );
        sect = new Listbox();
        int a=0;
            for (Iterator it = sect.getItems().iterator(); it.hasNext();) {
                    sect.getItems().remove(a);
                }


               for (Iterator it = NodosEncontrados.iterator(); it.hasNext();) {
                      Sector acceIt = (Sector) it.next();
                      Listitem li = new Listitem();
                      li.setValue(acceIt);
                      li.appendChild(new Listcell(acceIt.getNumero()+ ".- " + acceIt.getNombre()+" "));
                      sect.appendChild(li);
             }
            a=0;
            for (Iterator it = sect2.getItems().iterator(); it.hasNext();) {
                    sect2.getItems().remove(a);
                }


               for (Iterator it = NodosEncontrados.iterator(); it.hasNext();) {
                      Sector acceIt = (Sector) it.next();
                      Listitem li = new Listitem();
                      li.setValue(acceIt);
                      li.appendChild(new Listcell(acceIt.getNumero()+".- "+acceIt.getNombre()+" "));
                      sect2.appendChild(li);
             }
    } 
    
    
    void seleccionarTodos(Checkbox estado,Integer tipo){
                if(tipo == 0){
                       List col = facturasDatos.getRows().getChildren();
                              for (int i = 0; i < col.size(); i++) {
                                     Row object = (Row) col.get(i);
                                      List labels = object.getChildren();
                                        ((Checkbox) labels.get(0)).setChecked(estado.isChecked());
                               }
                 }else{
                        List col = facturasDatosAsignados.getRows().getChildren();
                              for (int i = 0; i < col.size(); i++) {
                                     Row object = (Row) col.get(i);
                                      List labels = object.getChildren();
                                        ((Checkbox) labels.get(0)).setChecked(estado.isChecked());
                               }
                 
                 }
    }
    void generarFacturas(){
 
                       List col = facturasDatos.getRows().getChildren();
                       Sucursal suc = sucursalEmp.getSucursal();
                       Integer num = numero.value;
                       
                       String vali = suc.getSerie1() + "" + suc.getSerie2() + "FAC" + llenarCeros("" + num);
                        List siExiste = adm.query("Select o from Factura as o where o.numero = '"+vali+"' ");
                        
                            if(siExiste.size()>0){
                                Messagebox.show("El # Inicial de la factura ya existe, rectifique y vuelva a intentarlo ...!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
                                numero.focus();
                                return;        
                            }
                        String nofacturas="";
                             for (int i = 0; i < col.size(); i++) {
                                     Row object = (Row) col.get(i);
                                      List labels = object.getChildren();
                                        if(((Checkbox) labels.get(0)).isChecked()){
                                             String nn = suc.getSerie1() + "" + suc.getSerie2() + "FAC" + llenarCeros("" + num);
                                             nofacturas += "'"+nn+"',";
                                             num++;
                                        }
                               }
                                        if(nofacturas.length()>0){
                                             nofacturas = nofacturas.substring(0,nofacturas.length()-1);
                                             siExiste = adm.query("Select o from Factura as o where o.numero in ("+nofacturas+") ");
                        
                                                        if(siExiste.size()>0){
                                                        String existentes  = "";
                                                                    for (Iterator itna = siExiste.iterator(); itna.hasNext();) {
                                                                            Factura f = (Factura) itna.next();  
                                                                            existentes += f.numero.substring(9)+" , ";

                                                                    }
                                                            Messagebox.show("Algunas # de Facturas ya se han Usado ...! \n"+existentes, "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
                                                            numero.focus();
                                                            return;        
                                                        }
                                             
                                         }
                       Integer num2 = numero.value;
                              for (int i = 0; i < col.size(); i++) {
                                     Row object = (Row) col.get(i);
                                      List labels = object.getChildren();
                                        if(((Checkbox) labels.get(0)).isChecked()){
                                                Factura fac = adm. buscarClave(object.getValue(),Factura.class);
                                                String nn = suc.getSerie1() + "" + suc.getSerie2() + "FAC" + llenarCeros("" + num2);
                                                if(fac.getNumero() == null){
                                                   fac.setNumero(nn);
                                                  adm.actualizar(fac);
                                                    num2++;
                                                }
                                        }
                               }
                               facturasPendientes();
    }
    
      
    String llenarCeros(String numero) {
        
        while (numero.length() < 7) {
            numero = "0" + numero;
        }        
        return numero;
        
    }
    
    void anadirFilas(){
                       List col = facturasDatos.getRows().getChildren();
                       ArrayList arr  = new ArrayList();
                       for (int i = 0; i < col.size(); i++) {
                                     Row object = (Row) col.get(i);
                                      List labels = object.getChildren();
                                        if(((Checkbox) labels.get(0)).isChecked() &&  !((Label) labels.get(2)).getValue().equals("")  ){
                                            try{
                                                  arr.add(object);
                                              }catch(Exception ax){
                                                System.out.println(""+ax);
                                            }
                                              
                                        }
                          }
                          for (int i = 0; i < arr.size(); i++) {
                                     Row object = (Row) arr.get(i);
                                      filasFacAsignados.appendChild(object);
                          }
                               
 }
 void quitarFilas(){
 
                       List col = facturasDatosAsignados.getRows().getChildren();
                       ArrayList arr  = new ArrayList();
                       for (int i = 0; i < col.size(); i++) {
                                     Row object = (Row) col.get(i);
                                      List labels = object.getChildren();
                                        if(((Checkbox) labels.get(0)).isChecked()){
                                            try{
                                                  arr.add(object);
                                              }catch(Exception ax){
                                                System.out.println(""+ax);
                                            }
                                              
                                        }
                          }
                          for (int i = 0; i < arr.size(); i++) {
                                     Row object = (Row) arr.get(i);
                                      filasFac.appendChild(object);
                          }
                               
 }
    
  ]]>
    </zscript>
    <div>
        <!--button label="MOSTRAR" id="mensaje"  onClick="llamar()" /-->

        <tabbox width="100%"  >
            <tabs>
                <tab label="Facturas Pendientes" id="facturas" onSelect="facturasPendientes()"/>
                <tab id="impresion" label="ImpresiÃ³n" />
            </tabs>
            <tabpanels>
                <tabpanel>
       
                    <groupbox id="panel" mold="3d" width="100%">
                        <hbox>
                            <vbox >
                                <grid>
                                    <rows>
                                        <row visible = "true" id="filacanton">
                                            <span style="float:right"> CantÃ³n(*):</span>
                                            <bandbox  readonly="true"  id="bdCanton">
                                                <bandpopup>
                                                    <vbox>
                                                        <listbox id="cant" width="250px"
                                                     onSelect="bdCanton.value=self.selectedItem.label;buscarSectores(((Canton)self.selectedItem.value).getCodigo());bdCanton.closeDropdown();">
                        
                                                            <listitem forEach="${cantonesList}" value="${each}">
                                                                <listcell label="${each.nombre}" />

                                                            </listitem>
                                                        </listbox>
                                                    </vbox>
                                                </bandpopup>
                                            </bandbox>

                                        </row>
                                        <row visible = "true" id="filasector">
                                            <span> Desde Sector(*):</span>
                                            <span>
                                                <bandbox readonly="true"  id="bdSector">
                                                    <bandpopup>
                                                        <vbox>
                                                            <listbox id="sect" width="250px"
                                                     onSelect="bdSector.value=self.selectedItem.label;bdSector.closeDropdown();">
                                 
                                                                <listitem forEach="${sectiles}" value="${each}">
                                                                    <listcell label="${each.nombre}" />

                                                                </listitem>
                                                            </listbox>
                                                        </vbox>
                                                    </bandpopup>
                                                </bandbox>
                                                <span> Hasta Sector(*):</span>
                                                <span>
                                                    <bandbox   readonly="true"  id="bdSector2">
                                                        <bandpopup>
                                                            <vbox>
                                                                <listbox id="sect2" width="250px"
                                                     onSelect="bdSector2.value=self.selectedItem.label;bdSector2.closeDropdown();">
                                 
                                                                    <listitem forEach="${sectiles}" value="${each}">
                                                                        <listcell label="${each.nombre}" />

                                                                    </listitem>
                                                                </listbox>
                                                            </vbox>
                                                        </bandpopup>
                                                    </bandbox>
                                                    <button label="Buscar" onClick="facturasPendientes()"/>
                                                </span>
                                            </span>
                                        </row>
                                        <row spans="2">
                                            <groupbox id="gb" mold="3d" width="100%">
	    			# Inicial de Factura
                                                <intbox id="numero" style="color:blue; text-align:center;font-size:14px;font-weight:bold" constraint="no empty,no zero: Ingrese el nÃºmero inicial para continuar debe ser mayor a 0 y no blanco" />
                                                <button label="Empezar a Generar #" onClick="numero.getValue(); generarFacturas(); "/>

                                            </groupbox>
                                           
                                        </row>
                                    </rows>
                                </grid>
                                <grid height="350px"     fixedLayout="true"  id="facturasDatos" >
                                    <columns>
                                        <column  width="35px" >
                                            <checkbox id="todos" label="SelecciÃ³n" onCheck="seleccionarTodos(self,0)" />
                                        </column>
                                        <column visible="false"  label="Cod."/>
                                        <column   width="68px" label="# Fac."/>
                                        <column   width="85px"   label="Fecha"/>
                                        <column  label="DirecciÃ³n "/>
                                        <column   width="45px"   label="Total"/>
                                        <column    width="45px"  label="Saldo"/>
                                        <column  width="45px" label=""/>
                                    </columns>
                                    <rows id="filasFac">
                                    </rows>
                                </grid>
                            </vbox>
                            <vbox>
                                <separator height="90px"/>
                                 
                                <button  orient="vertical"  label="AÃADIR" image="/images/anadirFilas.png" onClick="anadirFilas()"/>
                                <button  orient="vertical"  label="QUITAR" image="/images/quitarFilas.png" onClick="quitarFilas()"/>
                            </vbox>
                            
                            <vbox>
                                <grid>
                                    <rows>
                                        <row>
                                            <span style="float:right"> Seleccione un Empleado(*):</span>
                                            <bandbox  width="200px" readonly="true"  id="bdEmpleados">
                                                <bandpopup>
                                                    <vbox>
                                                        <listbox id="empleados" width="250px"
                                                     onSelect="bdEmpleados.value=self.selectedItem.label; bdEmpleados.closeDropdown();">
                        
                                                            <listitem forEach="${empleadosList}" value="${each}">
                                                                <listcell label="${each.apellidos} ${each.nombres}" />

                                                            </listitem>
                                                        </listbox>
                                                    </vbox>
                                                </bandpopup>
                                            </bandbox>
                                              
                                        </row>
                                        <row>
                                            <span style="float:right"> Fecha(*):</span>
                                            <span>
                                                <datebox id="fecha" format="dd-MMM-yyyy" onCreate="self.value = adm.Date()"/>
                                                <button label="Buscar" onClick=""/>
                                            </span>
                                        </row>
                                        <row>
                                          
                                        </row>
                                        
                                    </rows>
                                </grid>

                                <grid height="350px"  sclass="MyGridRowHeight2"  fixedLayout="true"  id="facturasDatosAsignados" >
                                    <columns>
                                        <column >
                                            <checkbox id="todos2" label="SelecciÃ³n" onCheck="seleccionarTodos(self,1)" />
                                        </column>
                                        <column visible="false" label="Cod."/>
                                        <column  label="# Fac."/>
                                        <column   label="Fecha"/>
                                        <column  label="DirecciÃ³n "/>
                                        <column   label="Total"/>
                                        <column   label="Saldo"/>
                                        <column   label=""/>
                                    </columns>
                                    <rows id="filasFacAsignados">
                                    </rows>
                                </grid>
                            </vbox>
                        </hbox>
                 
                  
                    </groupbox>
 

                </tabpanel>
           
                <tabpanel>
                    <panel height="550px" style="margin-bottom:10px"
                           title="Reporte" border="normal">
                        <panelchildren>
                            <jasperreport id="reportelocal" />
                        </panelchildren>
                    </panel>
                
                </tabpanel>
            </tabpanels>
            
            
        </tabbox>
        <panel framable="true" visible="false" id="contratosPanel" title="CONTRATOS CON ÃSTE CLIENTE" style="position:absolute; top:5%; left:5%" width="600px">
            <panelchildren>
                <listbox mold="paging" rows="10" pageSize="10" onSelect="llenar(self.selectedItem.value); contratosPanel.visible = false;modificar.disabled = false;anadir.disabled = false;" id="contratosCliente" width="100%">
                    <listhead>
                        <listheader label="Contra."/>
                        <listheader label="Plan"/>
                        <listheader label="Fecha"/>
                        <listheader label="Estado"/>
                    </listhead>
                    <listitem forEach="${allEvents}" value="${each}">
                        <listcell label="${each.fecha}" />
                    </listitem>
                </listbox>
                <button label="CERRAR" onClick="contratosPanel.visible = false"/>
            </panelchildren>
        </panel>
    </div>
</window>
