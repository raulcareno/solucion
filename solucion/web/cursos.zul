
<zk xmlns="http://www.zkoss.org/2005/zul">
    <window border="normal" title="Cursos"  >

        <zscript>
<![CDATA[
  import jcinform.persistencia.Global;
  import bean.EventDAO;
  import java.util.ArrayList;
  import jcinform.persistencia.Cursos;
  import jcinform.persistencia.Periodo;
  import jcinform.persistencia.Global;
  import jcinform.procesos.Administrador;
  import bean.Permisos;
  import java.math.BigDecimal;
Session ses = Sessions.getCurrent();
    Administrador adm = new Administrador();
    Periodo periodo = (Periodo) ses.getAttribute("periodo");
    List allEvents = adm.query("Select o from Cursos as o where o.codigocur = 0");
    static Cursos empa = new Cursos();
    Permisos permiso = new Permisos();
    List perfiles = adm.query("Select o from Global as o where o.grupo = 'PER'");
    List especialidades = adm.query("Select o from Global as o where o.grupo = 'ESP'");
    List paralelos = adm.query("Select o from Global as o where o.grupo = 'PAR'");
    List empleados = adm.query("Select o from Empleados as o order by o.apellidos, o.nombres ");
    Object media = null;
Boolean guardando = false;
//FUNCIONES
void llenar(Cursos empa){
    codigocurso.value = empa.getCodigocur();
    nombres.value = empa.getDescripcion();
    secuencia.value = empa.getSecuencia();
    aprobacion.value = new BigDecimal(empa.getAprobacion());
    minima.value = new BigDecimal(empa.getMinima());
    desde.value = empa.getInicial();
    hasta.value = empa.getFinali();
    inspector.value = empa.getInspector();
    cedulaiden.value = empa.getCedulaiden();
    tutor.value = empa.getTutor();
    cedulatut.value = empa.getCedulatut();
    acta.value = empa.getActa();

if(empa.getParalelo()!=null){
          for (int i = 0; i <= paralelosL.getItems().size(); i++) {
                            Global tr0 = ((Global)((Listitem)paralelosL.getItems().get(i)).getValue());
                            int primero = tr0.getCodigo();
                            int segundo = empa.getParalelo().getCodigo();
                            if(primero == segundo){
                                paralelosL.setSelectedItem((Listitem)paralelosL.getItems().get(i));
                                break;
                            }
                   }
 
    }
    if(empa.getEspecialidad()!=null){

            for (int i = 0; i <= especialidadesL.getItems().size(); i++) {
                    Global tr0 = ((Global)((Listitem)especialidadesL.getItems().get(i)).getValue());
                    int primero = tr0.getCodigo();
                    int segundo = empa.getEspecialidad().getCodigo();
                    if(primero == segundo){
                        especialidadesL.setSelectedItem((Listitem)especialidadesL.getItems().get(i));
                        break;
                    }
           }
 
    }
    
    if(empa.getTitulo()!=null){

            for (int i = 0; i <= tituloL.getItems().size(); i++) {
                    Global tr0 = ((Global)((Listitem)tituloL.getItems().get(i)).getValue());
                    int primero = tr0.getCodigo();
                    int segundo = empa.getTitulo().getCodigo();
                    if(primero == segundo){
                        tituloL.setSelectedItem((Listitem)tituloL.getItems().get(i));
                        break;
                    }
           }
 
    }
 

}
void estado(Boolean estado,Boolean modificar){
        if(modificar){
            empa = (Cursos)datos.selectedItem.value;
        }else{empa.setCodigocur(0);}
        nombres.readonly = estado;
        secuencia.readonly = estado;
        aprobacion.readonly = estado;
        minima.readonly = estado;
        desde.disabled = estado;
        hasta.disabled = estado;
        tutor.readonly = estado;
        acta.readonly = estado;
        cedulatut.readonly = estado;
        inspector.readonly = estado;
        cedulaiden.readonly= estado;
        paralelosL.disabled= estado;
        especialidadesL.disabled= estado;
        tituloL.disabled= estado;

}


 void guardar(){
 if(guardando)
    return;

guardando = true;

 if(nombres.value=="" || secuencia.value ==""){
    Messagebox.show("Ingrese los campos con (*) para continuar...!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
    return;
 }
        Periodo per = (Periodo) ses.getAttribute("periodo");
        empa.setCodigocur(codigocurso.value);
        empa.setDescripcion(nombres.value);
        empa.setSecuencia(secuencia.value);

        empa.setAprobacion((aprobacion.value).doubleValue());
        empa.setMinima((minima.value).doubleValue());

        empa.setInspector(inspector.value);
        empa.setTutor(tutor.value);
        empa.setCedulaiden(cedulaiden.value);
        empa.setCedulatut(cedulatut.value);

        empa.setEspecialidad(especialidadesL.selectedItem.value);
        empa.setParalelo(paralelosL.selectedItem.value);
        empa.setTitulo(tituloL.selectedItem.value);
        empa.setActa(acta.value);
 
        empa.setInicial(desde.value);
        empa.setFinali(hasta.value);
        empa.setPeriodo(per);
//alert(empa.getCodigocur());
        if((!empa.getCodigocur().equals(0)) ){
             adm.actualizar(empa);
                List children = datos.selectedItem.children;
                  ((Listcell)children.get(0)).label = empa.getCodigocur()+"";
                  ((Listcell)children.get(1)).label = empa.getDescripcion()+" "+empa.getEspecialidad().getDescripcion()+" "+empa.getParalelo();
             permiso.auditar("Cursos","Actualizar",""+empa.getCodigocur()+" "+empa.getDescripcion()+" "+empa.getEspecialidad().getDescripcion()+" "+empa.getParalelo());
         }else{
             empa.setCodigocur(adm.getNuevaClave("Cursos","codigocur"));
             adm.guardar(empa);
            permiso.auditar("Cursos","Guardar",""+empa.getCodigocur()+" "+empa.getDescripcion()+" "+empa.getEspecialidad().getDescripcion()+" "+empa.getParalelo());
         }
            
            
                Messagebox.show("Registro Almacenado con Éxito...!", "Administrador Educativo", Messagebox.OK, Messagebox.INFORMATION);
                    guardar.disabled=true;
                    agregar.disabled=false;
                    estado(true,false);
                    Cursos cur = new Cursos(0);
                    cur.setSecuencia(1);
                    llenar(cur);
                    buscar("");
            guardando = false;

    }

   Boolean verificar(String accion){
        return permiso.verificarPermiso("Cursos",accion);

    }
 void nuevo(){
    if(verificar("Agregar")){
       guardar.disabled=false;
       Cursos cur = new Cursos(0);
       cur.setSecuencia(1);
        llenar(cur);
        estado(false,false);
//alert(empa.getCodigocur());
    }else{
            Messagebox.show("No tiene permisos para realizar esta acción...!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
    }
}
 void move(){
        llenar((Cursos)datos.selectedItem.value);
        modificar.disabled = false;
  }
void modificar(){
  if(verificar("Modificar")){
  Integer cod = codigocurso.value;
  if(cod.equals(0)){
            Messagebox.show("Seleccione un curso para MODIFICAR...!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
        return;
  }
       guardar.disabled=false; estado(false,true);
    }else{
            Messagebox.show("No tiene permisos para realizar esta acción...!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
    }
}
void eliminar(){
  if(verificar("Eliminar")){
        try{
             empa = (Cursos)datos.selectedItem.value;
             adm.eliminarObjeto(Cursos.class, empa.getCodigocur());
             permiso.auditar("Cursos","Eliminar",""+empa.getCodigocur()+" "+empa.getDescripcion()+" "+empa.getEspecialidad().getDescripcion()+" "+empa.getParalelo());
            datos.removeItemAt(datos.getSelectedIndex());
            Cursos cur = new Cursos(0);
                    cur.setSecuencia(1);
                    llenar(cur);
                Messagebox.show("Registro Eliminado con Éxito...!", "Administrador Educativo", Messagebox.OK, Messagebox.INFORMATION);
        }catch(Exception e){
            Messagebox.show("No se pudo eliminar el Registro...!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
        }
}else{
            Messagebox.show("No tiene permisos para realizar esta acción...!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
    }
}
  void verificarCedula(String valor){
      if(valor.length()>9){
            List empleados = adm.query("Select o from Cursos as o where o.identificacion = '"+valor+"' ");
            if(empleados.size()>0){
                Messagebox.show("Número de Identificación ya registrado...!", "Administrador Educativo", Messagebox.OK, Messagebox.EXCLAMATION);

                for(Iterator it = empleados.iterator(); it.hasNext();) {
                      Cursos object = (Cursos)it.next();
                        empa = object;
                 }
            llenar(empa);

            }else{
                empa = new Cursos(0);
            }

        }
    }
  void buscar(String p){
        List empleadosEncontrados = adm.query("Select o from Cursos as o where o.descripcion like '%"+p+"%' and o.periodo.codigoper = '"+periodo.getCodigoper()+"'  order by o.secuencia,o.paralelo.descripcion, o.descripcion");
        datos = new Listbox();
        int a=0;
            for (Iterator it = datos.getItems().iterator(); it.hasNext();) {
                    datos.getItems().remove(a);
                }


               for (Iterator it = empleadosEncontrados.iterator(); it.hasNext();) {
                      Cursos acceIt = (Cursos) it.next();
                      Listitem li = new Listitem();
                      li.setValue(acceIt);
                      li.appendChild(new Listcell(acceIt.getCodigocur()+" "));
                      li.appendChild(new Listcell(acceIt.getDescripcion()+" "+acceIt.getEspecialidad().getDescripcion()+" "+acceIt.getParalelo() ));
                      datos.appendChild(li);
             }

    }
void cargarEspe(Global g){
    empa.setEspecialidad(g);
}
void cargarTitu(Global g){
    empa.setTitulo(g);
}
void cargarSec(Global g){
    empa.setSeccion(g);
}
void cargarPar(Global g){
    empa.setParalelo(g);
}
        ]]>

        </zscript>
 

        <grid width="100%">
            <rows>

                <row>
                    <span style="float:right"> Nombres(*):</span>
                    
                    <span> 
                        <textbox id="nombres"  maxlength="100" cols="40" readonly="true"   />
                        <intbox id="codigocurso" readonly="true" cols="2" />
                    </span>
                </row>
                <row>
                    <span style="float:right"> Especialidad:</span>
                    <span>
                        <listbox disabled="true" id="especialidadesL" width="300px" mold="select"
                                 onSelect="cargarEspe(((Global)self.selectedItem.value));">
                            <listhead>
                                <listheader label="Especialidad"/>
                            </listhead>
                            <listitem selected="true"  forEach="${especialidades}" value="${each}">
                                <listcell label="${each.descripcion}" />

                            </listitem>
                        </listbox>
                        <listbox id="paralelosL"  disabled="true"  mold="select"
                                 onSelect="cargarPar(((Global)self.selectedItem.value));">
                            <listhead>
                                <listheader label="Paralelos"/>
                            </listhead>
                            <listitem selected="true" forEach="${paralelos}" value="${each}">
                                <listcell label="${each.descripcion}" />
                            </listitem>
                        </listbox>
                    </span>



                </row>
 

                <row>
                    <span style="float:right"> Orden(*):</span>
                    <span>
                        <spinner tooltip="ayudate" popup="ayudate" value="1" cols="2" id="secuencia"  constraint="no negative,min 0 max 20" />
                        <image  src="/images/information.png" height="18px" width="18px" 
                        tooltip="ayudate" popup="ayudate" style="cursor: pointer" />
                                                         
                        <popup id="ayudate" width="400px">
                            <html>
                                NUEVOS ORDENES DE CURSOS  &lt;p&gt;
                                (1)Primero de Básica, (2)Segundo de Básica  &lt;p&gt;
                                (3)Tercero de Básica, (4)Cuarto de Básica &lt;p&gt;
                                (5)Quinto de Básica, (6)Sexto de Básica  &lt;p&gt;
                                (7)Séptimo de Básica, (8)Octavo de Básica &lt;p&gt;
                                (9)Noveno de Básica, (10)Décimo de Básica  &lt;p&gt;
                                (11)Primero de Bachillerato, (12)Segundo de Bachillerato &lt;p&gt;
                                
                                (13)Tercero de Bachillerato
                            </html>
                        </popup>
                        <separator orient="vertical" bar="true"  />
                        Aprueba con:
                        <decimalbox id="aprobacion" maxlength="5" cols="3"  readonly="true"    /> pts.
                        <separator orient="vertical" bar="true"  />
                        Pierde con:
                        <decimalbox id="minima" maxlength="5" cols="3"  readonly="true"  /> pts.
                    </span>
                </row>

                <row>  </row>
                <row>
                    <span style="float:right"> Inspector:</span>
                    <span>
                        <!--textbox id="inspector" maxlength="100" cols="35"  readonly="true"  /-->
                        <bandbox  width="220px" readonly="true"  id="inspector">
                            <bandpopup>
                                <vbox>
                                    <listbox id="curs" width="420px"
                                             onSelect="inspector.value=self.selectedItem.label;inspector.closeDropdown();">
                                        <listitem forEach="${empleados}" value="${each}">
                                            <listcell label="${each.apellidos} ${each.nombres} " />
                                        </listitem>
                                    </listbox>
                                </vbox>
                            </bandpopup>
                        </bandbox>
                        CI: 
                        <textbox id="cedulaiden" maxlength="13" cols="13" readonly="true"  />
                    </span>
                </row>
                <row>
                    <span style="float:right"> Tutor:</span>
                    <span>
                        <!--textbox id="tutor" maxlength="100" cols="35"  readonly="true"  /-->
                        <bandbox  width="220px" readonly="true"  id="tutor">
                            <bandpopup>
                                <vbox>
                                    <listbox id="curs2" width="420px"
                                             onSelect="tutor.value=self.selectedItem.label;tutor.closeDropdown();">
                                        <listitem forEach="${empleados}" value="${each}">
                                            <listcell label="${each.tratamiento} ${each.nombres} ${each.apellidos}" />
                                        </listitem>
                                    </listbox>
                                </vbox>
                            </bandpopup>
                        </bandbox>
                        CI:
                        <textbox id="cedulatut" maxlength="13" cols="13" readonly="true"  />
                    </span>
                </row>
                <row>
                    <span style="float:right"> Titulo:</span>
                    <span>
                        <listbox disabled="true" id="tituloL" width="300px" mold="select" onSelect="cargarTitu(((Global)self.selectedItem.value));">
                            <listhead>
                                <listheader label="Titulo"/>
                            </listhead>
                            <listitem selected="true"  forEach="${especialidades}" value="${each}">
                                <listcell label="${each.descripcion}" />

                            </listitem>
                        </listbox>
                        Nombre Acta G.
                        <textbox id="acta" maxlength="200" cols="40"  readonly="true"  />

                    </span>
                </row>

                <row visible="true">
                    <span style="float:right"> Habilitado para Matriculas:</span>
                    <span>Desde:
                        <datebox disabled="true" format="dd/MMM/yyyy" id="desde"/> Hasta:
                        <datebox  disabled="true"  format="dd/MMM/yyyy"  id="hasta"/>
                    </span>
                </row>

                <row spans="2">
                    <span>
                        <button image="/images/guardar.gif" id="guardar" label="Guardar"  disabled="true"  onClick="guardar();"/>
                        <button  image="/images/nuevo.gif" id="agregar" label="Agregar" onClick="nuevo();modificar.disabled=true; eliminar.disabled=true" />
                        <button  image="/images/editar.gif" id="modificar"  label="Modificar" disabled="true"  onClick="modificar();modificar.disabled=true"/>
                        <button  image="/images/eliminar.gif" id="eliminar"  label="Eliminar" disabled="true"  onClick="eliminar();modificar.disabled=true;eliminar.disabled=true"/>
                    </span>
                </row>
            </rows>
        </grid>

        <groupbox width="100%" mold="3d" >
            <caption label="Busquedas" />
            <vbox>
                <hbox> Curso:
                    <textbox id="buscarText"  maxlength="60" cols="40" />
                    <button id="buscar"  label="Buscar" onClick="buscar(buscarText.getValue());"/>
                </hbox>
                <hbox width="100%">
                    <listbox mold="paging" rows="15" pageSize="15" onSelect="move();estado(true,false);eliminar.disabled=false;guardar.disabled=true" id="datos" width="100%">
                        <listhead>
                            <listheader label="Cod."/>
                            <listheader label="Nombres"/>
                        </listhead>
                        <listitem  forEach="${allEvents}" value="${each}">
                            <listcell label="${each.codigocur}" />
                            <listcell label="${each.especialidad}" />
                        </listitem>
                    </listbox>
                </hbox>
            </vbox>
        </groupbox>
 
    </window>
</zk>