
<zk xmlns="http://www.zkoss.org/2005/zul">
    <window closable="true"    maximizable="true"   onCreate="cargando()" >
        <zscript>
            <![CDATA[
  import bean.EventDAO;
  import java.util.ArrayList;
  import jcinform.persistencia.*;
  import jcinform.procesos.Administrador;
  import bean.Permisos;
  import java.math.BigDecimal;
  import org.zkoss.util.media.Media;
  import org.zkoss.util.media.AMedia;
  import java.io.FileOutputStream;
  
  Session ses = Sessions.getCurrent();
    Administrador adm = new Administrador();
    Periodo periodo = (Periodo) ses.getAttribute("periodo");
    List allEvents = adm.query("Select o from Empleados as o where o.estado = true order by o.apellidos ");

    Empleados user =  (Empleados)ses.getAttribute("user");
    List cursos = adm.query("Select distinct o.curso from MateriaProfesor as o where o.empleado.codigoemp = '"+user.getCodigoemp()+"'  and o.curso.periodo.codigoper = '"+periodo.getCodigoper()+"' ");
    Cursos curso = new Cursos();
    curso.setDescripcion("[Seleccione]");
    cursos.add(0,curso);
    
                

    ses.getAttribute("");
    Permisos permiso = new Permisos();
    byte[] data = null;
    String destinatarios ="";
 
  
public void guardar(){
 
    Correos correo = new Correos();
    correo.setAdjunto(data);
    correo.setTema(titulo.value);
    correo.setContenido(contenido.value);
    correo.setArchivo(nombrearchivo.value);
    correo.setRemitente(user.getCodigoemp());
    correo.setRemitenten(user.getApellidos()+" "+ user.getNombres());
    correo.setArchivado(false);
    correo.setEliminado(false);
    correo.setFecha(new Date());
     correo.setTiporemitente("P");
    correo.setLeido(false);


        String tipo = envia.selectedItem.label;
                if(tipo.contains("Estudiante")){
                        int a=0;
                        for(Iterator it = datos.getItems().iterator(); it.hasNext();) {
                                Listitem li  = (Listitem)it.next();
                                Estudiantes empe = (Estudiantes)li.getValue();
                                    correo.setTipodestinatario("E");
                                    correo.setDestinatario(empe.getCodigoest());
                                    correo.setDestinatarion(empe.getApellido()+" "+ empe.getNombre());
                                    adm.guardar(correo);

                                    correo.setTipodestinatario("R");
                                    correo.setDestinatario(empe.getRepresentante().getCodigorep());
                                    correo.setDestinatarion(empe.getRepresentante().getApellidos()+" "+ empe.getRepresentante().getNombres()+" -EST-  "+ empe.getNombre());
                                    adm.guardar(correo);
                        }
                        for(Iterator it = datos.getItems().iterator(); it.hasNext();) {
                                datos.getItems().remove(a);
                        }

                 }else{

                        int a=0;
                        for(Iterator it = datos.getItems().iterator(); it.hasNext();) {
                                Listitem li  = (Listitem)it.next();
                                Empleados empe = (Empleados)li.getValue();
                                    correo.setTipodestinatario("P");
                                    correo.setDestinatario(empe.getCodigoemp());
                                    correo.setDestinatarion(empe.getApellidos()+" "+ empe.getNombres());
                                    adm.guardar(correo);
                        }
                        for(Iterator it = datos.getItems().iterator(); it.hasNext();) {
                                datos.getItems().remove(a);
                        }


                 }

                 
     titulo.value = "";
     data = null;
     nombrearchivo.value = "";
     contenido.value = "";
Messagebox.show("Mensaje enviado con Ã‰xito...!", "Administrador Educativo", Messagebox.OK, Messagebox.INFORMATION);
            

}

void tipo(){

               
        String tipo = envia.selectedItem.label;
        if(tipo.contains("Estudiante")){
            Cursos curso = (Cursos)curs.selectedItem.value;
            buscar2(curso);
        }else{
         
                        Empleados empleado = (Empleados)curs.selectedItem.value;
                        if(empleado.getCodigoemp() == -2){

                                List equivaEncontrados = adm.query("Select d from Empleados as d ");
                                        datos = new Listbox();

                                               for (Iterator it = equivaEncontrados.iterator(); it.hasNext();) {
                                                      Empleados empleado = (Empleados) it.next();
                                                      Listitem li = new Listitem();
                                                      li.setValue(empleado);
                                                      li.appendChild(new Listcell(empleado.getApellidos()+" "+empleado.getNombres()));
                                                      datos.appendChild(li);
                                             }

                        }else{
                                Listitem item = new Listitem();
                                item.setValue(empleado);
                                item.appendChild(new Listcell(empleado.getApellidos()+" "+empleado.getNombres()));
                                datos.appendChild(item);
                        }
        }
        
}

  void buscar2(Cursos p){
       List equivaEncontrados = adm.query("Select d from Matriculas as d " +
       " where d.curso.codigocur = '"+p.getCodigocur()+"' ");
        datos = new Listbox();
        int a=0;
              for(Iterator it = datos.getItems().iterator(); it.hasNext();) {
                    datos.getItems().remove(a);
                }
               for (Iterator it = equivaEncontrados.iterator(); it.hasNext();) {
                      Matriculas acceIt = (Matriculas) it.next();
                      Listitem li = new Listitem();
                      li.setValue(acceIt.getEstudiante());
                      li.appendChild(new Listcell(acceIt.estudiante.getApellido()+" "+ acceIt.estudiante.getNombre()));
                      datos.appendChild(li);
             }
    }



void llenarCursos(){

 int a1=0;
                 for(Iterator it = datos.getItems().iterator(); it.hasNext();) {
                    datos.getItems().remove(a1);
                }
List cursos = adm.query("Select distinct o.curso from MateriaProfesor as o where o.empleado.codigoemp = '"+user.getCodigoemp()+"'  and o.curso.periodo.codigoper = '"+periodo.getCodigoper()+"' ");
    Cursos curso = new Cursos();
    curso.setDescripcion("[Seleccione]");
    Global g = new Global();
    g.setDescripcion("");
    curso.setEspecialidad(g);
    curso.setParalelo(g);
    cursos.add(0,curso);

     curs = new Listbox();
        int a=0;
              for(Iterator it = curs.getItems().iterator(); it.hasNext();) {
                    curs.getItems().remove(a);
                }
               for (Iterator it = cursos.iterator(); it.hasNext();) {
                      Cursos acceIt = (Cursos) it.next();
                      Listitem li = new Listitem();
                      li.setValue(acceIt);
                      li.appendChild(new Listcell(acceIt.getDescripcion()+" "+ acceIt.getEspecialidad()+ " " + acceIt.getParalelo()));
                      curs.appendChild(li);
             }


}

      void llenarEmpleados(){
               int a1=0;
                 for(Iterator it = datos.getItems().iterator(); it.hasNext();) {
                    datos.getItems().remove(a1);
                }

       List equivaEncontrados = adm.query("Select d from Empleados as d order by d.apellidos ");
        curs = new Listbox();
        int a=0;
              for(Iterator it = curs.getItems().iterator(); it.hasNext();) {
                    curs.getItems().remove(a);
                }
               for (Iterator it = equivaEncontrados.iterator(); it.hasNext();) {
                      Empleados acceIt = (Empleados) it.next();
                      Listitem li = new Listitem();
                      li.setValue(acceIt);
                      li.appendChild(new Listcell(acceIt.getApellidos()+" "+ acceIt.getNombres()));
                      curs.appendChild(li);
             }
                      Empleados acceIt = new Empleados(-2);
                      Listitem li = new Listitem();
                      li.setValue(acceIt);
                      li.appendChild(new Listcell("[TODOS]"));
                      curs.appendChild(li);
    }

 ]]>
        </zscript>
 
     
        <caption label="Redactar un Nuevo mensaje" />

        <grid width="100%">
            <rows>
                <row>
                    <span style="float:right"> Para (*):</span>
                    <span>
                    <radiogroup Id="envia" >
                        <radio  id="profesores" onCheck="llenarEmpleados()"   label="Profesores"/>
                        <radio id = "estudiantes"  onCheck="llenarCursos()" selected="true" label="Estudiantes"/>
                    </radiogroup>
                        <listbox id="curs" width="420px" mold="select"
                    onSelect="tipo();">

                            <listitem forEach="${cursos}" value="${each}">
                                <listcell label="${each.descripcion} ${each.especialidad}  ${each.paralelo}" />
                            </listitem>
                        </listbox>
                           </span>
                </row>
               
                <row>
                    <span></span>
                    <span>
                        <listbox id="datos" width="420px"  mold="paging" rows="5" pageSize="10"  multiple="true" oddRowSclass="non-odd"  fixedLayout="true" checkmark="true">
                            <listhead>
                                <listheader label="Nombres"  sort="auto"/>
                            </listhead>
                                
                        </listbox>
                        <button label="Quitar Selecionados">
                            <attribute name="onClick">
                        Set items = datos.getSelectedItems();
						if (items.isEmpty()) {
							alert("Seleccion un Profesor para Quitar!");
						} else {
							List al = new ArrayList(items);
							for (Iterator it = al.iterator(); it.hasNext();) {
								Listitem li = (Listitem)it.next();
								li.setSelected(false);
                                datos.removeItemAt(li.getIndex());
							}
						}

                            </attribute>
                        </button>

                    </span>
                </row>
                <row>
                    <span style="float:right"> Asunto(*):</span>
                    <span>
                        <textbox id="titulo"  maxlength="100" cols="40"  />
        Ej. Deber de Matematicas
                    </span>

                </row>
                <row>
                    <span style="float:right"> Archivo:</span>
                    <span>
                        <textbox value="" cols="30" readonly="true" id="nombrearchivo" />
                        <button label="Adjuntar " image="/images/adjunto.gif" id="ima">
                            <attribute name="onClick">{

            Media media0 = Fileupload.get();
                    if (media0 instanceof AMedia) {
                            AMedia media = (AMedia) media0;
                           //String tipo = "."+media.getFormat();
                            String nombre= media0.getName();
                            try{
                                data = media.getByteData();

                            }catch(Exception e){
                            System.out.println(""+e);
                                try{
                                        data = media.getStringData().getBytes();
                                }catch(Exception ax){
                                        System.out.println(""+ax);
                                         Messagebox.show("No puede adjuntar este tipo de archivos...!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
                                         return;
                                }


                            }
                            nombrearchivo.value = media0.getName();

                    }else{
                                   data =  media0.getByteData();
                                   nombrearchivo.value = media0.getName();
                   }

		}


                            </attribute>
                        </button>
                         <button image="/images/guardar.gif" id="guardar123" label="Enviar Correo"   onClick="guardar();"/>
                   </span>
                </row>
                <row>
                    <span style="float:right;align:top"> Mensaje</span>
        
                    <fckeditor   customConfigurationsPath="/myconfig.js"   toolbarSet="Simple"   id="contenido" />
                </row>
    
 
            </rows>
        </grid>
      
        <zscript>
        public void cargando(){
        try{
                    Session ses = Sessions.getCurrent();
                      titulo.value ="";
                      jcinform.procesos.Administrador adm = new jcinform.procesos.Administrador();
                      
                      String tipo = ses.getAttribute("tipo");
                      if(tipo.equals("E")){
                              jcinform.persistencia.Estudiantes estud =  adm.buscarClave( ((Integer) ses.getAttribute("estudiante")), jcinform.persistencia.Estudiantes.class);
                              Listitem li = new Listitem();
                              li.setValue(estud);
                              li.appendChild(new Listcell(estud.getApellido()+" "+ estud.getNombre()));
                              datos.appendChild(li);
                              estudiantes.checked = true;
                      }else{
                             profesores.setChecked(true);
                             llenarEmpleados();
                             jcinform.persistencia.Empleados  estud =  adm.buscarClave( ((Integer) ses.getAttribute("estudiante")), jcinform.persistencia.Empleados.class);
                              Listitem li = new Listitem();
                              li.setValue(estud);
                              li.appendChild(new Listcell(estud.getApellidos()+" "+ estud.getNombres()));
                              datos.appendChild(li);
                              profesores.checked = true;
                            
                      }
                      titulo.value ="RE: "+ses.getAttribute("tema");
                      }catch(Exception e){}
        }

        </zscript>

    </window>
  
</zk>
