
<window onCreate='buscar("")'  width="500px" >

    <zscript>
        <![CDATA[
        import jcinform.persistencia.Global;
        import bean.EventDAO;
        import java.util.ArrayList;
        import jcinform.persistencia.Elecciones;
        import jcinform.procesos.Administrador;
        import bean.Permisos;
        import java.math.BigDecimal;
        Session ses = Sessions.getCurrent();
        Administrador adm = new Administrador();
        //List allEvents = adm.query("Select o from Elecciones as o  order by o.codigo ");
        static Elecciones empa = new Elecciones();
        Permisos permiso = new Permisos();
 
        Object media = null;

        //FUNCIONES
        void llenar(Elecciones empa){
                nombres.value = empa.getNombre();
                desde.value = empa.getDesde();
                hasta.value = empa.getHasta();
                estado.checked = empa.getEstado();
        
        }
        void estado(Boolean estado,Boolean modificar){
                if(modificar){
                        empa = (Elecciones)datos.selectedItem.value;
                }else{empa.setCodigo(0);}
                        nombres.readonly = estado;
        }


        void guardar(){
                if(nombres.value==""){
                Messagebox.show("Ingrese los campos con (*) para continuar...!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
                return;
                }


                empa.setNombre(nombres.value);
                empa.setDesde(desde.value);
                empa.setHasta(hasta.value);
                empa.setEstado(estado.checked);

                if((!empa.getCodigo().equals(0)) ){
                    adm.actualizar(empa);
                    
                }else{
                    empa.setCodigo(adm.getNuevaClave("Elecciones","codigo"));
                    adm.guardar(empa);
                }
                buscar("");
                permiso.auditar("Elecciones","Guardar",""+nombres.value);
                Messagebox.show("Registro Almacenado con Éxito...!", "Administrador Educativo", Messagebox.OK, Messagebox.INFORMATION);
                guardar.disabled=true;
                agregar.disabled=false;
                estado(true,false);
                llenar(new Elecciones(0));


        }

        Boolean verificar(String accion){
             return permiso.verificarPermiso("Elecciones",accion);

        }
        void nuevo(){
                if(verificar("Agregar")){
                guardar.disabled=false;
                llenar(new Elecciones(0));
                estado(false,false);
                //alert(empa.getCodigo());
                }else{
                Messagebox.show("No tiene permisos para realizar esta acción...!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
                }
        }
        void move(){
                llenar((Elecciones)datos.selectedItem.value);
                modificar.disabled = false;
        }
        void modificar(){
                if(verificar("Modificar")){
                guardar.disabled=false; estado(false,true);
                }else{
                Messagebox.show("No tiene permisos para realizar esta acción...!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
                }
        }
        void eliminar(){
                if(verificar("Eliminar")){
                try{
                empa = (Elecciones)datos.selectedItem.value;
                adm.eliminarObjeto(Elecciones.class, empa.getCodigo());
                datos.removeItemAt(datos.getSelectedIndex());
                permiso.auditar("Elecciones","Eliminar",""+nombres.value);
                llenar(new Elecciones(0));
                Messagebox.show("Registro Eliminado con Éxito...!", "Administrador Educativo", Messagebox.OK, Messagebox.INFORMATION);
                }catch(Exception e){
                Messagebox.show("No se pudo eliminar el Registro...!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
                }
                }else{
                Messagebox.show("No tiene permisos para realizar esta acción...!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
                }
        }
        void verificarCedula(String valor){
                if(valor.length()>9){
                List empleados = adm.query("Select o from Elecciones as o where o.identificacion = '"+valor+"' ");
                if(empleados.size()>0){
                Messagebox.show("Número de Identificación ya registrado...!", "Administrador Educativo", Messagebox.OK, Messagebox.EXCLAMATION);

                for(Iterator it = empleados.iterator(); it.hasNext();) {
                Elecciones object = (Elecciones)it.next();
                empa = object;
                }
                llenar(empa);

                }else{
                empa = new Elecciones(0);
                }

                }
        }
        void buscar(String p){
                List empleadosEncontrados = adm.query("Select o from Elecciones as o where o.nombre like '%"+p+"%' order by o.codigo ");
                datos = new Listbox();
                int a=0;
                for (Iterator it = datos.getItems().iterator(); it.hasNext();) {
                    datos.getItems().remove(a);
                }


                for (Iterator it = empleadosEncontrados.iterator(); it.hasNext();) {
                        Elecciones acceIt = (Elecciones) it.next();
                        Listitem li = new Listitem();
                        li.setValue(acceIt);
                        li.appendChild(new Listcell(acceIt.getCodigo()+" "));
                        li.appendChild(new Listcell(acceIt.getNombre()+" "));
                        li.appendChild(new Listcell(acceIt.getDesde().toLocaleString()+" "));
                        li.appendChild(new Listcell(acceIt.getHasta().toLocaleString()+" "));
                        li.appendChild(new Listcell(acceIt.getEstado()+" "));
                        datos.appendChild(li);
                }

        }
     ]]>      
    </zscript>
    <groupbox mold="3d" >
        <caption label="Agregar" />

        <grid width="100%">
            <rows>

                <row>
                    <span style="float:right"> Nombres(*):</span>
                    <textbox id="nombres"  maxlength="60" cols="40" readonly="true"   />   
                </row>
                <row>
                    <span style="float:right"> Desde(*):</span>
                    <datebox id="desde" format="dd-MM-yyyy HH:mm"    maxlength="60" cols="40" readonly="true"   />   
                </row>
                <row>
                    <span style="float:right"> Hasta(*):</span>
                    <datebox id="hasta" format="dd-MM-yyyy HH:mm"  maxlength="60" cols="40" readonly="true"   />   
                </row>
                <row>
                    <span style="float:right"> Estado(*):</span>
                    <checkbox id="estado" />
                </row>
  



            </rows>
        </grid>
        <vbox>
            <vbox>
                <hbox>
                    <button image="/images/guardar.gif" id="guardar" label="Guardar"  disabled="true"  onClick="guardar();"/>
                    <button  image="/images/nuevo.gif" id="agregar" label="Agregar" onClick="nuevo();" />
                    <button  image="/images/editar.gif" id="modificar"  label="Modificar" disabled="true"  onClick="modificar()"/>
                    <button  image="/images/eliminar.gif" id="eliminar"  label="Eliminar" disabled="true"  onClick="eliminar();"/>
                </hbox>
            </vbox>

        </vbox>

    </groupbox>
    <groupbox mold="3d" >
        <caption label="Busquedas" />
        <vbox>
            <hbox> Elecciones:  
                <textbox id="buscarText"  maxlength="60" cols="40" />  
                <button id="buscar"  label="Buscar" onClick="buscar(buscarText.getValue());"/> 
            </hbox>
            <hbox>
                <listbox mold="paging" rows="5" pageSize="10" onSelect="move();estado(true,false);eliminar.disabled=false;guardar.disabled=true" id="datos" width="450px">
                    <listhead>
                        <listheader label="Cod."/>
                        <listheader label="Nombres"/>
                        <listheader label="Desde"/>
                        <listheader label="Hasta"/>
                        <listheader label="Estado"/>

                    </listhead>
                    <listitem  forEach="${allEvents}" value="${each}">
                        <listcell label="${each.codigo}" />
                        <listcell label="${each.nombre}" />
                        <listcell label="${each.desde}" />
                        <listcell label="${each.hasta}" />
                        <listcell label="${each.estado}" />
                    </listitem>
                </listbox>


            </hbox>
        </vbox>
    </groupbox>

</window>
