
<window onCreate='buscar("")'  width="500px" >

    <zscript>
                    <![CDATA[
  import jcinform.persistencia.Global;
  import bean.EventDAO;
  import java.util.ArrayList;
  import jcinform.persistencia.Productos;
 
  import jcinform.persistencia.Periodo;
  import jcinform.procesos.Administrador;
  import bean.Permisos;
  import java.math.BigDecimal;
Session ses = Sessions.getCurrent();
    Administrador adm = new Administrador();
    Periodo periodo = (Periodo) ses.getAttribute("periodo");
    List allEvents = adm.query("Select o from Productos as o  ");
    static Productos empa = new Productos();
    Permisos permiso = new Permisos();
    Object media = null;
 
//FUNCIONES
void llenar(Productos empa){
    nombres.value = empa.getDescripcion();
    observacion.value = empa.getObservacion();
    valor.value = empa.getPrecio();
    graba.checked = empa.getGrabaiva();
}
void estado(Boolean estado,Boolean modificar){
        if(modificar){
            empa = (Productos)datos.selectedItem.value;
        }else{empa.setCodigo(0);}
        nombres.readonly = estado;
        observacion.readonly = estado;
        valor.readonly = estado;
}


 void guardar(){
  if(nombres.value==""){
    Messagebox.show("Ingrese los campos con (*) para continuar...!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
    return;
 }
 
        empa.setDescripcion(nombres.value);
        empa.setObservacion(observacion.value);
        empa.setPrecio(valor.value);
        empa.setGrabaiva(graba.checked);
        if((!empa.getCodigo().equals(0)) ){
             adm.actualizar(empa);
                List children = datos.selectedItem.children;
                  ((Listcell)children.get(0)).label = empa.getCodigo()+"";
                  ((Listcell)children.get(1)).label = empa.getDescripcion()+" ";
         }else{
             empa.setCodigo(adm.getNuevaClave("Productos","codigo"));
             adm.guardar(empa);
         }
          permiso.auditar("Productos","Guardar",""+nombres.value);
          Messagebox.show("Registro Almacenado con Éxito...!", "Administrador Educativo", Messagebox.OK, Messagebox.INFORMATION);
          guardar.disabled=true;
          agregar.disabled=false;
          estado(true,false);
          llenar(new Productos(0));


    }

   Boolean verificar(String accion){
        return permiso.verificarPermiso("Productos",accion);

    }
 void nuevo(){
    if(verificar("Agregar")){
       guardar.disabled=false;
llenar(new Productos(0));
estado(false,false);
//alert(empa.getCodigo());
    }else{
            Messagebox.show("No tiene permisos para realizar esta acción...!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
    }
}
 void move(){
        llenar((Productos)datos.selectedItem.value);
        modificar.disabled = false;
  }
void modificar(){
  if(verificar("Modificar")){
       guardar.disabled=false; estado(false,true);
    }else{
            Messagebox.show("No tiene permisos para realizar esta acción...!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
    }
}
void eliminar(){
  if(verificar("Eliminar")){
        try{
             empa = (Productos)datos.selectedItem.value;
             adm.eliminarObjeto(Productos.class, empa.getCodigo());
            datos.removeItemAt(datos.getSelectedIndex());
            permiso.auditar("Productos","Eliminar",""+nombres.value);
            llenar(new Productos(0));
                Messagebox.show("Registro Eliminado con Éxito...!", "Administrador Educativo", Messagebox.OK, Messagebox.INFORMATION);
        }catch(Exception e){
            Messagebox.show("No se pudo eliminar el Registro...!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
        }
}else{
            Messagebox.show("No tiene permisos para realizar esta acción...!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
    }
}
  void verificarCedula(String valor){
      if(valor.length()>9){
            List empleados = adm.query("Select o from Productos as o where o.identificacion = '"+valor+"' ");
            if(empleados.size()>0){
                Messagebox.show("Número de Identificación ya registrado...!", "Administrador Educativo", Messagebox.OK, Messagebox.EXCLAMATION);

                for(Iterator it = empleados.iterator(); it.hasNext();) {
                      Productos object = (Productos)it.next();
                        empa = object;
                 }
            llenar(empa);

            }else{
                empa = new Productos(0);
            }

        }
    }
  void buscar(String p){
        List empleadosEncontrados = adm.query("Select o from Productos as o " + 
        " where o.descripcion like '%"+p+"%'  order by o.codigo ");
        datos = new Listbox();
        int a=0;
            for (Iterator it = datos.getItems().iterator(); it.hasNext();) {
                    datos.getItems().remove(a);
                }


               for (Iterator it = empleadosEncontrados.iterator(); it.hasNext();) {
                      Productos acceIt = (Productos) it.next();
                      Listitem li = new Listitem();
                      li.setValue(acceIt);
                      li.appendChild(new Listcell(acceIt.getCodigo()+" "));
                      li.appendChild(new Listcell(acceIt.getDescripcion()+" "));
                      datos.appendChild(li);
             }

    }
void cargarEspe(Global g){
    empa.setEspecialidad(g);
}
void cargarSec(Global g){
    empa.setSeccion(g);
}
void cargarPar(Global g){
    empa.setParalelo(g);
}
     ]]>

    </zscript>
    <groupbox mold="3d" >
        <caption label="Agregar" />

        <grid width="100%">
            <rows>
              
                <row>
                    <span style="float:right"> Nombres(*):</span>
                        <textbox id="nombres"  maxlength="60" cols="40" readonly="true"   />   
                    </row>
                    <row>
                        <span style="float:right"> Valor(*):</span>
                        <decimalbox id="valor"  maxlength="10" cols="10" readonly="true"   />   
                    </row>  
                    <row>
                        <span style="float:right"> Graba Iva(*):</span>
                        <checkbox id="graba"   />   
                    </row>  
                    <row>
                        <span style="float:right"> Observacion(*):</span>
                        <textbox id="observacion"  maxlength="60" cols="40" readonly="true"   />   
                    </row>
            



            </rows>
        </grid>
        <vbox>
            <vbox>
                <hbox>
                    <button image="/images/guardar.gif" id="guardar" label="Guardar"  disabled="true"  onClick="guardar();"/>
                    <button  image="/images/nuevo.gif" id="agregar" label="Agregar" onClick="nuevo();" />
                    <button  image="/images/editar.gif" id="modificar"  label="Modificar" disabled="true"  onClick="modificar()"/>
                    <button  image="/images/eliminar.gif" id="eliminar"  label="Eliminar" disabled="true"  onClick="eliminar();"/>
                </hbox>
            </vbox>

        </vbox>

    </groupbox>
    <groupbox mold="3d" >
        <caption label="Busquedas" />
        <vbox>
            <hbox> Productos:  
                <textbox id="buscarText"  maxlength="60" cols="40" />  
                <button id="buscar"  label="Buscar" onClick="buscar(buscarText.getValue());"/> 
            </hbox>
            <hbox>
                <listbox mold="paging" rows="5" pageSize="10" onSelect="move();estado(true,false);eliminar.disabled=false;guardar.disabled=true" id="datos" width="450px">
                    <listhead>
                        <listheader label="Cod."/>
                        <listheader label="Nombres"/>

                    </listhead>
                    <listitem  forEach="${allEvents}" value="${each}">
                        <listcell label="${each.codigo}" />
                        <listcell label="${each.descripcion}" />
                    </listitem>
                </listbox>


            </hbox>
        </vbox>
    </groupbox>

</window>
