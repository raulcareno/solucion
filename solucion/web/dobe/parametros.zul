
<window  width="760px" >

    <zscript>
           <![CDATA[
  
        import jcinform.persistencia.Global;
        import bean.EventDAO;
        import java.util.ArrayList;
        import jcinform.persistencia.DobeEstados;
        import jcinform.persistencia.Periodo;
        import jcinform.procesos.Administrador;
        import bean.Permisos;
        import java.math.BigDecimal;
        Session ses = Sessions.getCurrent();
        Administrador adm = new Administrador();
        Periodo periodo = (Periodo) ses.getAttribute("periodo");
        List allEvents = adm.query("Select o from DobeEstados as o where o.tipo = 'abc' order by o.codigo ");
        static DobeEstados empa = new DobeEstados();
        Permisos permiso = new Permisos();
 
        Object media = null;

        //FUNCIONES
        void llenar(DobeEstados empa){
            nombre.value = empa.getNombre();
            //tipo.value = empa.getNombre();
            //llenarTipo(empa.getTipo());

        }
        void llenarTipo(String tCasa){
            List l = tipo.getChildren();
            Boolean estado = false;
                for (Iterator it = l.iterator(); it.hasNext();) {
                    Radio object = (Radio)it.next();
                    if(object.getValue().equals(tCasa)){
                        object.setSelected(true);
                        estado = true;
                        break;
                    }  

                }
            if(estado == false){
                    Radio object = (Radio)l.get(0);
                    object.setSelected(true);
            }


        }
        
        void estado(Boolean estado,Boolean modificar){
            if(modificar){
            empa = (DobeEstados)datos.selectedItem.value;
            }else{empa.setCodigo(0);}
            nombre.readonly = estado;

      }


        void guardar(){
                if(nombre.value==""){
                    Messagebox.show("Ingrese los campos con (*) para continuar...!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
                    return;
                }

                Periodo per = (Periodo) ses.getAttribute("periodo");
                empa.setNombre(nombre.value);
                empa.setTipo(tipo.selectedItem.value);
                if((!empa.getCodigo().equals(0)) ){
                    adm.actualizar(empa);
                    List children = datos.selectedItem.children;
                    ((Listcell)children.get(0)).label = empa.getCodigo()+"";
                    ((Listcell)children.get(1)).label = empa.getNombre()+" ";
                }else{
                    empa.setCodigo(adm.getNuevaClave("DobeEstados","codigo"));
                    adm.guardar(empa);
                }
                permiso.auditar("DobeEstados","Guardar",""+nombre.value);
                Messagebox.show("Registro Almacenado con Éxito...!", "Administrador Educativo", Messagebox.OK, Messagebox.INFORMATION);
                guardar.disabled=true;
                agregar.disabled=false;
                estado(true,false);
                llenar(new DobeEstados(0));


        }

        Boolean verificar(String accion){
         return permiso.verificarPermiso("Parametros_dobe",accion);

        }
        void nuevo(){
            if(verificar("Agregar")){
                guardar.disabled=false;
                llenar(new DobeEstados(0));
                estado(false,false);
                //alert(empa.getCodigo());
            }else{
                Messagebox.show("No tiene permisos para realizar esta acción...!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
            }
        }
        void move(){
            llenar((DobeEstados)datos.selectedItem.value);
            modificar.disabled = false;
        }
        void modificar(){
            if(verificar("Modificar")){
                guardar.disabled=false; estado(false,true);
            }else{
              Messagebox.show("No tiene permisos para realizar esta acción...!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
            }
        }
        void eliminar(){
            if(verificar("Eliminar")){
                try{
                    empa = (DobeEstados)datos.selectedItem.value;
                    adm.eliminarObjeto(DobeEstados.class, empa.getCodigo());
                    datos.removeDobeEstadosAt(datos.getSelectedIndex());
                    permiso.auditar("DobeEstados","Eliminar",""+nombre.value);
                    llenar(new DobeEstados(0));
                    Messagebox.show("Registro Eliminado con Éxito...!", "Administrador Educativo", Messagebox.OK, Messagebox.INFORMATION);
                }catch(Exception e){
                 Messagebox.show("No se pudo eliminar el Registro...!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
                }
            }else{
                Messagebox.show("No tiene permisos para realizar esta acción...!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
            }
        }
 
        void buscar(String p){
            List empleadosEncontrados = adm.query("Select o from DobeEstados as o  where o.tipo = '"+tipo.selectedItem.value+"' order by o.tipo, o.nombre ");
            datos = new Listbox();
            int a=0;
            for (Iterator it = datos.getItems().iterator(); it.hasNext();) {
                 datos.getItems().remove(a);
            }


            for (Iterator it = empleadosEncontrados.iterator(); it.hasNext();) {
                DobeEstados acceIt = (DobeEstados) it.next();
                Listitem li = new Listitem();
                li.setValue(acceIt);
                li.appendChild(new Listcell(acceIt.getCodigo()+" "));
                li.appendChild(new Listcell(acceIt.getNombre()+" "));
                li.appendChild(new Listcell(acceIt.getTipo()+" "));
                datos.appendChild(li);
            }

        }
        void cargarEspe(Global g){
         empa.setEspecialidad(g);
        }
        void cargarSec(Global g){
            empa.setSeccion(g);
        }
        void cargarPar(Global g){
         empa.setParalelo(g);
        }
        
        
  ]]>
    </zscript>
    <groupbox mold="3d" >
        <caption label="Agregar" />

        <grid width="100%">
            <rows>
                <row>
                    <span style="float:right"> Seleccione primero el Tipo:</span>
                    <listbox mold="select" onSelect='buscar("")' Id="tipo" >
                        <listitem selected="true" value="cero" label="[Seleccione]"/>
                        <listitem value="P" label="Parientes"/>
                        <listitem value="C" label="Estado Civil"/>
                        <listitem value="E" label="Estados"/>
                        <listitem value="V" label="Tipos de Vivienda"/>
                        <listitem value="S" label="Servicios"/>
                        <listitem value="I" label="Tipos de Ingresos"/>
                        <listitem value="E" label="Tipos de Egresos"/>
                        <listitem value="CL" label="Clubes"/>
<!--P:parientes; C:civil; E:estados; V: vivienda; TP: madera; S: servicios; I:ingresos; E:EGRESOs; CL:CLUBES-->
                    </listbox>
                </row>
                <row>
                    <span style="float:right"> Nombre(*):</span>
                    <textbox id="nombre"  maxlength="200" cols="50" readonly="true"   />   
                </row>
            </rows>
        </grid>
        <vbox>
            <vbox>
                <hbox>
                    <button image="/images/guardar.gif" id="guardar" label="Guardar"  disabled="true"  onClick="guardar();"/>
                    <button  image="/images/nuevo.gif" id="agregar" label="Agregar" onClick="nuevo();" />
                    <button  image="/images/editar.gif" id="modificar"  label="Modificar" disabled="true"  onClick="modificar()"/>
                    <button  image="/images/eliminar.gif" id="eliminar"  label="Eliminar" disabled="true"  onClick="eliminar();"/>
                </hbox>
            </vbox>

        </vbox>

    </groupbox>
    <groupbox mold="3d" >
        <caption label="Busquedas" />
        <vbox>
            <hbox> DobeEstados:  
                <textbox id="buscarText"  maxlength="60" cols="40" />  
                <button id="buscar"  label="Buscar" onClick="buscar(buscarText.getValue());"/> 
            </hbox>
            <hbox>
                <listbox mold="paging" rows="10" pageSize="10" onSelect="move();estado(true,false);eliminar.disabled=false;guardar.disabled=true" id="datos" width="750px">
                    <listhead>
                        <listheader label="Cod."/>
                        <listheader label="Nombres"/>
                        <listheader visible="false" label="TP"/>
                    </listhead>
                    <listitem  forEach="${allEvents}" value="${each}">
                        <listcell label="${each.codigo}" />
                        <listcell label="${each.nombre}" />
                        <listcell label="${each.tipo}" />
                    </listitem>
                </listbox>
            </hbox>
        </vbox>
    </groupbox>

</window>
