<?page id="main-page"?>
<zk>
    <zscript>
        <![CDATA[
import bean.Procesos;
import java.math.BigDecimal;
import jcinform.persistencia.*;
import jcinform.procesos.Administrador;
 import bean.notas;
import java.util.Date;
import org.joda.time.DateMidnight;
import org.zkoss.zul.Listbox;

 Administrador adm = new Administrador();
Session ses = Sessions.getCurrent();
Periodo periodo = (Periodo) ses.getAttribute("periodo");

List cursos = adm.query("Select o from Cursos as o "+ 
" where o.periodo.codigoper = '"+periodo.getCodigoper()+"' order by o.secuencia, o.descripcion, o.paralelo.descripcion ");
List materias = adm.query("Select o from Global as o "+ 
" where o.grupo = 'MAT' and o.descripcion like '%PROM%' order by o.descripcion ");

void aprovechamiento(){
        
        Procesos pro = new Procesos();
                Set items = cursosList.getSelectedItems();
						if (items.isEmpty()) {
							alert("Seleccion un al menos un Curso...!");
                            return;
						}else{
							List al = new ArrayList(items);
							for (Iterator it = al.iterator(); it.hasNext();) {
								Listitem li = (Listitem)it.next();
                                    Cursos curses = li.getValue();
                                        pro.aprovechamiento(curses);
                                    
							}
						}
    
        Messagebox.show("Proceso terminado...!", "Administrador Educativo", Messagebox.OK, Messagebox.INFORMATION);
  }
  
  void aprovechamiento2(){
        
        Procesos pro = new Procesos();
                Set items = cursosList2.getSelectedItems();
						if (items.isEmpty()) {
							alert("Seleccion un al menos un Curso...!");
                            return;
						}else{
							List al = new ArrayList(items);
							for (Iterator it = al.iterator(); it.hasNext();) {
								Listitem li = (Listitem)it.next();
                                    Cursos curses = li.getValue();
                                        pro.aprovechamiento2(curses,materiasList.selectedItem.value);
                                    
							}
						}
    
        Messagebox.show("Proceso terminado...!", "Administrador Educativo", Messagebox.OK, Messagebox.INFORMATION);
  }
void disciplina2(){
        Procesos pro = new Procesos();
                 Set items = cursosList2.getSelectedItems();
						if (items.isEmpty()) {
							alert("Seleccion un al menos un Curso...!");
                            return;
						}else{
							List al = new ArrayList(items);
							for (Iterator it = al.iterator(); it.hasNext();) {
								Listitem li = (Listitem)it.next();
                                    Cursos curses = li.getValue();
                                        pro.disciplina(curses);
                                    
							}
						}
    
        Messagebox.show("Proceso terminado...!", "Administrador Educativo", Messagebox.OK, Messagebox.INFORMATION);
        
}
void disciplina(){
        Procesos pro = new Procesos();
                 Set items = cursosList.getSelectedItems();
						if (items.isEmpty()) {
							alert("Seleccion un al menos un Curso...!");
                            return;
						}else{
							List al = new ArrayList(items);
							for (Iterator it = al.iterator(); it.hasNext();) {
								Listitem li = (Listitem)it.next();
                                    Cursos curses = li.getValue();
                                        pro.disciplina(curses);
                                    
							}
						}
    
        Messagebox.show("Proceso terminado...!", "Administrador Educativo", Messagebox.OK, Messagebox.INFORMATION);
        
}


void recalculo(){

    notas nso = new notas();
     Set items = curs.getSelectedItems();
						if (items.isEmpty()) {
							alert("Seleccion un al menos un Curso...!");
                            return;
						}else{
							List al = new ArrayList(items);
							for (Iterator it = al.iterator(); it.hasNext();) {
								Listitem li = (Listitem)it.next();
                                    Cursos curses = li.getValue();
                                 
                                        nso.calcularDisciplina(curses);
                                    
							}
						}
    

}
void generar(String tipo){
    notas nso = new notas();
    nso.generarNumeros(tipo);

}
]]>
    </zscript>
    <portallayout >
        <portalchildren style="padding: 5px" width="50%">

            <panel title="RECORD ACADEMICO"    style="margin-bottom:10px" framable="true" >
                <panelchildren>

                    <grid>
                        <rows>
                            <row style="background:transparent"  spans="2">

                Nos permite hacer el Recalculo del Promedio final para el Record Académico

                            </row>
                            <row style="background:transparent" >
                                <span style="float:right"> Curso(*):</span>
                                <span>
                                    <listbox   id="cursosList"  height="150px" multiple="true" checkmark="true"  width="420px" >
                                        <listhead>
                                            <listheader label="Seleccionar Todos"/>    
                                        </listhead>
                                        <listitem forEach="${cursos}" value="${each}">
                                            <listcell label="${each.descripcion} ${each.especialidad}  ${each.paralelo}" />
                                        </listitem>
                                    </listbox>
                                  
                                    <button label="Aprovechamiento"   image="/images/run.gif" onClick="aprovechamiento();"/>
                                    <button label="Disciplina"   image="/images/run.gif" onClick="disciplina()"/>
                                </span>
                            </row>
                        </rows>
                    </grid>


                </panelchildren>

            </panel>
            <panel framable="true" style="margin-bottom:10px"  title="RECALCULO DE DISCIPLINA">
                <panelchildren>
                    <grid>
                        <rows>
                            <row  style="background:transparent" spans="2">

                                <span style="color:blue"> Recalculo de notas de disciplina, en caso de usar modo de caliciación diferente a ingreso de notas de disciplina manualmente
                                </span>
                            </row>
                            <row style="background:transparent" >

                                <span style="float:right"> Curso(*):</span>
                                <span>
                                  
                                    <listbox fixedLayout="true" height="150px" multiple="true" checkmark="true" id="curs" width="420px">
                                        <listhead>
                                            <listheader label="Seleccionar Todos"/>    
                                        </listhead>

                                        <listitem forEach="${cursos}" value="${each}">
                                            <listcell label="${each.descripcion} ${each.especialidad}  ${each.paralelo}" />

                                        </listitem>
                                    </listbox>
                                           

                                    <button label="Recalcular Disciplina"    image="/images/run.gif"  onClick="recalculo();"/>
                                </span>
                            </row>
        
                        </rows>
                    </grid>
                </panelchildren>

            </panel>
        </portalchildren>
        <portalchildren style="padding: 5px"  width="50%">
            <panel  framable="true" style="margin-bottom:10px" title="RECALCULO DE ACTAS DE GRADO">
                <panelchildren>
                    <grid>
                        <rows>
           
                            <row style="background:transparent"  spans="2">
                                Generar Actas de Grado, únicamente a los que no están perdidos de año o suspensos
                                (Se recomienda primero que actualice los datos en Matriculas > Actualizar)
                            </row>

                            <row style="background:transparent"  spans="2">
                                <button label="Generar Números de Actas"      onClick='generar("all")' />
                            </row>
                        </rows>
                    </grid>
                </panelchildren>

            </panel>

            <panel framable="true" style="margin-bottom:10px"  title="ACTAS DE SUSPENSO">
                <panelchildren>
                    <grid>
                        <rows>
                            <row style="background:transparent"  spans="2">
                                Generar Actas de Grado Suspensos
                            </row>
                            <row  style="background:transparent" spans="2">
                                <button label="Generar Números de Actas"   onClick='generar("sus")' />
                            </row>
                        </rows>
                    </grid>
                </panelchildren>
            </panel>

            <panel title="RECORD ACADEMICO SI MATERIA"    style="margin-bottom:10px" framable="true" >
                <panelchildren>

                    <grid>
                        <rows>

                            <row style="background:transparent"  spans="2">

                Nos permite hacer el Recalculo del Promedio final para el Record Académico, si el promedio es una materia.

                            </row>
                            <row>
                                <span style="float:right"> Materias(*):</span>
                              <listbox   id="materiasList" mold="select" width="420px" >
                                        <listhead>
                                            <listheader label="Seleccionar Todos"/>    
                                        </listhead>
                                        <listitem forEach="${materias}" value="${each}">
                                            <listcell label="${each.descripcion}" />
                                        </listitem>
                                    </listbox>    
                            </row>
                            <row style="background:transparent" >
                                <span style="float:right"> Curso(*):</span>
                                <span>
                                    <listbox   id="cursosList2"  height="150px" multiple="true" checkmark="true"  width="420px" >
                                        <listhead>
                                            <listheader label="Seleccionar Todos"/>    
                                        </listhead>
                                        <listitem forEach="${cursos}" value="${each}">
                                            <listcell label="${each.descripcion} ${each.especialidad}  ${each.paralelo}" />
                                        </listitem>
                                    </listbox>
                                  
                                    <button label="Aprovechamiento"   image="/images/run.gif" onClick="aprovechamiento2();"/>
                                    <button label="Disciplina"   image="/images/run.gif" onClick="disciplina()"/>
                                </span>
                            </row>
                        </rows>
                    </grid>


                </panelchildren>

            </panel>
        </portalchildren>
    </portallayout>
</zk>

