<?xml version="1.0" encoding="utf-8"?>
<?page title="Administrador Educativo"?>
<zk xmlns="http://www.zkoss.org/2005/zul">
    <window  id="principales" mode="overlapped"  maximizable="true"  title="Historial de los Estudiantes" width="800px" border="normal"
     closable="true" sizable="true">
        <zscript>
<![CDATA[
  import jcinform.persistencia.Global;
  import bean.EventDAO; 
  import java.util.ArrayList; 
  import jcinform.persistencia.*;
  import jcinform.procesos.Administrador;
  import bean.Permisos;
  import java.io.FileNotFoundException;
  import java.io.FileOutputStream;
  import java.io.IOException;
  import java.util.logging.Level;
  import java.util.logging.Logger;
import java.util.Vector;
import bean.matriculasBean;


import sources.CustomDataSource;
import net.sf.jasperreports.engine.JRDataSource;
import sources.*;
import bean.notas;
import java.math.BigDecimal;
import bean.notas;
import jcinform.persistencia.*;
import jcinform.procesos.Administrador;
import org.zkforge.yuiext.grid.Row;
import java.util.Date;
import org.joda.time.DateMidnight;
import org.zkoss.zul.Listbox;
    Administrador adm = new Administrador();
    List allEvents = adm.query("Select o from Estudiantes as o where o.cedula = 0");
    static Estudiantes estudent = new Estudiantes();
    static Representante representante0 = new Representante();
    static Matriculas matricula = new Matriculas();
 Session ses = Sessions.getCurrent();
 Periodo periodo = (Periodo) ses.getAttribute("periodo");
 Permisos permiso = new Permisos();
    List cursos = adm.query("Select o from Cursos as o "
    + " where o.periodo.codigoper = '"+ periodo.getCodigoper() +"'  ");

    Object media = null;
 

        //FUNCIONES
        void cargarFoto(byte[] imageData){
          foto0.setContent(new org.zkoss.image.AImage("fotito", imageData));
        }
        void cargarVacio(){
          foto0.setContent(new org.zkoss.image.AImage("t", desktop.webApp.getResourceAsStream("/fotos/vacio.gif")));
        }
       Integer nuevaMatricula() {
       Administrador adm = new Administrador();

        List NoActualMatricula = adm.query("Select o from ParametrosGlobales as o " +
                "where o.variable = 'MATRICULA' and o.periodo.codigoper = '" + periodo.getCodigoper() + "'");
        ParametrosGlobales parametros = new ParametrosGlobales();
        if(NoActualMatricula.size()<=0){
            alert("Falta copiar los parámetros a este Año Lectivo");
        }
        parametros = (ParametrosGlobales) NoActualMatricula.get(0);
        int noMatri = 0;
        Double decs = parametros.getNvalor();
        Long val = java.lang.Math.round(decs);
        noMatri = Integer.valueOf(val.toString());
        noMatri += 1;
        List  numeroYa = adm.query("Select o from Matriculas as o " +
                "where o.curso.periodo.codigoper = '" + periodo.getCodigoper() + "' " +
                "and o.numero = '" + noMatri + "'");
        if (numeroYa.size() > 0) {
            Integer nClave = adm.geUltimaMatricula("Select max(o.numero) from Matriculas as o " +
                    "where o.curso.periodo.codigoper= '" + periodo.getCodigoper() + "'"  );
            parametros.setNvalor(new Double(nClave + 1));
            adm.actualizar(parametros);
            return nClave + 1;
        } else {
            parametros.setNvalor(new Double(noMatri));
            adm.actualizar(parametros);
            return noMatri;
        }
    }

    void generarClave(Boolean boton){
    try{
    String uss = usuario.value;
    if(boton==false){
        if(uss.trim() != ""){
                return;
        }
    }
        String user ="";
        String caracter="1234567890";
        caracter+="JCQWERTYUIOPASDFGHJKLZXCVBNM";
        int numero_caracteres=10;
        int total=caracter.length();
        String  clave2="";
        for(int a=0;a<numero_caracteres;a++){
            clave2+=caracter.charAt(((Double)(total*Math.random())).intValue());
        }

            clave.value = clave2;
             caracter=""+apellidos.value.trim().replace(" ","");
            caracter+="JC"+nombres.value.trim().replace(" ","");
            numero_caracteres=6;
            total=caracter.length();
            user ="";
            for(int a=0;a<numero_caracteres;a++){
                user+=caracter.charAt(((Double)(total*Math.random())).intValue());
            }
            usuario.value = user;
            }catch(Exception e){
            System.out.println("ERROR EN GENERAR CLAVE"+e);
            }
    }

void llenar(Estudiantes estudent){
    codigo.value = estudent.getCodigoest();
    cedula.value = estudent.getCedula();
    nombres.value = estudent.getNombre();
    apellidos.value = estudent.getApellido();
    direccion.value = estudent.getDireccion();
    telefono.value = estudent.getTelefono();
    genero.value = estudent.getGenero();
    nacido.value = estudent.getFechanacimiento();
    mail.value = estudent.getMail();
    usuario.value = estudent.getUsuario();
    nobus.value = estudent.getNobus();
    
    
    clave.value = permiso.decriptar(estudent.getClave());
          if(estudent.getEstado()!=null){
                estadoe.checked= estudent.getEstado();
            }
            if(estudent.getAdventista()!=null){
                 
                adventista.checked = estudent.getAdventista();
            }
            if(estudent.getTransporte()!=null){
                transporte.checked = estudent.getTransporte();
            }
           



        if(estudent.getRepresentante()==null){
            Representante re = new Representante(0);
            re.setTipoidentificacion("CF");
            estudent.setRepresentante(re);
        }
        llenarRepresentante(estudent.getRepresentante());

List matricula = adm.query("Select o from Matriculas as o where o.estudiante.codigoest = '"+estudent.getCodigoest()+"' "
+ " and o.curso.periodo.codigoper = '"+periodo.getCodigoper()+"'  ");
    if(matricula.size()>0)
    {
        //llenarMatricula(matricula.get(0));
    }else{
        //llenarMatricula(new Matriculas(0));
        //Messagebox.show("No se encuentra Inscrito ni Matriculado...!", "Administrador Educativo", Messagebox.OK, Messagebox.EXCLAMATION);
    }
                      aspecto.value = 0;
                      primero.value = "";
                      segundo.value = "";
                      tercero.value =  "";
                      cuarto.value =  "";
                      quinto.value =  "";
                      sexto.value =  "";
                      septimo.value =  "";
                       tipoaspecto.setSelectedIndex(0);

        List empleadosEncontrados = adm.query("Select o from Aspectos as o where o.grupo = 'APROV' and o.estudiante.codigoest = '"+codigo.value+"' ");
        aspectoa.value = 0;
        aspectod.value = 0;
               for (Iterator it = empleadosEncontrados.iterator(); it.hasNext();) {
                      Aspectos acceIt = (Aspectos) it.next();
                      primeroa.value = acceIt.getObserva1();
                      segundoa.value = acceIt.getObserva2();
                      terceroa.value = acceIt.getObserva3();
                      cuartoa.value = acceIt.getObserva4();
                      quintoa.value = acceIt.getObserva5();
                      sextoa.value = acceIt.getObserva6();
                      septimoa.value = acceIt.getObserva7();
                      aspectoa.value = acceIt.getAspCodigo();

             }
             empleadosEncontrados = adm.query("Select o from Aspectos as o where o.grupo = 'DISCI' and o.estudiante.codigoest = '"+codigo.value+"' ");
               for (Iterator it = empleadosEncontrados.iterator(); it.hasNext();) {
                      Aspectos acceIt = (Aspectos) it.next();
                      primerod.value = acceIt.getObserva1();
                      segundod.value = acceIt.getObserva2();
                      tercerod.value = acceIt.getObserva3();
                      cuartod.value = acceIt.getObserva4();
                      quintod.value = acceIt.getObserva5();
                      sextod.value = acceIt.getObserva6();
                      septimod.value = acceIt.getObserva7();
                      aspectod.value = acceIt.getAspCodigo();

             }
          
llenarVisitas();
             guardara.disabled = false;





}

void llenarVisitas(){
  List empleadosEncontrados = adm.query("Select o from Aspectos as o where o.grupo = 'VISIT' and o.estudiante.codigoest = '"+codigo.value+"' ");
                datos = new Listbox();
                int a=0;
                    for (Iterator it = datos.getItems().iterator(); it.hasNext();) {
                            datos.getItems().remove(a);
                        }
               for (Iterator it = empleadosEncontrados.iterator(); it.hasNext();) {
                      Aspectos acceIt = (Aspectos) it.next();
                      Listitem li = new Listitem();
                      li.setValue(acceIt);
                      li.appendChild(new Listcell(acceIt.getFecha().toLocaleString().substring(0,10)+""));
                      li.appendChild(new Listcell(acceIt.getObserva1()));
                      li.appendChild(new Listcell(acceIt.getObserva2()+""));
                      datos.appendChild(li);
             }


}

void llenarMatricula(Matriculas matri){
         codigomat.value =matri.getCodigomat();
         accion.value = matri.getEstado();
         fechamatricula.value =matri.getFechamat();
         numero.value = matri.getNumero();
         folio.value = matri.getFolio();
          if(matri.getNuevo()!=null){
                nuevo.checked = matri.getNuevo();
            }

         try{
            beca.value = new BigDecimal(matri.getBeca());
            otros.value = new BigDecimal(matri.getOtros());
         }catch(Exception e){}

         observacion.value = matri.getObservacion();
            if(matri.getCurso() != null){
                    Listitem item = new Listitem();
                    item.setValue(matri.getCurso());
                    item.appendChild(new Listcell(matri.getCurso()+""));
                    curso.appendChild(item);
                    curso.setSelectedItem(item);
                    //bd1.value = matri.getCurso().getDescripcion()+" "+ matri.getCurso().getEspecialidad()+" "+ matri.getCurso().getParalelo();
            }
            if(matri.getFoto() != null){
                    cargarFoto(matri.getFoto());
            }else{
                    cargarVacio();
            }
}

void llenarRepresentante(Representante repren){
    codigore.value = repren.getCodigorep();
    cedulare.value = repren.getIdentificacionrepre();
    nombresre.value = repren.getNombres();
    apellidosre.value = repren.getApellidos();
    direccionre.value = repren.getDireccion();
    telefonore.value = repren.getTelefono();
    emailre.value = repren.getEmail();
    cedulapa.value = repren.getIdentificacionpadre();
    nombrespa.value = repren.getNompadre();
    apellidospa.value = repren.getApepadre();
    direccionpa.value = repren.getDirpadre();
    telefonopa.value = repren.getTelpadre();
    emailpa.value = repren.getMailpadre();
    parentesco.value = repren.getParentesco();
    ocupacionpa.value = repren.getOcupacionpadre();
    profesionpa.value = repren.getProfesionpadre();
    cedulama.value = repren.getIdentificacionmadre();
    nombresma.value = repren.getNommadre();
    apellidosma.value = repren.getApemadre();
    direccionma.value = repren.getDirmadre();
    telefonoma.value = repren.getTelmadre();
    emailma.value = repren.getMailmadre();
    ocupacionma.value = repren.getOcupacionmadre();
    profesionma.value = repren.getProfesionmadre();

     
}
 


 void guardar(){
 try{
       
             Aspectos aspe = new Aspectos();
             aspe.setAspCodigo(aspecto.value);
             aspe.setObserva1(primero.value);
             aspe.setObserva2(segundo.value);
             aspe.setObserva3(tercero.value);
             aspe.setObserva4(cuarto.value);
             aspe.setObserva5(quinto.value);
             aspe.setObserva6(sexto.value);
             aspe.setObserva7(septimo.value);
             aspe.setGrupo(tipoaspecto.selectedItem.value);
             aspe.setEstudiante(new Estudiantes(codigo.value));
            
        if((!aspe.getAspCodigo().equals(0))){
             adm.actualizar(aspe);
          }else{
            aspe.setAspCodigo(adm.getNuevaClave("Aspectos","aspCodigo"));
            adm.guardar(aspe);
            aspecto.value = aspe.getAspCodigo();
         }

        Messagebox.show("Registro Almacenado con Éxito...!", "Administrador Educativo", Messagebox.OK, Messagebox.INFORMATION);




        }catch(Exception e){
                alert("Error:"+e); System.out.println(""+e.getCause()); System.out.println(""+e.getLocalizedMessage());                System.out.println(""+e.getMessage());
                System.out.println(""+e.getStackTrace()); System.out.println(""+e.getCause());
        }

    }
     void guardara(){
 try{

             Aspectos aspe = new Aspectos();
             aspe.setAspCodigo(aspectoa.value);
             aspe.setObserva1(primeroa.value);
             aspe.setObserva2(segundoa.value);
             aspe.setObserva3(terceroa.value);
             aspe.setObserva4(cuartoa.value);
             aspe.setObserva5(quintoa.value);
             aspe.setObserva6(sextoa.value);
             aspe.setObserva7(septimoa.value);
             aspe.setGrupo("APROV");
             aspe.setEstudiante(new Estudiantes(codigo.value));

        if((!aspe.getAspCodigo().equals(0))){
             adm.actualizar(aspe);
          }else{
            aspe.setAspCodigo(adm.getNuevaClave("Aspectos","aspCodigo"));
            adm.guardar(aspe);
            aspectoa.value = aspe.getAspCodigo();
         }
         aspe = new Aspectos();
             aspe.setAspCodigo(aspectod.value);
             aspe.setObserva1(primerod.value);
             aspe.setObserva2(segundod.value);
             aspe.setObserva3(tercerod.value);
             aspe.setObserva4(cuartod.value);
             aspe.setObserva5(quintod.value);
             aspe.setObserva6(sextod.value);
             aspe.setObserva7(septimod.value);
             aspe.setGrupo("DISCI");
             aspe.setEstudiante(new Estudiantes(codigo.value));

        if((!aspe.getAspCodigo().equals(0))){
             adm.actualizar(aspe);
          }else{
            aspe.setAspCodigo(adm.getNuevaClave("Aspectos","aspCodigo"));
            adm.guardar(aspe);
            aspectod.value = aspe.getAspCodigo();
         }

        Messagebox.show("Registro Almacenado con Éxito...!", "Administrador Educativo", Messagebox.OK, Messagebox.INFORMATION);




        }catch(Exception e){
                alert("Error:"+e); System.out.println(""+e.getCause()); System.out.println(""+e.getLocalizedMessage());                System.out.println(""+e.getMessage());
                System.out.println(""+e.getStackTrace()); System.out.println(""+e.getCause());
        }

    }


 void guardareg(){
 try{

         

             Aspectos aspe = new Aspectos();
             aspe.setAspCodigo(codigovisita.value);
             aspe.setObserva1(asunto.value);
             aspe.setObserva2(responsable.value);
             aspe.setObserva3(observacion.value);
             aspe.setObserva4(resultado.value);
             aspe.setGrupo("VISIT");
             aspe.setEstudiante(new Estudiantes(codigo.value));
             aspe.setFecha(fecha.value);
        if((!aspe.getAspCodigo().equals(0))){
             adm.actualizar(aspe);
          }else{
            aspe.setAspCodigo(adm.getNuevaClave("Aspectos","aspCodigo"));
            adm.guardar(aspe);
            codigovisita.value = aspe.getAspCodigo();
         }
            llenarVisitas();
            limpiar();
        Messagebox.show("Registro Almacenado con Éxito...!", "Administrador Educativo", Messagebox.OK, Messagebox.INFORMATION);
        
        }catch(Exception e){
                alert("Error:"+e); System.out.println(""+e.getCause()); System.out.println(""+e.getLocalizedMessage());                System.out.println(""+e.getMessage());
                System.out.println(""+e.getStackTrace()); System.out.println(""+e.getCause());
        }

    }

   Boolean verificar(String accion){
        return permiso.verificarPermiso("Matricular",accion);

    }
 
 
 
 
void buscarEstudiante(String valor){

int ini = valor.indexOf("[");
int fin = valor.indexOf("]");
valor = valor.substring(ini+1, fin);
            List empleados = adm.query("Select o from Estudiantes as o where o.codigoest = '"+valor+"' ");
            if(empleados.size()>0){
                for(Iterator it = empleados.iterator(); it.hasNext();) {
                      Estudiantes object = (Estudiantes)it.next();
                      estudent = object;
                 }
            llenar(estudent);
           
            }else{
                estudent = new Estudiantes(0);
            }

    }
void buscarRepresentante(String valor){

int ini = valor.indexOf("[");
int fin = valor.indexOf("]");
valor = valor.substring(ini+1, fin);
            List empleados = adm.query("Select o from Representante as o where o.codigorep = '"+valor+"' ");
            if(empleados.size()>0){
                Representante object = null;
                for(Iterator it = empleados.iterator(); it.hasNext();) {
                 object = (Representante)it.next();
                      //estudent = object;
                 }
            llenarRepresentante(object);
            modificar.disabled=false;
            }else{
                estudent = new Representante(0);
            }

    }
    void limpiarRepresentante(){
            Representante object = new Representante();
            object.setTipoidentificacion("CF");
            llenarRepresentante(object);
    }

       void limpiar(){
          if(codigo.value == null ){
                Messagebox.show("Seleccione un Estudiante...!", "Administrador Educativo", Messagebox.OK, Messagebox.EXCLAMATION);
               return;
            }



       codigovisita.value = 0;

         asunto.value = "";
         responsable.value = "";
         fecha.value = new Date();
         observacion.value = "";
         resultado.value = "";
         guardare.disabled=false;
         codigovisita.value = 0;
         }

         void modificar(){
                   guardare.disabled = false;

            }


   void buscar(String p){
      aspecto.value = 0;
                      primero.value = "";
                      segundo.value = "";
                      tercero.value =  "";
                      cuarto.value =  "";
                      quinto.value =  "";
                      sexto.value =  "";
                      septimo.value =  "";

        if(tipoaspecto.selectedItem.value.equals("0")){
             guardar.disabled = true;
            return;
         }

                    if(codigo.value == null ){
                            Messagebox.show("Seleccione un Estudiante...!", "Administrador Educativo", Messagebox.OK, Messagebox.EXCLAMATION);
                             tipoaspecto.setSelectedIndex(0);
                             aspecto.value = 0;
                             guardar.disabled=true;
                            return;
                    }
                    guardar.disabled=false;
                  
         List empleadosEncontrados = adm.query("Select o from Aspectos as o where o.grupo = '"+p+"' and o.estudiante.codigoest = '"+codigo.value+"' ");
               for (Iterator it = empleadosEncontrados.iterator(); it.hasNext();) {
                      Aspectos acceIt = (Aspectos) it.next();
                      primero.value = acceIt.getObserva1();
                      segundo.value = acceIt.getObserva2();
                      tercero.value = acceIt.getObserva3();
                      cuarto.value = acceIt.getObserva4();
                      quinto.value = acceIt.getObserva5();
                      sexto.value = acceIt.getObserva6();
                      septimo.value = acceIt.getObserva7();
                      aspecto.value = acceIt.getAspCodigo();

             }

    }
void cargar(Global g){
    estudent.setPerfil(g);
}

void llenarConsumidor(){

if( (tipofac.selectedItem.value).equals("CF") ){
    cedulafac.value = "9999999999999";
    nombresfac.value = "CONSUMIDOR FINAL";
    direccionfac.value = "S/D";
    telefonofac.value = "9999999999999";

}else{
    cedulafac.value = "";
    nombresfac.value = "";
    direccionfac.value = "";
    telefonofac.value = "";
}


}



//PARA REPORTES
public JRDataSource certificados(Matriculas matricula,String tipo){
      Administrador adm = new Administrador();
      Session ses = Sessions.getCurrent();
        Periodo periodo = (Periodo) ses.getAttribute("periodo");
        ArrayList detalle = new ArrayList();
        String query = "SELECT mat FROM Matriculas AS mat " +
                "WHERE  mat.estado like '%Matriculado%' " +
                "and mat.codigomat = '" + matricula.getCodigomat() + "' ";
        List hoy = adm.query(query);
        for (Iterator it = hoy.iterator(); it.hasNext();) {
            Matriculas elem = (Matriculas) it.next();
            detalle.add(elem);
        }
        JRDataSource ds = null;
        if(tipo.equals("CM")){
             ds = new ReporteCertificadoDataSource(detalle);
        }else{
              ds = new ReporteActaDataSource(detalle);
        }
        return ds;

}
		void showReport(String tipo) {
			//Preparing parameters

            Institucion insts = periodo.getInstitucion();
            
			Map parametros = new HashMap();
            parametros.put("denominacion", insts.getDenominacion());
            parametros.put("nombre", insts.getNombre());
            parametros.put("periodo", insts.getDireccion());
            parametros.put("slogan", insts.getSlogan());
            JRDataSource datasource = null;
            if(tipo.equals("CM")){
                    datasource = certificados(new Matriculas(codigomat.value),tipo);
                    report.setSrc("WEB-INF/reportes/certificadoMatricula.jasper");
                    parametros.put("titulo", "Certificado de Matricula");
            } else if(tipo.equals("AM")){
                    datasource = certificados(new Matriculas(codigomat.value),tipo);
                    parametros.put("titulo", "Acta de Matricula");
                    report.setSrc("WEB-INF/reportes/actaMatricula.jasper");

            } else if(tipo.equals("CL")){
                    datasource = certificados(new Matriculas(codigomat.value),tipo);
                    parametros.put("titulo", "Acta de Matricula");
                    report.setSrc("WEB-INF/reportes/clavePersonal.jasper");

            }
            if(!tipo.equals("-1")){
                report.setParameters(parametros);
                report.setDatasource(datasource);
                report.setType("pdf");
                 reportes.setSelected(true);
            }
		}


  void move(){
        Aspectos aspecto = (Aspectos)datos.selectedItem.value;
         asunto.value = aspecto.getObserva1();
         responsable.value = aspecto.getObserva2();
         fecha.value = aspecto.getFecha();
         observacion.value = aspecto.getObserva3();
         resultado.value = aspecto.getObserva4();
         codigovisita.value = aspecto.getAspCodigo();
         modificar.disabled = false;
  }



  ]]>
        </zscript>
        <tabbox width="100%">
            <tabs>
                <tab id="registro" label="Datos del Estudiante" />
                <tab id="representante" label="Aspectos Médicos" />
                <tab id="busqueda" label="Rendimiento Académico" />
                <tab id="visita" label="Registro Visita" />
                <tab id="reportes" label="Impresión" />
            </tabs>
            <tabpanels>
                <tabpanel>
                    <panel id="panel"  width="100%"  border="normal" >
                        <panelchildren>
                        
                            <grid>
                                <rows>

                                    <row>
                                        <span style="float:right"> Busqueda:</span>
                                        <combobox  cols="35" id="combo" onSelect="buscarEstudiante(self.selectedItem.label)" autodrop="true" buttonVisible="false"  use="bean.AutoComplete"/>
                                        <span style="color:#FF3300;float:right;color:blue"> REPRESENTANTE</span>
                                        <span style="color:#FF3300;float:right;color:blue"> </span>
                                    </row>
                                    <row>
                                                                   
                                        <span style="color:#FF3300;float:right"> Codigo :</span>
                                        <span  >
                                            <intbox  maxlength="14" cols="3"  disabled="true"  readonly="true" id="codigo"  />
                                                                    Identificación:
                                            <textbox maxlength="10" cols="13" onChange="verificarCedula(self.value)" readonly="true" id="cedula"  />
                                        </span>
                                        <span style="color:#FF3300;float:right"> Codigo :</span>
                                        <span >
                                            <intbox maxlength="14" cols="3"  readonly = "true"    id="codigore"  />
                                                                    Identificación:
                                            <textbox maxlength="13" cols="13"   readonly="true" id="cedulare"  />
                                        </span>

                                    </row>
                                                                
                                    <row>
                                                                   
                                        <span style="color:#FF3300;float:right"> Nombres:</span>
                                        <label id="nombres"  />
                                        <span style="color:#FF3300;float:right"> Nombres:</span>
                                        <label id="nombresre"  />

                                    </row>

                                    <row>
                                        <span style="color:#FF3300;float:right"> Apellidos:</span>
                                        <label id="apellidos"  />
                                        <span style="color:#FF3300;float:right"> Apellidos:</span>
                                        <label id="apellidosre"/>
                                    </row>
                                    <row>

                                        <span style="color:#FF3300;float:right"> Dirección:</span>
                                        <label id="direccion"/>
                                        <span style="color:#FF3300;float:right"> Dirección:</span>
                                        <label id="direccionre" />
                                    </row>

                                    <row>
                                        <span style="color:#FF3300;float:right"> Email:</span>
                                        <label id="mail" />
                                        <span style="color:#FF3300;float:right"> Email:</span>
                                        <label id="emailre" />
                                    </row>

                                    <row>
                                                                    
                                        <span style="color:#FF3300;float:right"> Teléfono:</span>
                                        <label id="telefono"  />
                                        <span style="color:#FF3300;float:right"> Teléfono:</span>
                                        <label id="telefonore"   />


                                    </row>
                                    <row>
                                        <span></span>
                                        <span></span>
                                        <span  style="color:#FF3300;float:right">Parentesco</span>
                                        <span>
                                            <label id="parentesco"   />
                                        </span>
                                    </row>
                                    <row spans="4">
                                        <span>
                                                
                                        </span>
                                    </row>
                                              
                                    <row>
                                        <span style="color:blue" >DATOS PADRE</span>
                                        <span>
                                            <span > Identificación:</span>
                                            <label  id="cedulapa"  />
                                        </span>
                                        <span style="color:blue">DATOS MADRE</span>
                                        <span>
                                            <span > Identificación:</span>
                                            <label   id="cedulama"  />
                                        </span>
                                    </row>
                                    <row>
                                        <span style="color:#FF3300;float:right"> Nombres:</span>
                                        <label id="nombrespa"  />
                                        <span style="color:#FF3300;float:right"> Nombres:</span>
                                        <label id="nombresma"   />
                                    </row>
                                    <row>
                                        <span style="color:#FF3300;float:right"> Apellidos:</span>
                                        <label id="apellidospa"  />
                                        <span style="color:#FF3300;float:right"> Apellidos:</span>
                                        <label id="apellidosma" />
                                    </row>
                                    <row>
                                        <span style="color:#FF3300;float:right"> Ocupación:</span>
                                        <label id="ocupacionpa"   />

                                        <span style="color:#FF3300;float:right"> Ocupación:</span>
                                        <label id="ocupacionma"/>
                                    </row>
                                    <row>
                                        <span style="color:#FF3300;float:right"> Profesión:</span>
                                        <label id="profesionpa"/>
                                        <span style="color:#FF3300;float:right"> Profesión:</span>
                                        <label id="profesionma" />

                                    </row>
                                    <row>
                                        <span style="color:#FF3300;float:right"> Dirección:</span>
                                        <label id="direccionpa"    />
                                        <span style="color:#FF3300;float:right"> Dirección:</span>
                                        <label id="direccionma"     />
                                    </row>
                                    <row>
                                        <span style="color:#FF3300;float:right"> Teléfono:</span>
                                        <label id="telefonopa"   />
                                        <span style="color:#FF3300;float:right"> Teléfono:</span>
                                        <label id="telefonoma"   />
                                    </row>
                                    <row>
                                        <span style="color:#FF3300;float:right"> Email:</span>
                                        <label id="emailpa"  />
                                        <span style="color:#FF3300;float:right"> Email:</span>
                                        <label id="emailma"    />
                                    </row>
                                                     

                                </rows>
                            </grid>
                         

                        </panelchildren>
                    </panel>
                            
                </tabpanel>
                                
                <tabpanel>

                   
                    <grid width="100%">
                        <rows>
                            <row>
                                <span>Tipo de Aspecto</span>
                                <span>
                                    <combobox selectedItem="0" id="tipoaspecto" onSelect='buscar(tipoaspecto.selectedItem.value+"")' >
                                        <comboitem  label="[Seleccione]"  value="0" />
                                        <comboitem  label="PESO" value="PESO" />
                                        <comboitem label="ESTATURA"  value="ESTAT" />
                                        <comboitem label="AGUDEZA AUDITIVA"  value="AUDIT" />
                                        <comboitem label="AGUDEZA VISUAL"  value="VISUA" />
                                        <comboitem label="INFORME MEDICO"  value="MEDIC" />
                                        <comboitem label="INFORME DENTAL"  value="DENTA" />
                                    </combobox>
                                    <intbox visible="false" id="aspecto" cols="2" readonly="true"/>
                                    
                                </span>
                            </row>
                            <row>
                                <span>Primero</span>
                                <textbox id="primero" rows="2" width="400px"  />

                            </row>
                            <row>
                                <span>Segundo</span>
                                <textbox id="segundo" rows="2" width="400px"  />
                            </row>
                            <row>
                                <span>Tercero</span>
                                <textbox id="tercero" rows="2" width="400px"  />
                            </row>
                            <row>
                                <span>Cuarto</span>
                                <textbox id="cuarto"  rows="2" width="400px" />
                            </row>
                            <row>
                                <span>Quinto</span>
                                <textbox id="quinto" rows="2" width="400px"  />
                            </row>
                            <row>
                                <span>Sexto</span>
                                <textbox id="sexto" rows="2" width="400px"  />
                            </row>
                            <row>
                                <span>Septimo</span>
                                <textbox id="septimo" rows="2" width="400px" />
                            </row>
                            <row>
                                            <span></span>
                                 <button image="/images/guardar.gif" id="guardar" label="Guardar"  disabled="true"   onClick="guardar();"/>
                                            
                                            
                            </row>
                                        

                        </rows>
                    </grid>
      

                </tabpanel>

                <tabpanel>


                    <grid width="100%">
                        <rows>
                            <row>
                                <span></span>
                                <span>
                                    <intbox id="aspectoa" visible="false" cols="2" readonly="true"/>
                                    <intbox id="aspectod" visible="false" cols="2" readonly="true"/>
                                    
                                </span>
                            </row>
                            <row>
                                <span style="float:right"> </span>
                                <span>Aprovechamiento</span>
                                <span>Disciplina </span>
                            </row>
                            <row>
                                <span style="float:right">Primero</span>
                                <textbox id="primeroa" cols="6"/>
                                <textbox id="primerod" cols="6"/>

                            </row>
                            <row>
                                <span style="float:right">Segundo</span>
                                <textbox id="segundoa" cols="6"/>
                                <textbox id="segundod" cols="6"/>
                            </row>
                            <row>
                                <span style="float:right">Tercero</span>
                                <textbox id="terceroa" cols="6"/>
                                <textbox id="tercerod" cols="6"/>
                            </row>
                            <row>
                                <span style="float:right">Cuarto</span>
                                <textbox id="cuartoa" cols="6"/>
                                <textbox id="cuartod" cols="6"/>
                            </row>
                            <row>
                                <span style="float:right">Quinto</span>
                                <textbox id="quintoa" cols="6"/>
                                <textbox id="quintod" cols="6"/>
                            </row>
                            <row>
                                <span style="float:right">Sexto</span>
                                <textbox id="sextoa"  cols="6"/>
                                <textbox id="sextod"  cols="6"/>
                            </row>
                            <row>
                                <span style="float:right">Septimo</span>
                                <textbox id="septimoa" cols="6" />
                                <textbox id="septimod"  cols="6"/>
                            </row>
                            <row>
                            <span></span>
                                <button image="/images/guardar.gif" id="guardara" label="Guardar"  disabled="true" onClick="guardara();"/>


                            </row>


                        </rows>
                    </grid>


                </tabpanel>
                <tabpanel>

                    <panel height="395px" style="margin-bottom:10px"
				title="Registro" border="normal">
                        <panelchildren>
                            <grid>
                                <rows>
                                    <row>
                                        
                                        <span>Fecha: <intbox id="codigovisita"  /></span>
                                        <datebox id="fecha"/>
                                    </row>
                                    <row>
                                        <span>Asunto:</span>
                                        <textbox id="asunto"/>
                                    </row>
                                    <row>
                                        <span>Responsable:</span>
                                        <textbox id="responsable"/>
                                    </row>
                                    <row>
                                        <span>Observación:</span>
                                        <textbox id="observacion" rows="3" cols="60"/>
                                    </row>
                                    <row>
                                        <span>Resultados:</span>
                                        <textbox id="resultado" rows="3" cols="60"/>
                                    </row>
                                      <row>
                                            <span></span>
                                            <span>
                                             <button image="/images/nuevo.gif" id="nuevo" label="Agregar"  onClick="limpiar();"/>
                                             <button image="/images/guardar.gif" id="guardare" label="Guardar"  disabled="true"   onClick="guardareg();"/>
                                             <button  image="/images/editar.gif" id="modificar"  label="Modificar" disabled="true" onClick="modificar()"/></span>
                                        </row>
                                    <row spans="2">
                                        <listbox mold="paging"  pageSize="17" onSelect="move();" id="datos" width="100%">
                                            <listhead>
                                                <listheader label="Fecha" sort="auto"/>
                                                <listheader label="Asunto"  sort="auto"/>
                                                <listheader label="Responsable" sort="auto"/>
                                            </listhead>
                                          
                                        </listbox>
                                    </row>
                                </rows>
                            </grid>
                              
                              
                              
                               
                         
                    
                        </panelchildren>
                    </panel>

                </tabpanel>
                <tabpanel>

                    <panel height="395px" style="margin-bottom:10px"
				title="Reporte" border="normal">
                        <panelchildren>
                       
                            <jasperreport id="report" />
                        </panelchildren>
                    </panel>

                </tabpanel>



            </tabpanels>
        </tabbox>


    </window>

 

</zk>