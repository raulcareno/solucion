<?xml version="1.0" encoding="UTF-8"?>
<?page   id="loginjx" title="Administrador Educativo" ?>
<?link rel="shortcut icon" type="image/icono" href="/images/icono.jpg"?>
<zk xmlns="http://www.zkoss.org/2005/zul">
    <style>
.estil{
	height:100%;
    background-image: url(./images/fondo.jpg);
    background-repeat: repeat-y;
    background-repeat: repeat-x;
       background-color:#004669;
}
    </style>

    <div  class="estil" >
 

        <window   width="75%">
            <style dynamic="true">
            .z-label.focus {
                color:red;
                font-weight:bold;
                font-size:11px;

            }
            </style>
            <zscript>
            void changeStyle(Label text) {
            if ("focus".equals(text.sclass)) {
            text.sclass = "";
            } else {
            text.sclass = "focus";
            }
            }
            </zscript>
            <zscript>
            <![CDATA[
  import jcinform.persistencia.Global;
  import bean.EventDAO;
  import java.util.ArrayList;
  import jcinform.persistencia.*;
  import jcinform.procesos.Administrador;
  import bean.Permisos;
  import java.io.FileNotFoundException;
  import java.io.FileOutputStream;
  import java.io.IOException;
  import java.util.logging.Level;
  import java.util.logging.Logger;
import java.util.Vector;
import bean.matriculasBean;
import sources.CustomDataSource;
import net.sf.jasperreports.engine.JRDataSource;
import sources.*;
import bean.notas;
import bean.secuencial;
import java.math.BigDecimal;
import bean.notas;
import jcinform.persistencia.*;
import jcinform.procesos.Administrador;
import bean.verificarLetras;


import java.util.Date;
import org.joda.time.DateMidnight;
import org.zkoss.zul.Listbox;
import bean.email;
            int contador = 0;
            Boolean guardando = false;
                Administrador adm = new Administrador();
                 secuencial sec = new secuencial();
                 email ema = new email();
              List allEvents = adm.query("Select o from Estudiantes as o where o.cedula = 0");
              static Inscripciones estudent = new Inscripciones();
              static Representante representante0 = new Representante();
              static Matriculas matricula = new Matriculas();
             Session ses = Sessions.getCurrent();
              ses.removeAttribute("cursoActualizando");
                ses.removeAttribute("periodo");
             Matriculas matActual = ses.getAttribute("matriculaActual");
             java.util.Date fecha = new java.util.Date();
             String fechaString = (fecha.getYear()+1900)+"-"+(fecha.getMonth()+1)+"-"+(fecha.getDate());
          
          List periodosListadod = adm.queryNativo("Select o.* from Periodo as o " + 
                    " where '"+fechaString+"' between o.fechamai and o.fechamaf order by o.descripcion",Periodo.class);
          
            if(periodosListadod.size()<= 0){
             //       Messagebox.show("No existe Periodos Habilitados para Matricularse  \n revise el calendario de Matriculación...!", "Administrador Educativo", Messagebox.OK, Messagebox.ERROR);
                    mensaje.value = "No existe Periodos Habilitados para Matricularse  \n revise el calendario de Matriculación...!";
                    //Executions.sendRedirect("loginEtudiantes.zul");
                    Executions.sendRedirect("/592981728937491235M.zul?AASL2KSO348934934="+(""+matActual.getCodigomat())+"&TP=pdf");
            }

 Permisos permiso = new Permisos();
    Object media = null;

void cargar(Global g){
    estudent.setPerfil(g);
}

void seleccionPeriodo(){

        if(matActual.getCurso().getPeriodo().getCodigoper().equals(((Periodo)periodosListado.selectedItem.value).getCodigoper())
        && matActual.getEstado().equals("Inscrito") ){
                matActual.setEstado("Matriculado");
                Integer valor = nuevaMatricula();
                matActual.setNumero(valor);
                matActual.setFolio(valor);
                adm.actualizar(matActual);
                Executions.sendRedirect("/592981728937491235M.zul?AASL2KSO348934934="+(""+matActual.getCodigomat())+"&TP=pdf");
                return;
        }
        if(matActual.getCurso().getPeriodo().getCodigoper().equals(((Periodo)periodosListado.selectedItem.value).getCodigoper())){
           int val = Messagebox.show("Usted ya está matriculado en éste periodo, ¿Desea Actualizar sus Datos ?", "JCINFORM",  Messagebox.YES | Messagebox.NO, Messagebox.QUESTION);
                        //AQUI VALIDO SI YA ESTÁ MATRICULADO EN ÉSTE PERIODO
                        if(val == 16){
                             ses.setAttribute("periodo",periodosListado.selectedItem.value);
                             ses.setAttribute("cursoActualizando",matActual.getCurso());
                             Executions.sendRedirect("matriculacionEstudiantes2de2Actualizar.zul");
                             return; 
                         }else{
                            Executions.sendRedirect("/592981728937491235M.zul?AASL2KSO348934934="+(""+matActual.getCodigomat())+"&TP=pdf");
                            return; 
                        } 
                      /*  }else{
                            Representante repre = ses.getAttribute("userRepresentante");
                             if(repre==null){
                                Executions.sendRedirect("indexEstudiantes.zul");
                             }else{
                                Executions.sendRedirect("indexRepresentantes.zul");
                             }
                             return;
                        }*/
        }
     ses.setAttribute("cursoActualizando",matActual.getCurso());
     ses.setAttribute("periodo",periodosListado.selectedItem.value);
     Executions.sendRedirect("matriculacionEstudiantes2de2.zul");
            
}

Integer nuevaMatricula() {
                   Administrador adm = new Administrador();

                    List NoActualMatricula = adm.query("Select o from ParametrosGlobales as o " +
                            "where o.variable = 'MATRICULA' and o.periodo.codigoper = '" + ((Periodo)periodosListado.selectedItem.value).getCodigoper()+ "'");
                    ParametrosGlobales parametros = new ParametrosGlobales();
                    if(NoActualMatricula.size()<=0){
                        alert("Falta copiar los parámetros a este Año Lectivo");
                    }
                    parametros = (ParametrosGlobales) NoActualMatricula.get(0);
                    int noMatri = 0;
                    Double decs = parametros.getNvalor();
                    Long val = java.lang.Math.round(decs);
                    noMatri = Integer.valueOf(val.toString());
                    noMatri += 1;
                    List  numeroYa = adm.query("Select o from Matriculas as o " +
                            "where o.curso.periodo.codigoper = '" + ((Periodo)periodosListado.selectedItem.value).getCodigoper() + "' " +
                            "and o.numero = '" + noMatri + "'");
                    if (numeroYa.size() > 0) {
                        Integer nClave = adm.geUltimaMatricula("Select max(o.numero) from Matriculas as o " +
                                "where o.curso.periodo.codigoper= '" + ((Periodo)periodosListado.selectedItem.value).getCodigoper() + "'"  );
                        parametros.setNvalor(new Double(nClave + 1));
                        adm.actualizar(parametros);
                        return nClave + 1;
                    } else {
                        parametros.setNvalor(new Double(noMatri));
                        adm.actualizar(parametros);
                        return noMatri;
                    }
    }
  ]]>
            </zscript>

          
         <label id="mensaje"  style="color:red; font-size:18px"/>
       
            <panel  id="panel" style="position:absolute; top:25%;left:15%"  visible="true" height="500px"  width="800px"  >
                <panelchildren>
                    <grid  sclass="MyGridRowHeight" height="500px"  id="seleccionGrid" >
                        <rows>
                          
                            <row align="left"  spans="2" style="background:#6699CC;border:0px;color:blue" >
                                <label style="font-size:18px;color:WHITE;font-weight:bold"  value="HAGA UN CLICK EN EL PERIODO QUE DESEA MATRICULARSE" />
                            </row>
                            <row align="left"  spans="2" style="background:#6699CC;border:0px;color:blue" >
                                <span>
                                 
                                    <listbox id="periodosListado" style="font-size:15px" height="400px"  onSelect="bd1.value=self.selectedItem.label;seleccionPeriodo();" >
                                        <listhead sizable="true">
                                            <listheader width="40px" label="SECCION"/>
                                            <listheader width="40px" label="JORNADA"/>
                                            <listheader width="40px" label="PERIODO"/>
                                            <listheader width="40px" label="INSTITUCIÓN"/>
                                            <listheader width="40px" label="OPCIÓN"/>
                                                     
                                        </listhead>
                                        <listitem forEach="${periodosListadod}" value="${each}">
                                            <listcell style="font-size:18px;color:blue;font-weight:bold"  label="${each.institucion.tipo}" />
                                            <listcell   label="[${each.seccion}]  " />
                                            <listcell style="font-size:18px;color:blue;font-weight:bold"  label="${each.descripcion}" />
                                            <listcell   label=" ${each.institucion} " />
                                            <listcell image="/images/selec.png" />

                                                            
                                        </listitem>
                                    </listbox>
                                               
                                    
                                   
                                        
                                </span>

                            </row>
                        </rows>
                    </grid>
                 
                </panelchildren>
            </panel>
 
 
        
        </window>
   
    </div>
</zk>
