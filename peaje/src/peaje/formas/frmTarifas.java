/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * frmTarifas1.java
 *
 * Created on 17/03/2011, 05:45:22 PM
 */

package peaje.formas;

import hibernate.Empresa;
import hibernate.Global;
import hibernate.Tarifas;
import java.awt.Container;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import peaje.Administrador;
import peaje.validaciones;

/**
 *
 * @author Ismael Jadan
 */
public class frmTarifas extends java.awt.Dialog {
   public boolean grabar = false;
    public boolean modificar = false;
    public List lista = null;
    public int posicion = 0;
    public int tamano = 0;
    private Container desktopContenedor;
    private Empresa empresaObj;
    Administrador adm;
    private String claveActual;
    private validaciones val;
    private principal principal;
    /** Creates new form frmTarifas1 */
    public frmTarifas(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }
  public frmTarifas(java.awt.Frame parent, boolean modal,Administrador adm1) {
          super(parent,modal);

        initComponents();
        this.setSize(615, 508);
        empresaObj = new Empresa();
        adm = adm1;
        val = new validaciones();

    }

    public frmTarifas(java.awt.Frame parent, boolean modal,principal lo,Administrador adm1) {
          super(parent,modal);
        this.desktopContenedor = lo.contenedor;

        initComponents();

        this.setSize(615, 508);
        adm = adm1;
        val = new validaciones();
        principal = lo;
        llenarCombo();


    }

    public void llenarCombo() {

        try {

            List<Tarifas> tar = adm.query("Select o from Tarifas as o order by o.desde ");
            DefaultTableModel dtm = (DefaultTableModel) tarifario.getModel();
            dtm.getDataVector().removeAllElements();
            for (Tarifas tarifas : tar) {
                Object[] obj = new Object[5];

                obj[0] = tarifas.getDesde().intValue();
                obj[1] = tarifas.getHasta().intValue();
                obj[2] = tarifas.getValor().doubleValue();
                dtm.addRow(obj);
            }
            for (int i = tar.size()+1; i < tar.size()+10; i++) {
                Object[] obj = new Object[5];
                obj[0] = null;
                obj[1] = null;
                obj[2] = null;
                obj[3] = null;
                dtm.addRow(obj);

            }
            tarifario.setModel(dtm);
        } catch (Exception ex) {
            Logger.getLogger(frmTarifas.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

      public void llenarTarifas() {

        try {

            List<Tarifas> tar = adm.query("Select o from Tarifas as o ");
            DefaultTableModel dtm = (DefaultTableModel) tarifario.getModel();
            dtm.getDataVector().removeAllElements();
            for (Tarifas tarifas : tar) {
                Object[] obj = new Object[5];

                obj[0] = tarifas.getDesde().intValue();
                obj[1] = tarifas.getHasta().intValue();
                obj[2] = tarifas.getValor().doubleValue();
                dtm.addRow(obj);
            }
            tarifario.setModel(dtm);
        } catch (Exception ex) {
            Logger.getLogger(frmTarifas.class.getName()).log(Level.SEVERE, null, ex);
        }
    }


// <editor-fold defaultstate="collapsed" desc="PROPIEDADES">
    public String getClaveActual() {
        return claveActual;
    }

    public void setClaveActual(String claveActual) {
        this.claveActual = claveActual;
    }

    public Empresa getUsuarioObj() {
        return empresaObj;
    }

    public void setUsuarioObj(Empresa empresaObj) {
        this.empresaObj = empresaObj;
    }
    private List<Global> perfilesList = new ArrayList<Global>();

    public List<Global> getPerfilesList() {
        return perfilesList;
    }

    public void setPerfilesList(List<Global> perfilesList) {
        this.perfilesList = perfilesList;
    }


// </editor-fold>

// <editor-fold defaultstate="collapsed" desc="FUNCIONES ACCIONES">
    public void habilitar(Boolean estado) {
      tarifario.setEnabled(estado);

    }

    public void limpiar() {
        String estado = "";



    }

    // </editor-fold >
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tarifario = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        btnAgregar = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        horas = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        minutos = new javax.swing.JTextField();

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });
        setLayout(null);

        jPanel3.setBorder(new javax.swing.border.MatteBorder(new javax.swing.ImageIcon(getClass().getResource("/images_botones/fondoInicio.png")))); // NOI18N
        jPanel3.setOpaque(false);
        jPanel3.setLayout(null);

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel8.setForeground(new java.awt.Color(0, 51, 51));
        jLabel8.setText("Catálogo de Tarifas ..::..");
        jPanel3.add(jLabel8);
        jLabel8.setBounds(10, 0, 270, 15);

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 10));
        jLabel10.setForeground(new java.awt.Color(102, 102, 102));
        jLabel10.setText("Busqueda, Creación,Modificación,  Tarifas ..::..");
        jPanel3.add(jLabel10);
        jLabel10.setBounds(10, 20, 250, 13);

        add(jPanel3);
        jPanel3.setBounds(0, 0, 410, 40);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel1.setLayout(null);

        tarifario.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Desde", "Hasta", "Valor"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tarifario.setCellSelectionEnabled(true);
        tarifario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tarifarioKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(tarifario);
        tarifario.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(10, 30, 330, 190);

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("TIEMPO EN MINUTOS");
        jLabel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jPanel1.add(jLabel2);
        jLabel2.setBounds(10, 10, 220, 20);

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("VALOR $(USD)");
        jLabel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jPanel1.add(jLabel5);
        jLabel5.setBounds(230, 10, 110, 20);

        add(jPanel1);
        jPanel1.setBounds(20, 50, 370, 230);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel4.setLayout(null);

        btnAgregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/agregar.png"))); // NOI18N
        btnAgregar.setMnemonic('N');
        btnAgregar.setText("Nuevo");
        btnAgregar.setEnabled(false);
        btnAgregar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAgregar.setMargin(new java.awt.Insets(2, 2, 2, 2));
        btnAgregar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });
        jPanel4.add(btnAgregar);
        btnAgregar.setBounds(110, 10, 60, 50);

        btnModificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/editar.png"))); // NOI18N
        btnModificar.setMnemonic('M');
        btnModificar.setText("Modificar");
        btnModificar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnModificar.setMargin(new java.awt.Insets(1, 1, 1, 1));
        btnModificar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });
        jPanel4.add(btnModificar);
        btnModificar.setBounds(170, 10, 60, 50);

        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/eliminar.png"))); // NOI18N
        btnEliminar.setMnemonic('E');
        btnEliminar.setText("Eliminar");
        btnEliminar.setEnabled(false);
        btnEliminar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnEliminar.setMargin(new java.awt.Insets(2, 2, 2, 2));
        btnEliminar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        jPanel4.add(btnEliminar);
        btnEliminar.setBounds(230, 10, 60, 50);

        btnSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/salir.png"))); // NOI18N
        btnSalir.setMnemonic('S');
        btnSalir.setText("Salir");
        btnSalir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSalir.setMargin(new java.awt.Insets(2, 2, 2, 2));
        btnSalir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });
        jPanel4.add(btnSalir);
        btnSalir.setBounds(290, 10, 60, 50);

        add(jPanel4);
        jPanel4.setBounds(20, 330, 370, 70);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Convertidor"));
        jPanel2.setLayout(null);

        horas.setText("0");
        horas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                horasKeyReleased(evt);
            }
        });
        jPanel2.add(horas);
        horas.setBounds(50, 20, 30, 20);

        jLabel1.setText("HORA EQUIVALE A ->");
        jPanel2.add(jLabel1);
        jLabel1.setBounds(90, 20, 120, 14);

        minutos.setEditable(false);
        minutos.setText("0");
        jPanel2.add(minutos);
        minutos.setBounds(210, 20, 60, 20);

        add(jPanel2);
        jPanel2.setBounds(20, 280, 370, 50);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /** Closes the dialog */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        setVisible(false);
        dispose();
    }//GEN-LAST:event_closeDialog

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed

        // TODO add your handling code here:
        if(principal.permisos.getAgregar()){
            if (grabar == false) {
                this.btnAgregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/guardar.png")));
                this.btnAgregar.setLabel("Guardar");
                this.btnModificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/cancelar.png")));
                this.btnModificar.setLabel("Cancelar");
                grabar = true;
                modificar = false;
                habilitar(true);
                limpiar();
                btnAgregar.setMnemonic('G');
                btnModificar.setMnemonic('C');
                //            btnBuscar.setEnabled(false);

            } else if (grabar == true) {
                try {
                    //                    try {
                    int filas = tarifario.getRowCount();
                    adm.ejecutaSql("Delete from Tarifas ");
                    for (int i = 0; i < filas; i++) {
                        Tarifas tar = new Tarifas(null);
                        //                        tar.setCodigo((Integer) tarifario.getValueAt(i, 0));
                        tar.setDesde(((Integer) tarifario.getValueAt(i, 0)).longValue());
                        tar.setHasta(((Integer) tarifario.getValueAt(i, 1)).longValue());
                        tar.setValor(new BigDecimal((Double) tarifario.getValueAt(i, 2)));
                        try {
                            adm.guardar(tar);

                        } catch (Exception e) {
                            System.out.println(""+e);
                        }
                    }
                    //                    } catch (Exception ex) {
                    //                        JOptionPane.showMessageDialog(this, "Error en actualizar Registro ...! \n" + ex.getMessage(), "", JOptionPane.ERROR_MESSAGE);
                    //                        Logger.getLogger(frmTarifas.class.getName()).log(Level.SEVERE, null, ex);
                    //                        return;
                    //                    }

                } catch (Exception ex) {
                    Logger.getLogger(frmTarifas.class.getName()).log(Level.SEVERE, null, ex);
                }
                llenarCombo();
                this.btnAgregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/agregar.png")));
                this.btnAgregar.setLabel("Nuevo");
                this.btnModificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/editar.png")));
                this.btnModificar.setLabel("Modificar");
                btnAgregar.setMnemonic('N');
                btnModificar.setMnemonic('M');
                grabar = false;
                modificar = false;
                habilitar(false);
                //                    btnBuscar.setEnabled(true);
                btnAgregar.setEnabled(false);

            }
        }else{
            JOptionPane.showMessageDialog(this, "NO TIENE PERMISOS PARA REALIZAR ESTA ACCIÓN");
        }

    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        // TODO add your handling code here:

        if (grabar == false) {
            if(principal.permisos.getModificar()){

                this.btnAgregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/guardar.png")));
                this.btnAgregar.setLabel("Guardar");
                btnAgregar.setEnabled(true);
                this.btnModificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/cancelar.png")));
                this.btnModificar.setLabel("Cancelar");
                btnAgregar.setMnemonic('G');
                btnModificar.setMnemonic('C');
                modificar = true;
                grabar = true;
                habilitar(true);
                //            btnBuscar.setEnabled(false);

            }else{
                JOptionPane.showMessageDialog(this, "NO TIENE PERMISOS PARA REALIZAR ESTA ACCIÓN");
            }
        } else {

            grabar = false;
            modificar = false;
            this.btnAgregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/agregar.png")));
            this.btnAgregar.setLabel("Nuevo");
            this.btnModificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/editar.png")));
            this.btnModificar.setLabel("Modificar");
            btnAgregar.setMnemonic('N');
            btnModificar.setMnemonic('M');
            btnAgregar.setEnabled(false);
            habilitar(false);
            //            btnBuscar.setEnabled(true);

        }

    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        if(principal.permisos.getEliminar()){        // TODO add your handling code here:
            try {
                adm.eliminarObjeto(Empresa.class, empresaObj.getRuc());
                this.limpiar();
            } catch (Exception ex) {
                Logger.getLogger(frmTarifas.class.getName()).log(Level.SEVERE, null, ex);
            }

        }else{
            JOptionPane.showMessageDialog(this, "NO TIENE PERMISOS PARA REALIZAR ESTA ACCIÓN");
        }
}//GEN-LAST:event_btnEliminarActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        principal = null;
        empresaObj = null;
        System.gc();
}//GEN-LAST:event_btnSalirActionPerformed

    private void horasKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_horasKeyReleased
        // TODO add your handling code here:
        Integer hor = Integer.parseInt(horas.getText());
        Integer min = 60* hor;
        minutos.setText(min+"");
}//GEN-LAST:event_horasKeyReleased

    private void tarifarioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tarifarioKeyPressed
        // TODO add your handling code here:
         if (!evt.isActionKey()) {
                switch (evt.getKeyCode()) {
                    case java.awt.event.KeyEvent.VK_ENTER:
                        evt.setKeyCode(java.awt.event.KeyEvent.VK_TAB);
                        break;
                }
            }
                        int fila = tarifario.getSelectedRow();
                int columna = tarifario.getSelectedColumn();
                if (this.tarifario.getSelectedColumn() >= 0) {
                Object obje = tarifario.getValueAt(fila, columna);
                //tarifario.getCellEditor(fila, columna).isCellEditable(evt);
                if (obje != null) {
                    if (tarifario.isCellEditable(fila, columna) && evt.getKeyCode() != evt.VK_UP && evt.getKeyCode() != evt.VK_DOWN && evt.getKeyCode() != evt.VK_LEFT && evt.getKeyCode() != evt.VK_RIGHT && evt.getKeyCode() != evt.VK_ENTER && evt.getKeyCode() != evt.VK_TAB)
                        tarifario.setValueAt(null, tarifario.getSelectedRow(), columna);
                }
                }
    }//GEN-LAST:event_tarifarioKeyPressed

  


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnSalir;
    private javax.swing.JTextField horas;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField minutos;
    private javax.swing.JTable tarifario;
    // End of variables declaration//GEN-END:variables

}
