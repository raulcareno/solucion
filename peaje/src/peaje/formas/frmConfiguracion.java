/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * frmConfiguracion.java
 *
 * Created on 03/04/2011, 11:26:12 PM
 */
package peaje.formas;

import hibernate.cargar.Administrador;
import hibernate.cargar.BeanUsuario;
import hibernate.cargar.GeneraXMLPersonal;
import hibernate.cargar.UsuarioActivo;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.StringTokenizer;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author Familia Jadan Cahueñ
 */
public class frmConfiguracion extends javax.swing.JFrame {

    hibernate.cargar.claves cl = new hibernate.cargar.claves();
    String separador = File.separatorChar + "";
    static UsuarioActivo datosConecta;
    public Boolean esServidor = false;
    /**
     * Creates new form frmConfiguracion
     */
    private JFileChooser FC_Choose;

    public frmConfiguracion() {
        initComponents();
        this.setLocationRelativeTo(null);
        serieDisco.setText(UsuarioActivo.getSerie());
        String valor = claves.encriptar("jc" + serieDisco.getText());
        valor = valor.substring(0, valor.length() - 4);
        serieRecibe.setText(valor);
        serieRecibe.setVisible(false);
        FC_Choose = new JFileChooser();
        tipoPanel.repaint();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        tipoPanel = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        usuarioBase = new javax.swing.JFormattedTextField();
        claveBase = new javax.swing.JPasswordField();
        ipBase = new javax.swing.JFormattedTextField();
        puertoBase = new javax.swing.JFormattedTextField();
        continuar = new javax.swing.JButton();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        cmbAbre = new javax.swing.JComboBox();
        cmbCierra = new javax.swing.JComboBox();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        serieDisco = new javax.swing.JFormattedTextField();
        serieRecibe2 = new javax.swing.JFormattedTextField();
        serieRecibe = new javax.swing.JFormattedTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Configuración Inicial del Sistema");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Reconfiguración en caso de una configuración previa"));
        jPanel1.setLayout(null);

        tipoPanel.setLayout(null);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/edittrash.gif"))); // NOI18N
        jButton1.setText("ES EL SERVIDOR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        tipoPanel.add(jButton1);
        jButton1.setBounds(70, 60, 150, 52);

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/User3.gif"))); // NOI18N
        jButton2.setText("<html>ES UN USUARIO </html>");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        tipoPanel.add(jButton2);
        jButton2.setBounds(300, 60, 140, 52);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 153));
        jLabel5.setText("<html>Es una cuenta de algún usuario(empleado), alguna consola para el calificador, o para empezar a llamar turnos. si es así presione ES USUARIO\n</html>");
        tipoPanel.add(jLabel5);
        jLabel5.setBounds(300, 120, 160, 120);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 51, 0));
        jLabel6.setText("<html>Es el servidor o es la primera instalación del sistema, si és así presione en ES EL SERVIDOR\n</html>");
        tipoPanel.add(jLabel6);
        jLabel6.setBounds(70, 120, 130, 120);

        jPanel1.add(tipoPanel);
        tipoPanel.setBounds(-30, -50, 590, 320);

        jLabel25.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel25.setText("Clave: ");
        jPanel1.add(jLabel25);
        jLabel25.setBounds(0, 40, 110, 14);

        jLabel24.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel24.setText("Usuario: ");
        jPanel1.add(jLabel24);
        jLabel24.setBounds(0, 20, 110, 14);

        jLabel26.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel26.setText("IP: ");
        jPanel1.add(jLabel26);
        jLabel26.setBounds(0, 60, 110, 14);

        jLabel27.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel27.setText("Puerta de Saldia: ");
        jPanel1.add(jLabel27);
        jLabel27.setBounds(390, 120, 110, 14);

        usuarioBase.setText("root");
        jPanel1.add(usuarioBase);
        usuarioBase.setBounds(120, 20, 160, 20);

        claveBase.setText("jcinform@2020");
        jPanel1.add(claveBase);
        claveBase.setBounds(120, 40, 160, 20);

        ipBase.setText("localhost");
        ipBase.setToolTipText("Si su máquina es el servidor escriba: localhost, caso contrario escriba el nombre del servidor o la dirección IP");
        jPanel1.add(ipBase);
        ipBase.setBounds(120, 60, 160, 20);

        puertoBase.setText("3306");
        jPanel1.add(puertoBase);
        puertoBase.setBounds(120, 80, 70, 20);

        continuar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/guardar.png"))); // NOI18N
        continuar.setText("Continuar");
        continuar.setEnabled(false);
        continuar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                continuarActionPerformed(evt);
            }
        });
        jPanel1.add(continuar);
        continuar.setBounds(180, 170, 180, 50);

        jLabel29.setText("(localhost o IP del servidor)");
        jPanel1.add(jLabel29);
        jLabel29.setBounds(290, 60, 200, 14);

        jLabel30.setText("(Clave del motor de BD)");
        jPanel1.add(jLabel30);
        jLabel30.setBounds(290, 30, 200, 30);

        jLabel31.setText("(Usuario de de BD)");
        jPanel1.add(jLabel31);
        jLabel31.setBounds(290, 20, 200, 14);

        cmbAbre.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7" }));
        jPanel1.add(cmbAbre);
        cmbAbre.setBounds(400, 100, 40, 20);

        cmbCierra.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7" }));
        jPanel1.add(cmbCierra);
        cmbCierra.setBounds(400, 140, 40, 20);

        jLabel33.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel33.setText("Puerto: ");
        jPanel1.add(jLabel33);
        jLabel33.setBounds(0, 80, 110, 14);

        jLabel34.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel34.setText("Puerta de Entrada: ");
        jPanel1.add(jLabel34);
        jLabel34.setBounds(390, 80, 110, 14);

        jLabel35.setText("(Puerto por el que se conecta)");
        jPanel1.add(jLabel35);
        jLabel35.setBounds(200, 80, 200, 20);

        jLabel36.setForeground(new java.awt.Color(255, 51, 0));
        jLabel36.setText("NO USABLE");
        jPanel1.add(jLabel36);
        jLabel36.setBounds(450, 140, 70, 20);

        jLabel37.setForeground(new java.awt.Color(255, 51, 0));
        jLabel37.setText("NO USABLE");
        jPanel1.add(jLabel37);
        jLabel37.setBounds(450, 100, 60, 20);

        serieDisco.setEditable(false);
        serieDisco.setText("abc0O01mnlabc");
        serieDisco.setToolTipText("");
        serieDisco.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        jPanel1.add(serieDisco);
        serieDisco.setBounds(120, 100, 250, 27);

        serieRecibe2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        serieRecibe2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                serieRecibe2ActionPerformed(evt);
            }
        });
        serieRecibe2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                serieRecibe2KeyReleased(evt);
            }
        });
        jPanel1.add(serieRecibe2);
        serieRecibe2.setBounds(120, 130, 160, 23);

        serieRecibe.setEnabled(false);
        jPanel1.add(serieRecibe);
        serieRecibe.setBounds(120, 130, 40, 20);

        jLabel2.setText("CLAVE:");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(70, 130, 50, 14);

        jLabel4.setText("SERIE: ");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(70, 110, 50, 14);

        jLabel32.setText("Solicite la clave del producto a su Proveedor");
        jPanel1.add(jLabel32);
        jLabel32.setBounds(120, 150, 230, 14);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 204));
        jLabel1.setText("<html>Si usted esta viendo esta pantalla, va a reconfigurar, o el archivo de configuración está dañado, o es la primera vez que lo hace\n</html>");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 544, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void escribir() {

        GeneraXMLPersonal pXml = new GeneraXMLPersonal();
        pXml.inicio();
        pXml.generaDocumentoXMLPersonal();
        BeanUsuario beanEmpleado = new BeanUsuario();
        //Establecemos los valores de atributos de Empleado
        beanEmpleado.setDNI("80114918");
        beanEmpleado.setUsuario("" + usuarioBase.getText().trim());
        beanEmpleado.setClave("" + cl.encriptar(claveBase.getText().trim()));
        beanEmpleado.setIp("" + ipBase.getText().trim());
        beanEmpleado.setPuerto("" + puertoBase.getText().trim());
        beanEmpleado.setIn("" + cmbAbre.getSelectedItem().toString());
        beanEmpleado.setOut("" + cmbCierra.getSelectedItem().toString());
        beanEmpleado.setSerie("" + serieRecibe.getText() + "" + serieRecibe2.getText());


        //Generamos documento XML para los valores anteriores
        pXml.llenarEstructuraDocumentoXMLEmpleado(beanEmpleado);
        //obtenemos el documento XML en cadena de texto
        String textoXML = pXml.obtenerTextoXML();
        //grabamos en archivo el documento XML
        pXml.grabaDocumentoXML(textoXML);

    }
    private void continuarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_continuarActionPerformed
        // TODO add your handling code here:
        escribir();
        GeneraXMLPersonal pXml = new GeneraXMLPersonal();
        pXml.leerXML();
        UsuarioActivo usuario = pXml.user;
          if(esServidor){
            int val = JOptionPane.showConfirmDialog(this, "¿DESEA GENERAR LA BASE DE DATOS?, ÉSTO BORRARÁ LOS DATOS ACTUALES Y CARGARÁ EL SISTEMA DESDE CERO");
            if(val == JOptionPane.OK_OPTION){
                int val2 = JOptionPane.showConfirmDialog(this, "¿ESTÁ UD. SEGURO DE QUE DESEA GENERAR LA BASE DE DATOS?, ÉSTO BORRARÁ LOS DATOS ACTUALES Y CARGARÁ EL SISTEMA DESDE CERO");
                    if(val2 == JOptionPane.OK_OPTION){
                        respaldar();//GENERO LA BASE DE DATOS Y LAS TABLAS EN CASO DE NO EXISTIR
                    }
            }
          }
        try {
            Administrador adm = new Administrador(usuario);
            adm.query("Select o from Accesos as o where o.codigo = -1 ");
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Conexión Erronea corrija y vuelva a intentarlo...", "", JOptionPane.ERROR_MESSAGE);
            return;
        }
        this.disable();
        this.dispose();
        new frmPrincipal().show();

//        btnAgregar.setEnabled(true);
//        //          btnBuscar.setEnabled(true);
//        btnEliminar.setEnabled(true);
//        btnModificar.setEnabled(true);
//        btnSalir.setEnabled(true);
    }//GEN-LAST:event_continuarActionPerformed

    private void serieRecibe2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_serieRecibe2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_serieRecibe2ActionPerformed

    private void serieRecibe2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_serieRecibe2KeyReleased
        // TODO add your handling code here:
        String valor = claves.encriptar("jc" + serieDisco.getText());
        String valor2 = (serieRecibe.getText() + serieRecibe2.getText());
        if (valor.equals(valor2)) {
            continuar.setEnabled(true);
        } else {
            continuar.setEnabled(false);
        }

    }//GEN-LAST:event_serieRecibe2KeyReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        tipoPanel.setVisible(false);
        esServidor = true;
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
         tipoPanel.setVisible(false);
        esServidor = false;
    }//GEN-LAST:event_jButton2ActionPerformed
    public Boolean respaldar() {
        String dataBase= "peaje";
        String directorio = UsuarioActivo.getUbicacionDirectorio() + "" + separador + "da" + separador + "datos.sql";
        String ip = ipBase.getText();
        String usuario = usuarioBase.getText();
        String clave = claveBase.getText();
        String puerto = puertoBase.getText();
        System.out.println("Database creation example!");
        Connection con = null;
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://" + ip + ":" + puerto + "/mysql", usuario, clave);
            try {
                Statement st = con.createStatement();
                st.executeUpdate("CREATE DATABASE "+dataBase);

                con = DriverManager.getConnection("jdbc:mysql://" + ip + ":" + puerto + "/"+dataBase, usuario, clave);
                st = con.createStatement();
                BufferedReader in = new BufferedReader(new FileReader(directorio));
                String str;
                StringBuilder sb = new StringBuilder();
                while ((str = in.readLine()) != null) {
                    sb.append(str + "\n ");
                }
                in.close();

                String[] inst = sb.toString().split(";");

                for (int i = 0; i < inst.length; i++) {

                    if (!inst[i].trim().equals("")) {
                        st.executeUpdate(inst[i]);
                        System.out.println(">>" + inst[i]);
                    }
                }
                System.out.println("1 row(s) affacted");
                return true;
            } catch (SQLException s) {
                System.out.println("SQL statement is not executed!" + s);
                return false;
            }
        } catch (Exception e) {
            e.printStackTrace();
            return false;
        }

    }
//

    public void respaldarLinux() {
        try {
            String ip = ipBase.getText();
            String directorio = UsuarioActivo.getUbicacionDirectorio() + "" + separador + "da" + separador;
            String usuario = usuarioBase.getText();
            String clave = claveBase.getText();

            String ubicacion = directorio + separador + "da" + separador + "datos.sql";
            String cnd = "mysqldump -h" + ip + " -u" + usuario + " -p" + clave + " -B peaje " + " -r" + ubicacion;
            StringTokenizer st = new StringTokenizer(cnd);
            String[] coma = new String[st.countTokens() + 1];
            int i = 0;
            while (st.hasMoreTokens()) {
                coma[i] = st.nextToken();
                System.out.println(coma[i] + " n:" + i);
                i++;
            }
            coma[7] = "-r" + ubicacion;
            Runtime.getRuntime().exec(coma);
//            respaldo.value = ubicacion;
//            alert("Respaldo realizado con Éxito en: " + ubicacion);
        } catch (Exception e) {
            System.out.println("" + e);
//            alert("No se pudo realizar el Respaldo");
        }

    }

    public Boolean getEsServidor() {
        return esServidor;
    }

    public void setEsServidor(Boolean esServidor) {
        this.esServidor = esServidor;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new frmConfiguracion().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPasswordField claveBase;
    private javax.swing.JComboBox cmbAbre;
    private javax.swing.JComboBox cmbCierra;
    private javax.swing.JButton continuar;
    private javax.swing.JFormattedTextField ipBase;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JFormattedTextField puertoBase;
    private javax.swing.JFormattedTextField serieDisco;
    private javax.swing.JFormattedTextField serieRecibe;
    private javax.swing.JFormattedTextField serieRecibe2;
    private javax.swing.JPanel tipoPanel;
    private javax.swing.JFormattedTextField usuarioBase;
    // End of variables declaration//GEN-END:variables
}
