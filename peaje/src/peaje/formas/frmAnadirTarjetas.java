package peaje.formas;

import chrriis.dj.nativeswing.swtimpl.NativeInterface;
import java.awt.Container;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JRViewer;
import hibernate.cargar.Administrador;
import hibernate.cargar.validaciones;
import hibernate.*;
import hibernate.cargar.WorkingDirectory;
import java.awt.BorderLayout;
import java.awt.Image;
import java.io.File;
import java.io.IOException;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import sources.ClientesSource;
import sources.FacturaSource;
//import org.eclipse.persistence.internal.history.HistoricalDatabaseTable;

/**
 *
 * @author geovanny
 */
public class frmAnadirTarjetas extends javax.swing.JInternalFrame {

    /** Creates new form frmEmpresa */
    public boolean grabar = false;
    public boolean modificar = false;
    public List lista = null;
    public int posicion = 0;
    public int tamano = 0;
    private Container desktopContenedor;
    private Empresa empresaObj;
    Administrador adm;
    private String claveActual;
    private validaciones val;
    private frmPrincipal principal;
String separador = File.separatorChar + "";
  
    WorkingDirectory w = new WorkingDirectory();
    String ubicacionDirectorio = w.get() + separador;
    /** Creates new form frmProfesores */
    public frmAnadirTarjetas(Container contendor, Administrador adm1) {
        this.desktopContenedor = contendor;
//          super(parent,modal);
        adm = adm1;
        llenarCombo();
        initComponents();
//        this.setSize(636, 463);
        empresaObj = new Empresa();
        val = new validaciones();
        Date desde1 = new Date();
        Date hasta1 = new Date();
        desde1.setHours(06);
        desde1.setMinutes(00);
        desde1.setSeconds(00);
        hasta1.setHours(23);
        hasta1.setMinutes(59);
        hasta1.setSeconds(59);
  if (ubicacionDirectorio.contains("build")) {
                ubicacionDirectorio = ubicacionDirectorio.replace(separador + "build", "");
            }
            ubicacionDirectorio = ubicacionDirectorio+"manualpeaje"+separador;

    }
//
//    public frmReportes(java.awt.Frame parent, boolean modal,frmPrincipal lo) {
//        super(parent,modal);
//        this.desktopContenedor = lo.contenedor;
//        llenarCombo();
//        initComponents();
//        this.setSize(615, 508);
//        empresaObj = new Empresa();
//        adm = new Administrador();
//        val = new validaciones();
//        frmPrincipal = lo;
//    }

    public void llenarCombo() {

        try {
            perfilesList = new ArrayList<Global>();
            perfilesList = adm.query("Select o from Global as o where o.grupo = 'PER'");
        } catch (Exception ex) {
            Logger.getLogger(frmAnadirTarjetas.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

// <editor-fold defaultstate="collapsed" desc="PROPIEDADES">
    public String getClaveActual() {
        return claveActual;
    }

    public void setClaveActual(String claveActual) {
        this.claveActual = claveActual;
    }

    public Empresa getUsuarioObj() {
        return empresaObj;
    }

    public void setUsuarioObj(Empresa empresaObj) {
        this.empresaObj = empresaObj;
    }
    private List<Global> perfilesList = new ArrayList<Global>();

    public List<Global> getPerfilesList() {
        return perfilesList;
    }

    public void setPerfilesList(List<Global> perfilesList) {
        this.perfilesList = perfilesList;
    }

// </editor-fold>
// <editor-fold defaultstate="collapsed" desc="FUNCIONES ACCIONES">
    // </editor-fold >
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaTarjetas = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        desde = new javax.swing.JFormattedTextField();
        hasta = new javax.swing.JFormattedTextField();
        serie = new javax.swing.JFormattedTextField();
        btnAnadir = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setMaximizable(true);
        setTitle("Añadir Tarjetas");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/images/help.gif"))); // NOI18N
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                formKeyReleased(evt);
            }
        });
        getContentPane().setLayout(null);

        jPanel3.setBorder(new javax.swing.border.MatteBorder(new javax.swing.ImageIcon(getClass().getResource("/images_botones/fondoInicio.png")))); // NOI18N
        jPanel3.setLayout(null);

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 51, 51));
        jLabel8.setText("Tarjetas");
        jPanel3.add(jLabel8);
        jLabel8.setBounds(10, 0, 270, 15);

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(102, 102, 102));
        jLabel10.setText("Recuerde añadir tarjetas en secuencia de la misma serie ..::..");
        jPanel3.add(jLabel10);
        jLabel10.setBounds(10, 20, 600, 13);

        getContentPane().add(jPanel3);
        jPanel3.setBounds(0, 0, 601, 40);

        tablaTarjetas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Serie", "Tarjeta", "Hexa"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaTarjetas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tablaTarjetasKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(tablaTarjetas);
        tablaTarjetas.getColumnModel().getColumn(0).setResizable(false);
        tablaTarjetas.getColumnModel().getColumn(1).setResizable(false);
        tablaTarjetas.getColumnModel().getColumn(2).setResizable(false);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(30, 100, 520, 270);

        jLabel1.setText("Serie: ");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(30, 60, 31, 14);

        jLabel2.setText("Desde:");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(170, 60, 34, 14);

        jLabel3.setText("Hasta");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(310, 60, 28, 14);

        desde.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                desdeKeyReleased(evt);
            }
        });
        getContentPane().add(desde);
        desde.setBounds(210, 60, 90, 20);
        getContentPane().add(hasta);
        hasta.setBounds(350, 60, 110, 20);
        getContentPane().add(serie);
        serie.setBounds(60, 60, 100, 20);

        btnAnadir.setText("Añadir");
        btnAnadir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnadirActionPerformed(evt);
            }
        });
        getContentPane().add(btnAnadir);
        btnAnadir.setBounds(470, 60, 63, 23);

        jButton1.setText("Limpiar");
        getContentPane().add(jButton1);
        jButton1.setBounds(30, 370, 65, 23);

        jButton2.setText("Guardar");
        getContentPane().add(jButton2);
        jButton2.setBounds(480, 370, 73, 23);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyReleased
        // TODO add your handling code here:
        if (evt.getKeyCode() == evt.VK_ESCAPE) {
            this.setVisible(false);
        }
    }//GEN-LAST:event_formKeyReleased

    private void desdeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_desdeKeyReleased
        // TODO add your handling code here:
        //if(hasta.getText().isEmpty())
        hasta.setText(desde.getText());
    }//GEN-LAST:event_desdeKeyReleased

    private void btnAnadirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnadirActionPerformed
        // TODO add your handling code here:}
           DefaultTableModel dtm = (DefaultTableModel) tablaTarjetas.getModel();
                        dtm.getDataVector().removeAllElements();
                        int desdeInt = new Integer(desde.getText().trim());
                        int hastaInt = new Integer(hasta.getText().trim());
                        if(desdeInt > hastaInt){
                            JOptionPane.showMessageDialog(this, "Desde es menor a Hasta...!");
                            return;
                        }
                        
                        if(desde.getText().trim().equals(hasta.getText().trim())){
                          Object[] obj = new Object[4];
                            obj[0] = serie.getText();
                            obj[1] = desde.getText();
                            obj[2] =  ConvertHexaToDecimal.convertirHexadecimal(new Integer(serie.getText())).toUpperCase()+""+ConvertHexaToDecimal.convertirHexadecimal(new Integer(desde.getText())).toUpperCase();
                            dtm.addRow(obj);
                        }else{
                            int val = desdeInt;
                            for (int i = desdeInt; i < hastaInt; i++) {
                            Object[] obj = new Object[4];
                            obj[0] = serie.getText();
                            obj[1] = val;
                            obj[2] =  ConvertHexaToDecimal.convertirHexadecimal(new Integer(serie.getText())).toUpperCase()+""+ConvertHexaToDecimal.convertirHexadecimal(val).toUpperCase();
                            dtm.addRow(obj);
                            val++;
                            }
                         
                         
                        }
                        
                        tablaTarjetas.setModel(dtm);
    }//GEN-LAST:event_btnAnadirActionPerformed

    private void tablaTarjetasKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tablaTarjetasKeyPressed
        // TODO add your handling code here:
           if (evt.getKeyCode() == evt.VK_DELETE) {
            int fil = tablaTarjetas.getSelectedRow();
           
            DefaultTableModel dtm = (DefaultTableModel) tablaTarjetas.getModel();
            dtm.removeRow(fil);
//            dtm.moveRow(fil, fil, fil)
            tablaTarjetas.setModel(dtm);
//            this.sumar();

        }
    }//GEN-LAST:event_tablaTarjetasKeyPressed
 void abrirurl(String pagina){
     try {
            // TODO add your handling code here:
            Runtime.getRuntime().exec("rundll32 url.dll,FileProtocolHandler "+pagina);
        } catch (IOException ex) {
            Logger.getLogger(acerca.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    public void tickets(String dirreporte, String query, String titulo) {
        try {
            System.out.println("QUERY: " + query);
            JasperReport masterReport = (JasperReport) JRLoader.loadObject(dirreporte);
            Empresa emp = (Empresa) adm.querySimple("Select o from Empresa as o");

            List<Factura> fac = adm.query(query);
            ArrayList detalle = new ArrayList();
            for (Iterator<Factura> it = fac.iterator(); it.hasNext();) {
                Factura factura = it.next();
                detalle.add(factura);
            }
            FacturaSource ds = new FacturaSource(detalle);
            Map parametros = new HashMap();
            parametros.put("empresa", emp.getRazon());
            parametros.put("direccion", emp.getDireccion());
            parametros.put("telefono", emp.getTelefonos());
            parametros.put("titulo", titulo);
            parametros.put("parqueaderos", emp.getParqueaderos());



            JasperPrint masterPrint = JasperFillManager.fillReport(masterReport, parametros, ds);
            JRViewer reporte = new JRViewer(masterPrint); //PARA VER EL REPORTE ANTES DE IMPRIMIR

            reporte.repaint();
            reporte.setLocation(0, 0);
            reporte.setSize(723, 557);
            reporte.setVisible(true);

            this.repaint();
        } catch (Exception ex) {
            Logger.getLogger(frmTicket.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    public void clientes(String dirreporte, String query, String titulo) {
        try {
            JasperReport masterReport = (JasperReport) JRLoader.loadObject(dirreporte);
            Empresa emp = (Empresa) adm.querySimple("Select o from Empresa as o");

            List<Clientes> fac = adm.query(query);
            ArrayList detalle = new ArrayList();
            for (Iterator<Clientes> it = fac.iterator(); it.hasNext();) {
                Clientes factura = it.next();
                detalle.add(factura);
            }
            ClientesSource ds = new ClientesSource(detalle);
            Map parametros = new HashMap();
            parametros.put("empresa", emp.getRazon());
            parametros.put("direccion", emp.getDireccion());
            parametros.put("telefono", emp.getTelefonos());
            parametros.put("titulo", titulo);
            parametros.put("parqueaderos", emp.getParqueaderos());


            JasperPrint masterPrint = JasperFillManager.fillReport(masterReport, parametros, ds);
            JRViewer reporte = new JRViewer(masterPrint); //PARA VER EL REPORTE ANTES DE IMPRIMIR

            reporte.repaint();
            reporte.setLocation(0, 0);
            reporte.setSize(723, 557);
            reporte.setVisible(true);

            this.repaint();
        } catch (Exception ex) {
            Logger.getLogger(frmTicket.class.getName()).log(Level.SEVERE, null, ex);
        }

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAnadir;
    private javax.swing.JFormattedTextField desde;
    private javax.swing.JFormattedTextField hasta;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JFormattedTextField serie;
    private javax.swing.JTable tablaTarjetas;
    // End of variables declaration//GEN-END:variables
}
